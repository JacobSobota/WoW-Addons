local  RUI = select(2, ...):unpack()

function RUI:PlaterRedtuzk()
  PlaterDB["profiles"]["RedtuzkUI"] = {
    ["target_shady_combat_only"] = false,
    ["script_data"] = {
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
        ["Time"] = 1604599472,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
        ["Enabled"] = true,
        ["Revision"] = 355,
        ["semver"] = "",
        ["Author"] = "Izimode-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
        ["NpcNames"] = {
          "164362", -- [1]
          "168882", -- [2]
          "168988", -- [3]
          "170234", -- [4]
          "165905", -- [5]
          "170452", -- [6]
        },
        ["version"] = -1,
        ["PlaterCore"] = 1,
        ["Name"] = "Unit - Important [Plater]",
        ["SpellIds"] = {
        },
        ["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option6",
            ["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
            ["Name"] = "Option 6",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Key"] = "changeNameplateColor",
            ["Value"] = true,
            ["Name"] = "Change Nameplate Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "change to true to change the color",
          }, -- [4]
          {
            ["Type"] = 1,
            ["Key"] = "nameplateColor",
            ["Value"] = {
              1, -- [1]
              0, -- [2]
              0.52549019607843, -- [3]
              1, -- [4]
            },
            ["Name"] = "Nameplate Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 2,
            ["Max"] = 6,
            ["Desc"] = "increase the nameplate height by this value",
            ["Min"] = 0,
            ["Key"] = "nameplateSizeOffset",
            ["Value"] = 3,
            ["Name"] = "Nameplate Size Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [6]
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 1,
            ["Key"] = "dotsColor",
            ["Value"] = {
              1, -- [1]
              0.71372549019608, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Dot Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [9]
          {
            ["Type"] = 5,
            ["Key"] = "option10",
            ["Value"] = "Skull Texture",
            ["Name"] = "Skull Texture",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [10]
          {
            ["Type"] = 1,
            ["Key"] = "skullColor",
            ["Value"] = {
              1, -- [1]
              0.46274509803922, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Skull Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [11]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "",
            ["Min"] = 0,
            ["Key"] = "skullAlpha",
            ["Value"] = 0.2,
            ["Name"] = "Alpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [12]
          {
            ["Type"] = 2,
            ["Max"] = 2,
            ["Desc"] = "",
            ["Min"] = 0.4,
            ["Key"] = "skullScale",
            ["Value"] = 0.6,
            ["Name"] = "Scale",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [13]
        },
      }, -- [1]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
        ["Time"] = 1607126229,
        ["NpcNames"] = {
        },
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option1",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option3",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Key"] = "glowEnabled",
            ["Value"] = false,
            ["Name"] = "Glow Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 1,
            ["Key"] = "glowColor",
            ["Value"] = {
              0.40392156862745, -- [1]
              0.003921568627451, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Glow Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Key"] = "option3",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 4,
            ["Key"] = "dotsEnabled",
            ["Value"] = true,
            ["Name"] = "Dots Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 1,
            ["Key"] = "dotsColor",
            ["Value"] = {
              1, -- [1]
              0.32156862745098, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Dots Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [8]
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
        ["Revision"] = 608,
        ["semver"] = "",
        ["Desc"] = "Add the buff name in the trigger box.",
        ["version"] = -1,
        ["Author"] = "Tercioo-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
        ["Name"] = "Aura - Buff Alert [Plater]",
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
        ["SpellIds"] = {
          323149, -- [1]
          324392, -- [2]
          340544, -- [3]
          342189, -- [4]
          333227, -- [5]
        },
        ["PlaterCore"] = 1,
        ["Prio"] = 99,
        ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Enabled"] = true,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
      }, -- [2]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
        ["OptionsValues"] = {
          ["castBarColor"] = {
            0.4117647058823529, -- [1]
            1, -- [2]
            0, -- [3]
            1, -- [4]
          },
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
        ["Time"] = 1608755332,
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
        ["url"] = "",
        ["NpcNames"] = {
        },
        ["semver"] = "",
        ["Enabled"] = true,
        ["Revision"] = 704,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option1",
            ["Value"] = 0,
            ["Name"] = "Option 1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Plays a big animation when the cast start.",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Option 4",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Flash:",
            ["Name"] = "Flash",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 2,
            ["Max"] = 1.2,
            ["Desc"] = "How long is the flash played when the cast starts.",
            ["Min"] = 0.1,
            ["Key"] = "flashDuration",
            ["Value"] = 0.8,
            ["Name"] = "Flash Duration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [6]
          {
            ["Type"] = 1,
            ["Key"] = "flashColor",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Flash Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the Flash",
          }, -- [7]
          {
            ["Type"] = 6,
            ["Key"] = "option7",
            ["Value"] = 0,
            ["Name"] = "Option 7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Shake:",
            ["Name"] = "Shake",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 0.5,
            ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
            ["Min"] = 0.1,
            ["Key"] = "shakeDuration",
            ["Value"] = 0.2,
            ["Name"] = "Shake Duration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "How strong is the shake.",
            ["Min"] = 1,
            ["Key"] = "shakeAmplitude",
            ["Value"] = 5,
            ["Name"] = "Shake Amplitude",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [11]
          {
            ["Type"] = 2,
            ["Max"] = 80,
            ["Desc"] = "How fast the shake moves.",
            ["Min"] = 1,
            ["Key"] = "shakeFrequency",
            ["Value"] = 40,
            ["Name"] = "Shake Frequency",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [12]
          {
            ["Type"] = 6,
            ["Key"] = "option13",
            ["Value"] = 0,
            ["Name"] = "Option 13",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [13]
          {
            ["Type"] = 5,
            ["Key"] = "option14",
            ["Value"] = "Dot Animation:",
            ["Name"] = "Dot Animation",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [14]
          {
            ["Type"] = 1,
            ["Key"] = "dotColor",
            ["Value"] = {
              0.56470588235294, -- [1]
              0.56470588235294, -- [2]
              0.56470588235294, -- [3]
              1, -- [4]
            },
            ["Name"] = "Dot Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Adjust the color of the dots around the nameplate",
          }, -- [15]
          {
            ["Type"] = 2,
            ["Max"] = 20,
            ["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
            ["Min"] = -10,
            ["Key"] = "xOffset",
            ["Value"] = 8,
            ["Name"] = "Dot X Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [16]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
            ["Min"] = -10,
            ["Key"] = "yOffset",
            ["Value"] = 3,
            ["Name"] = "Dot Y Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [17]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [18]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [19]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [20]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [21]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [22]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [23]
          {
            ["Type"] = 5,
            ["Key"] = "option19",
            ["Value"] = "Cast Bar",
            ["Name"] = "Option 19",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [24]
          {
            ["Type"] = 4,
            ["Key"] = "useCastbarColor",
            ["Value"] = true,
            ["Name"] = "Use Cast Bar Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Use cast bar color.",
          }, -- [25]
          {
            ["Type"] = 1,
            ["Key"] = "castBarColor",
            ["Value"] = {
              0.41176470588235, -- [1]
              1, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Cast Bar Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Cast bar color.",
          }, -- [26]
        },
        ["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
        ["Prio"] = 99,
        ["Author"] = "Bombad�o-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
        ["version"] = -1,
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
        ["Name"] = "Cast - Very Important [Plater]",
        ["PlaterCore"] = 1,
        ["SpellIds"] = {
          321247, -- [1]
          334522, -- [2]
          320232, -- [3]
          319962, -- [4]
          325879, -- [5]
          324427, -- [6]
          322999, -- [7]
          325360, -- [8]
          322903, -- [9]
          324103, -- [10]
          333294, -- [11]
          333540, -- [12]
          319521, -- [13]
          326021, -- [14]
          326450, -- [15]
          322711, -- [16]
          329104, -- [17]
          295000, -- [18]
          242391, -- [19]
          320197, -- [20]
          329608, -- [21]
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
        ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
      }, -- [3]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["Time"] = 1607270486,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
        ["Revision"] = 352,
        ["semver"] = "",
        ["NpcNames"] = {
        },
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option1",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option3",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Key"] = "glowEnabled",
            ["Value"] = false,
            ["Name"] = "Glow Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 1,
            ["Key"] = "glowColor",
            ["Value"] = {
              0.40392156862745, -- [1]
              0.003921568627451, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Glow Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Key"] = "option3",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 4,
            ["Key"] = "dotsEnabled",
            ["Value"] = true,
            ["Name"] = "Dots Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 1,
            ["Key"] = "dotsColor",
            ["Value"] = {
              1, -- [1]
              0.32156862745098, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Dots Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [8]
        },
        ["Author"] = "Tercioo-Sylvanas",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
        ["Desc"] = "Add the debuff name in the trigger box.",
        ["Name"] = "Aura - Debuff Alert [Plater]",
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["SpellIds"] = {
          337220, -- [1]
          337253, -- [2]
          337251, -- [3]
        },
        ["PlaterCore"] = 1,
        ["version"] = -1,
        ["Prio"] = 99,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
        ["Enabled"] = true,
      }, -- [4]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
        ["Time"] = 1607126228,
        ["NpcNames"] = {
        },
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option1",
            ["Value"] = 0,
            ["Name"] = "Blank Line",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Key"] = "option3",
            ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
            ["Name"] = "Option 3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 4,
            ["Key"] = "useCastbarColor",
            ["Value"] = true,
            ["Name"] = "Cast Bar Color Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "When enabled, changes the cast bar color,",
          }, -- [5]
          {
            ["Type"] = 1,
            ["Key"] = "castbarColor",
            ["Value"] = {
              1, -- [1]
              0.43137254901961, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Cast Bar Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the cast bar.",
          }, -- [6]
          {
            ["Type"] = 6,
            ["Key"] = "option7",
            ["Value"] = 0,
            ["Name"] = "Blank Line",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
            ["Min"] = 0.05,
            ["Key"] = "flashDuration",
            ["Value"] = 0.4,
            ["Name"] = "Flash Duration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Increases the cast bar height by this value",
            ["Min"] = 0,
            ["Key"] = "castBarHeight",
            ["Value"] = 5,
            ["Name"] = "Cast Bar Height Mod",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
            ["Min"] = 0.1,
            ["Key"] = "shakeDuration",
            ["Value"] = 0.2,
            ["Name"] = "Shake Duration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 100,
            ["Desc"] = "How strong is the shake.",
            ["Min"] = 2,
            ["Key"] = "shakeAmplitude",
            ["Value"] = 8,
            ["Name"] = "Shake Amplitude",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [11]
          {
            ["Type"] = 2,
            ["Max"] = 80,
            ["Desc"] = "How fast the shake moves.",
            ["Min"] = 1,
            ["Key"] = "shakeFrequency",
            ["Value"] = 40,
            ["Name"] = "Shake Frequency",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [12]
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
        ["Revision"] = 973,
        ["semver"] = "",
        ["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
        ["version"] = -1,
        ["Author"] = "Tercioo-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
        ["Name"] = "Cast - Big Alert [Plater]",
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
        ["SpellIds"] = {
          338353, -- [1]
          334748, -- [2]
          334749, -- [3]
          320784, -- [4]
          341352, -- [5]
          341520, -- [6]
          341522, -- [7]
          336005, -- [8]
          339777, -- [9]
          331933, -- [10]
          326617, -- [11]
          324914, -- [12]
          324776, -- [13]
          326046, -- [14]
          340634, -- [15]
          319070, -- [16]
          328295, -- [17]
          317936, -- [18]
          327413, -- [19]
          319654, -- [20]
          323821, -- [21]
          320772, -- [22]
          324293, -- [23]
          330562, -- [24]
          330868, -- [25]
          341902, -- [26]
          342139, -- [27]
          342675, -- [28]
          323190, -- [29]
          332836, -- [30]
          327648, -- [31]
          328217, -- [32]
          322938, -- [33]
          340544, -- [34]
          325876, -- [35]
          325700, -- [36]
          323552, -- [37]
          332666, -- [38]
          332612, -- [39]
          332706, -- [40]
          340026, -- [41]
          294171, -- [42]
          292910, -- [43]
          294165, -- [44]
          338871, -- [45]
          330813, -- [46]
          335694, -- [47]
          327461, -- [48]
          329787, -- [49]
          304946, -- [50]
          15245, -- [51]
          276754, -- [52]
          304831, -- [53]
          277036, -- [54]
          320657, -- [55]
          294362, -- [56]
          270248, -- [57]
          292926, -- [58]
        },
        ["PlaterCore"] = 1,
        ["Prio"] = 99,
        ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
        ["Enabled"] = true,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
      }, -- [5]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
        ["Time"] = 1606591522,
        ["NpcNames"] = {
        },
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option1",
            ["Value"] = 0,
            ["Name"] = "Option 1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Plays a small animation when the cast start.",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Key"] = "option3",
            ["Value"] = 0,
            ["Name"] = "Option 3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 2,
            ["Max"] = 1.2,
            ["Desc"] = "How long is the flash played when the cast starts.",
            ["Min"] = 0.1,
            ["Key"] = "flashDuration",
            ["Value"] = 0.6,
            ["Name"] = "Flash Duration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [5]
          {
            ["Type"] = 1,
            ["Key"] = "flashColor",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Flash Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the Flash",
          }, -- [6]
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
        ["Revision"] = 598,
        ["semver"] = "",
        ["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
        ["version"] = -1,
        ["Author"] = "Tercioo-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
        ["Name"] = "Cast - Small Alert [Plater]",
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
        ["SpellIds"] = {
          320170, -- [1]
          320171, -- [2]
          320462, -- [3]
          330712, -- [4]
          332170, -- [5]
          333875, -- [6]
          326836, -- [7]
          342135, -- [8]
          333861, -- [9]
          341969, -- [10]
          317963, -- [11]
          327481, -- [12]
          328331, -- [13]
          322614, -- [14]
          325701, -- [15]
          326438, -- [16]
          323538, -- [17]
          321764, -- [18]
          296523, -- [19]
          330755, -- [20]
          295929, -- [21]
          296019, -- [22]
          335685, -- [23]
          170751, -- [24]
          342207, -- [25]
        },
        ["PlaterCore"] = 1,
        ["Prio"] = 99,
        ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Enabled"] = true,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
      }, -- [6]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
        ["Time"] = 1607270486,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["Revision"] = 111,
        ["Options"] = {
        },
        ["Author"] = "Izimode-Azralon",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["NpcNames"] = {
        },
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
        ["Name"] = "Aura - Invalidate Unit [Plater]",
        ["PlaterCore"] = 1,
        ["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
        ["SpellIds"] = {
          261265, -- [1]
          261266, -- [2]
          271590, -- [3]
        },
        ["Prio"] = 99,
        ["Enabled"] = true,
      }, -- [7]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
        ["Time"] = 1582894338,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
        ["Icon"] = 135024,
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
        ["Revision"] = 68,
        ["Options"] = {
        },
        ["Author"] = "Izimode-Azralon",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
        ["NpcNames"] = {
          "141851", -- [1]
        },
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
        ["Name"] = "Color Change [Plater]",
        ["PlaterCore"] = 1,
        ["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
        ["SpellIds"] = {
        },
        ["Prio"] = 99,
        ["Enabled"] = true,
      }, -- [8]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
        ["Time"] = 1607270485,
        ["NpcNames"] = {
        },
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option10",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option17",
            ["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
            ["Name"] = "Option 17",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option10",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Key"] = "blinkEnabled",
            ["Value"] = true,
            ["Name"] = "Blink Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'false' to disable blink",
          }, -- [4]
          {
            ["Type"] = 4,
            ["Key"] = "glowEnabled",
            ["Value"] = true,
            ["Name"] = "Glow Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'false' to disable glows",
          }, -- [5]
          {
            ["Type"] = 4,
            ["Key"] = "changeNameplateColor",
            ["Value"] = true,
            ["Name"] = "Change NamePlate Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'true' to enable nameplate color change",
          }, -- [6]
          {
            ["Type"] = 2,
            ["Max"] = 20,
            ["Desc"] = "in seconds, affects the blink effect only",
            ["Min"] = 1,
            ["Key"] = "timeleftToBlink",
            ["Value"] = 3,
            ["Name"] = "Timeleft to Blink",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [7]
          {
            ["Type"] = 2,
            ["Max"] = 3,
            ["Desc"] = "time to complete a blink loop",
            ["Min"] = 0.5,
            ["Key"] = "blinkSpeed",
            ["Value"] = 1,
            ["Name"] = "Blink Speed",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
            ["Min"] = 0.1,
            ["Key"] = "blinkMaxAlpha",
            ["Value"] = 0.6,
            ["Name"] = "Blink Max Alpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [9]
          {
            ["Type"] = 1,
            ["Key"] = "blinkColor",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Blink Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "color of the blink",
          }, -- [10]
          {
            ["Type"] = 1,
            ["Key"] = "",
            ["Value"] = {
              0.28627450980392, -- [1]
              0.003921568627451, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Nameplate Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "nameplate color if ChangeNameplateColor is true",
          }, -- [11]
          {
            ["Type"] = 6,
            ["Key"] = "option10",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [12]
          {
            ["Type"] = 4,
            ["Key"] = "timerColorEnabled",
            ["Value"] = true,
            ["Name"] = "Timer Color Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'false' to disable changes in the color of the time left text",
          }, -- [13]
          {
            ["Type"] = 2,
            ["Max"] = 20,
            ["Desc"] = "in seconds, affects the color of the text",
            ["Min"] = 1,
            ["Key"] = "timeLeftWarning",
            ["Value"] = 8,
            ["Name"] = "Time Left Warning",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [14]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "in seconds, affects the color of the text",
            ["Min"] = 1,
            ["Key"] = "timeLeftCritical",
            ["Value"] = 3,
            ["Name"] = "Time Left Critical",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [15]
          {
            ["Type"] = 1,
            ["Key"] = "warningColor",
            ["Value"] = {
              1, -- [1]
              0.87058823529412, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Warning Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "color when the time left entered in a warning zone",
          }, -- [16]
          {
            ["Type"] = 1,
            ["Key"] = "criticalColor",
            ["Value"] = {
              1, -- [1]
              0.074509803921569, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Critical Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "color when the time left is critical",
          }, -- [17]
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
        ["Revision"] = 334,
        ["semver"] = "",
        ["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
        ["version"] = -1,
        ["Author"] = "Izimode-Azralon",
        ["Initialization"] = "					function (scriptTable)\n						--insert code here\n						\n					end\n				",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
        ["Name"] = "Aura - Blink by Time Left [Plater]",
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Prio"] = 99,
        ["Temp_Initialization"] = "					function (scriptTable)\n						--insert code here\n						\n					end\n				",
        ["Enabled"] = true,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
      }, -- [9]
      {
        ["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
        ["Time"] = 1582894405,
        ["Temp_ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
        ["Icon"] = 133006,
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
        ["Revision"] = 48,
        ["Options"] = {
        },
        ["Author"] = "Izimode-Azralon",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
        ["NpcNames"] = {
        },
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
        ["Name"] = "Aura - Border Color [Plater]",
        ["PlaterCore"] = 1,
        ["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
        ["SpellIds"] = {
        },
        ["Prio"] = 99,
        ["Enabled"] = false,
      }, -- [10]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
        ["Time"] = 1582894414,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
        ["Icon"] = 136048,
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
        ["Revision"] = 133,
        ["Options"] = {
        },
        ["Author"] = "Celian-Sylvanas",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
        ["NpcNames"] = {
          "Guardian of Yogg-Saron", -- [1]
        },
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
        ["Name"] = "UnitPower [Plater]",
        ["PlaterCore"] = 1,
        ["Desc"] = "Show the energy amount above the nameplate",
        ["SpellIds"] = {
        },
        ["Prio"] = 99,
        ["Enabled"] = true,
      }, -- [11]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
        ["Time"] = 1607270488,
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
        ["url"] = "",
        ["NpcNames"] = {
        },
        ["semver"] = "",
        ["Enabled"] = true,
        ["Revision"] = 467,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option1",
            ["Value"] = 0,
            ["Name"] = "Option 1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Key"] = "option4",
            ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
            ["Name"] = "Option 4",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Key"] = "option3",
            ["Value"] = 0,
            ["Name"] = "Option 3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Set the alpha of the moving arrow",
            ["Min"] = 0,
            ["Key"] = "arrowAlpha",
            ["Value"] = 0.275,
            ["Name"] = "Arrow Alpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [5]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Time that takes for an arrow to travel from the to right.",
            ["Min"] = 0,
            ["Key"] = "animSpeed",
            ["Value"] = 0.2,
            ["Name"] = "Animation Speed",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [6]
          {
            ["Type"] = 4,
            ["Key"] = "desaturateArrow",
            ["Value"] = false,
            ["Name"] = "Use White Arrow",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "If enabled, the arrow color will be desaturated.",
          }, -- [7]
        },
        ["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
        ["Prio"] = 99,
        ["Author"] = "Izimode-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
        ["version"] = -1,
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
        ["Name"] = "Cast - Frontal Cone [Plater]",
        ["PlaterCore"] = 1,
        ["SpellIds"] = {
          323489, -- [1]
          323496, -- [2]
          319941, -- [3]
          319592, -- [4]
          334266, -- [5]
          325258, -- [6]
          334913, -- [7]
          326221, -- [8]
          322936, -- [9]
          323236, -- [10]
          321834, -- [11]
          336752, -- [12]
          325418, -- [13]
          324667, -- [14]
          327233, -- [15]
          324368, -- [16]
          324205, -- [17]
          323943, -- [18]
          319713, -- [19]
          320596, -- [20]
          320729, -- [21]
          323608, -- [22]
          330614, -- [23]
          320063, -- [24]
          332708, -- [25]
          334023, -- [26]
          317231, -- [27]
          317943, -- [28]
          320966, -- [29]
          334053, -- [30]
          328458, -- [31]
          321968, -- [32]
          331718, -- [33]
          325793, -- [34]
          330453, -- [35]
          326997, -- [36]
          334051, -- [37]
          292903, -- [38]
          330843, -- [39]
          294173, -- [40]
          189200, -- [41]
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
        ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
      }, -- [12]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
        ["Time"] = 1609254913,
        ["NpcNames"] = {
          "165560", -- [1]
        },
        ["url"] = "",
        ["Icon"] = 1029718,
        ["Options"] = {
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
        ["Revision"] = 274,
        ["semver"] = "",
        ["Desc"] = "Show above the nameplate who is the player fixated",
        ["version"] = -1,
        ["Author"] = "Celian-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["Name"] = "Fixate [Plater]",
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Prio"] = 99,
        ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
        ["Enabled"] = true,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
      }, -- [13]
      {
        ["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        ["Time"] = 1604087921,
        ["url"] = "",
        ["Icon"] = 841383,
        ["Enabled"] = true,
        ["Revision"] = 266,
        ["Options"] = {
        },
        ["Author"] = "Tecno-Azralon",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["NpcNames"] = {
        },
        ["version"] = -1,
        ["PlaterCore"] = 1,
        ["Name"] = "Fixate On You [Plater]",
        ["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
        ["SpellIds"] = {
          "spawn of g'huun", -- [1]
          "smuggled crawg", -- [2]
          "sergeant bainbridge", -- [3]
          "blacktooth scrapper", -- [4]
          "irontide grenadier", -- [5]
          "feral bloodswarmer", -- [6]
          "earthrager", -- [7]
          "crawler mine", -- [8]
          "rezan", -- [9]
        },
        ["semver"] = "",
      }, -- [14]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.SetNameplateColor (unitFrame)\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.SetNameplateColor (unitFrame, \"#0085ff\")\nend\n\n\n",
        ["Time"] = 1606591382,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["Icon"] = 134441,
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.SetNameplateColor (unitFrame)\nend\n\n\n",
        ["Revision"] = 24,
        ["Options"] = {
        },
        ["Author"] = "Aldarana-Kazzak",
        ["OnShowCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
        ["NpcNames"] = {
        },
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.SetNameplateColor (unitFrame, \"#0085ff\")\nend\n\n\n",
        ["Name"] = "Deadeye Spyglass",
        ["PlaterCore"] = 1,
        ["Desc"] = "",
        ["SpellIds"] = {
          268756, -- [1]
        },
        ["Prio"] = 99,
        ["Enabled"] = true,
      }, -- [15]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
        ["Time"] = 1607270490,
        ["NpcNames"] = {
        },
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option1",
            ["Value"] = 0,
            ["Name"] = "Option 1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Plays a special animation showing the explosion time.",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option3",
            ["Value"] = 0,
            ["Name"] = "Option 3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 2,
            ["Max"] = 6,
            ["Desc"] = "Increases the health bar height by this value",
            ["Min"] = 0,
            ["Key"] = "castBarHeight",
            ["Value"] = 3,
            ["Name"] = "Health Bar Height Mod",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [4]
          {
            ["Type"] = 1,
            ["Key"] = "healthBarColor",
            ["Value"] = {
              1, -- [1]
              0.5843137254902, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Health Bar Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Changes the health bar color to this one.",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Key"] = "option7",
            ["Value"] = 0,
            ["Name"] = "Option 7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 5,
            ["Key"] = "option6",
            ["Value"] = "Arrow:",
            ["Name"] = "Arrow:",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 4,
            ["Key"] = "showArrow",
            ["Value"] = true,
            ["Name"] = "Show Arrow",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Arrow alpha.",
            ["Min"] = 0,
            ["Key"] = "arrowAlpha",
            ["Value"] = 0.5,
            ["Name"] = "Arrow Alpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 12,
            ["Desc"] = "Arrow Width.",
            ["Min"] = 4,
            ["Key"] = "arrowWidth",
            ["Value"] = 8,
            ["Name"] = "Arrow Width",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 12,
            ["Desc"] = "Arrow Height.",
            ["Min"] = 4,
            ["Key"] = "arrowHeight",
            ["Value"] = 8,
            ["Name"] = "Arrow Height",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [11]
          {
            ["Type"] = 6,
            ["Key"] = "option13",
            ["Value"] = 0,
            ["Name"] = "Option 13",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [12]
          {
            ["Type"] = 5,
            ["Key"] = "option12",
            ["Value"] = "Dot Animation:",
            ["Name"] = "Dot Animation:",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [13]
          {
            ["Type"] = 1,
            ["Key"] = "dotColor",
            ["Value"] = {
              1, -- [1]
              0.6156862745098, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Dot Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Adjust the color of the dot animation.",
          }, -- [14]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Dot X Offset",
            ["Min"] = -10,
            ["Key"] = "xOffset",
            ["Value"] = 4,
            ["Name"] = "Dot X Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [15]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Dot Y Offset",
            ["Min"] = -10,
            ["Key"] = "yOffset",
            ["Value"] = 3,
            ["Name"] = "Dot Y Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [16]
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
        ["Revision"] = 517,
        ["semver"] = "",
        ["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
        ["version"] = -1,
        ["Author"] = "Bombad�o-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
        ["Name"] = "Cast - Ultra Important [P]",
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
        ["SpellIds"] = {
          332329, -- [1]
          320103, -- [2]
          321406, -- [3]
          335817, -- [4]
          321061, -- [5]
          320141, -- [6]
          326171, -- [7]
        },
        ["PlaterCore"] = 1,
        ["Prio"] = 99,
        ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Enabled"] = true,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
      }, -- [16]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
        ["Time"] = 1607270486,
        ["url"] = "",
        ["NpcNames"] = {
          "163520", -- [1]
          "163618", -- [2]
          "164506", -- [3]
        },
        ["Options"] = {
          {
            ["Type"] = 5,
            ["Key"] = "option1",
            ["Value"] = "Auto set a raid target Skull on the unit.",
            ["Name"] = "Option 1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 6,
            ["Key"] = "option2",
            ["Value"] = 0,
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 4,
            ["Key"] = "onlyInCombat",
            ["Value"] = false,
            ["Name"] = "Only in Combat",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Set the mark only if the unit is in combat.",
          }, -- [3]
        },
        ["Enabled"] = true,
        ["Revision"] = 73,
        ["semver"] = "",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        ["Name"] = "Auto Set Skull",
        ["Author"] = "Aelerolor-Torghast",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Auto set skull marker",
        ["SpellIds"] = {
        },
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
        ["version"] = -1,
        ["PlaterCore"] = 1,
        ["Prio"] = 99,
        ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
      }, -- [17]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
        ["Time"] = 1604607993,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
        ["Enabled"] = true,
        ["Revision"] = 406,
        ["semver"] = "",
        ["Author"] = "Izimode-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
        ["NpcNames"] = {
          "156212", -- [1]
          "168098", -- [2]
        },
        ["version"] = -1,
        ["PlaterCore"] = 1,
        ["Name"] = "Unit - Main Target [P]",
        ["SpellIds"] = {
        },
        ["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option6",
            ["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
            ["Name"] = "Option 6",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Key"] = "changeNameplateColor",
            ["Value"] = true,
            ["Name"] = "Change Nameplate Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "change to true to change the color",
          }, -- [4]
          {
            ["Type"] = 1,
            ["Key"] = "nameplateColor",
            ["Value"] = {
              1, -- [1]
              0, -- [2]
              0.52549019607843, -- [3]
              1, -- [4]
            },
            ["Name"] = "Nameplate Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 2,
            ["Max"] = 6,
            ["Desc"] = "increase the nameplate height by this value",
            ["Min"] = 0,
            ["Key"] = "nameplateSizeOffset",
            ["Value"] = 0,
            ["Name"] = "Nameplate Size Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [6]
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 1,
            ["Key"] = "dotsColor",
            ["Value"] = {
              1, -- [1]
              0.71372549019608, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Dot Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [9]
        },
      }, -- [18]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        ["Time"] = 1604354364,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
        ["Enabled"] = true,
        ["Revision"] = 206,
        ["semver"] = "",
        ["Author"] = "Aelerolor-Torghast",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        ["NpcNames"] = {
          "164427", -- [1]
          "164414", -- [2]
          "164185", -- [3]
          "164567", -- [4]
          "165408", -- [5]
        },
        ["version"] = -1,
        ["PlaterCore"] = 1,
        ["Name"] = "Countdown",
        ["SpellIds"] = {
        },
        ["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
        ["Options"] = {
        },
      }, -- [19]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
        ["Time"] = 1609607074,
        ["NpcNames"] = {
          "164451", -- [1]
          "164463", -- [2]
          "164461", -- [3]
          "165946", -- [4]
          "164501", -- [5]
          "164218", -- [6]
        },
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
        ["Options"] = {
          {
            ["Type"] = 5,
            ["Key"] = "option1",
            ["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
            ["Name"] = "Option 1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 6,
            ["Key"] = "",
            ["Value"] = 0,
            ["Name"] = "blank line",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 1,
            ["Key"] = "indicatorColor",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Vertical Line Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Indicator color.",
          }, -- [3]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Indicator alpha.",
            ["Min"] = 0.1,
            ["Key"] = "indicatorAlpha",
            ["Value"] = 0.79,
            ["Name"] = "Vertical Line Alpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [4]
          {
            ["Type"] = 6,
            ["Key"] = "",
            ["Value"] = 0,
            ["Name"] = "blank line",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 1,
            ["Key"] = "fillColor",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Fill Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Fill color.",
          }, -- [6]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Fill alpha.",
            ["Min"] = 0,
            ["Key"] = "fillAlpha",
            ["Value"] = 0.2,
            ["Name"] = "Fill Alpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [7]
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
        ["Revision"] = 110,
        ["semver"] = "",
        ["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
        ["version"] = -1,
        ["Author"] = "Aelerolor-Torghast",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
        ["Name"] = "Unit - Health Markers [P]",
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Prio"] = 99,
        ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Enabled"] = true,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
      }, -- [20]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
        ["Time"] = 1607270489,
        ["NpcNames"] = {
        },
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option1",
            ["Value"] = 0,
            ["Name"] = "Blank Line",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Key"] = "option3",
            ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
            ["Name"] = "Option 3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 4,
            ["Key"] = "useCastbarColor",
            ["Value"] = true,
            ["Name"] = "Cast Bar Color Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "When enabled, changes the cast bar color,",
          }, -- [5]
          {
            ["Type"] = 1,
            ["Key"] = "castbarColor",
            ["Value"] = {
              1, -- [1]
              0.43137254901961, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Cast Bar Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the cast bar.",
          }, -- [6]
          {
            ["Type"] = 6,
            ["Key"] = "option7",
            ["Value"] = 0,
            ["Name"] = "Blank Line",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
            ["Min"] = 0.05,
            ["Key"] = "flashDuration",
            ["Value"] = 0.2,
            ["Name"] = "Flash Duration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Increases the cast bar height by this value",
            ["Min"] = 0,
            ["Key"] = "castBarHeight",
            ["Value"] = 0,
            ["Name"] = "Cast Bar Height Mod",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
            ["Min"] = 0.1,
            ["Key"] = "shakeDuration",
            ["Value"] = 0.1,
            ["Name"] = "Shake Duration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 200,
            ["Desc"] = "How strong is the shake.",
            ["Min"] = 10,
            ["Key"] = "shakeAmplitude",
            ["Value"] = 25,
            ["Name"] = "Shake Amplitude",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [11]
          {
            ["Type"] = 2,
            ["Max"] = 80,
            ["Desc"] = "How fast the shake moves.",
            ["Min"] = 1,
            ["Key"] = "shakeFrequency",
            ["Value"] = 30,
            ["Name"] = "Shake Frequency",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [12]
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
        ["Revision"] = 835,
        ["semver"] = "",
        ["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
        ["version"] = -1,
        ["Author"] = "Tercioo-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
        ["Name"] = "Cast - Tank Interrupt [P]",
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
        ["SpellIds"] = {
          321828, -- [1]
        },
        ["PlaterCore"] = 1,
        ["Prio"] = 99,
        ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
        ["Enabled"] = true,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
      }, -- [21]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
        ["Time"] = 1604357453,
        ["url"] = "",
        ["Icon"] = 136048,
        ["Enabled"] = true,
        ["Revision"] = 233,
        ["semver"] = "",
        ["Author"] = "Celian-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
        ["NpcNames"] = {
          "164406", -- [1]
          "164407", -- [2]
          "162100", -- [3]
          "162099", -- [4]
          "162329", -- [5]
          "164558", -- [6]
        },
        ["version"] = -1,
        ["PlaterCore"] = 1,
        ["Name"] = "Unit - Show Energy [Plater]",
        ["SpellIds"] = {
        },
        ["Desc"] = "Show the energy amount above the nameplate.",
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option1",
            ["Value"] = 0,
            ["Name"] = "Option 1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option3",
            ["Value"] = "Show the power of the unit above the nameplate.",
            ["Name"] = "script desc",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Key"] = "option3",
            ["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
            ["Name"] = "add trigger",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Key"] = "option2",
            ["Value"] = 0,
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 4,
            ["Key"] = "showLater",
            ["Value"] = true,
            ["Name"] = "Show at 80% of Energy",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Key"] = "option2",
            ["Value"] = 0,
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 2,
            ["Max"] = 32,
            ["Desc"] = "Text size.",
            ["Min"] = 8,
            ["Key"] = "fontSize",
            ["Value"] = 16,
            ["Name"] = "Text Size",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [7]
          {
            ["Type"] = 1,
            ["Key"] = "fontColor",
            ["Value"] = {
              0.80392156862745, -- [1]
              0.80392156862745, -- [2]
              0.80392156862745, -- [3]
              1, -- [4]
            },
            ["Name"] = "Font Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the text.",
          }, -- [8]
          {
            ["Type"] = 4,
            ["Key"] = "outline",
            ["Value"] = true,
            ["Name"] = "Enable Text Outline",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "If enabled, the text uses outline.",
          }, -- [9]
        },
      }, -- [22]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            if target and target ~= \"\" then\n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName (plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            end\n        end\n    end\nend",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n    end\nend\n\n\n\n\n\n",
        ["OptionsValues"] = {
          ["bgWidth"] = 30,
          ["textColor"] = {
            1, -- [1]
            1, -- [2]
            1, -- [3]
            1, -- [4]
          },
        },
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
        ["Time"] = 1609281290,
        ["url"] = "",
        ["Icon"] = 135945,
        ["Enabled"] = true,
        ["Revision"] = 132,
        ["semver"] = "",
        ["Author"] = "Symantec-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Time to die Spiteful affix",
        ["NpcNames"] = {
          "174773", -- [1]
        },
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Name"] = "M+ Spiteful",
        ["version"] = -1,
        ["Options"] = {
          {
            ["Type"] = 2,
            ["Max"] = 50,
            ["Desc"] = "",
            ["Min"] = 10,
            ["Fraction"] = false,
            ["Value"] = 27,
            ["Name"] = "Width",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "bgWidth",
          }, -- [1]
          {
            ["Type"] = 1,
            ["Name"] = "Background Color",
            ["Value"] = {
              0.5058823529411764, -- [1]
              0.07058823529411765, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Key"] = "bgColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Name"] = "Option 5",
            ["Value"] = 0,
            ["Key"] = "option5",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 2,
            ["Max"] = 24,
            ["Desc"] = "",
            ["Min"] = 7,
            ["Fraction"] = false,
            ["Value"] = 8,
            ["Name"] = "Text Size",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "textSize",
          }, -- [4]
          {
            ["Type"] = 1,
            ["Name"] = "Text Color",
            ["Value"] = {
              1, -- [1]
              0.5843137254901961, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "textColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Key"] = "option7",
            ["Value"] = 0,
            ["Name"] = "Option 7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 4,
            ["Key"] = "switchTargetName",
            ["Value"] = false,
            ["Name"] = "Show Target instead of Name",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 6,
            ["Key"] = "option8",
            ["Value"] = 0,
            ["Name"] = "Option 8",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 4,
            ["Key"] = "useTargetingColor",
            ["Value"] = false,
            ["Name"] = "Change Color if targeting You",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [9]
          {
            ["Type"] = 1,
            ["Key"] = "targetingColor",
            ["Value"] = {
              0.5058823529411764, -- [1]
              0.07058823529411765, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Color if targeting You",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [10]
        },
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
      }, -- [23]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
        ["Time"] = 1609607101,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
        ["Icon"] = 2175503,
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
        ["Revision"] = 465,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option1",
            ["Value"] = 0,
            ["Name"] = "Option 1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Plays a special animation showing the explosion time.",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option3",
            ["Value"] = 0,
            ["Name"] = "Option 3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 2,
            ["Max"] = 6,
            ["Desc"] = "Increases the cast bar height by this value",
            ["Min"] = 0,
            ["Key"] = "castBarHeight",
            ["Value"] = 3,
            ["Name"] = "Cast Bar Height Mod",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [4]
          {
            ["Type"] = 1,
            ["Key"] = "castBarColor",
            ["Value"] = {
              1, -- [1]
              0.5843137254902, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Cast Bar Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Changes the cast bar color to this one.",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Key"] = "option7",
            ["Value"] = 0,
            ["Name"] = "Option 7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 5,
            ["Key"] = "option6",
            ["Value"] = "Arrow:",
            ["Name"] = "Arrow:",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 4,
            ["Key"] = "showArrow",
            ["Value"] = true,
            ["Name"] = "Show Arrow",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Arrow alpha.",
            ["Min"] = 0,
            ["Key"] = "arrowAlpha",
            ["Value"] = 0.5,
            ["Name"] = "Arrow Alpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 12,
            ["Desc"] = "Arrow Width.",
            ["Min"] = 4,
            ["Key"] = "arrowWidth",
            ["Value"] = 8,
            ["Name"] = "Arrow Width",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 12,
            ["Desc"] = "Arrow Height.",
            ["Min"] = 4,
            ["Key"] = "arrowHeight",
            ["Value"] = 8,
            ["Name"] = "Arrow Height",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [11]
          {
            ["Type"] = 6,
            ["Key"] = "option13",
            ["Value"] = 0,
            ["Name"] = "Option 13",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [12]
          {
            ["Type"] = 5,
            ["Key"] = "option12",
            ["Value"] = "Dot Animation:",
            ["Name"] = "Dot Animation:",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [13]
          {
            ["Type"] = 1,
            ["Key"] = "dotColor",
            ["Value"] = {
              1, -- [1]
              0.6156862745098, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Dot Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Adjust the color of the dot animation.",
          }, -- [14]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Dot X Offset",
            ["Min"] = -10,
            ["Key"] = "xOffset",
            ["Value"] = 4,
            ["Name"] = "Dot X Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [15]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Dot Y Offset",
            ["Min"] = -10,
            ["Key"] = "yOffset",
            ["Value"] = 3,
            ["Name"] = "Dot Y Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [16]
        },
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
        ["Author"] = "Bombad�o-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
        ["NpcNames"] = {
        },
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
        ["Name"] = "Explosion Affix M+ [Plater]",
        ["PlaterCore"] = 1,
        ["SpellIds"] = {
          240446, -- [1]
          273577, -- [2]
        },
        ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Prio"] = 99,
        ["Enabled"] = true,
      }, -- [24]
    },
    ["url"] = "https://wago.io/r-uQoEE01/4",
    ["cast_statusbar_fadein_time"] = 0.019999999552965,
    ["target_shady_enabled"] = false,
    ["aura2_y_offset"] = 0,
    ["aura_timer_text_anchor"] = {
      ["y"] = 0.5,
      ["side"] = 13,
    },
    ["buffs_on_aura2"] = true,
    ["cast_statusbar_color_nointerrupt"] = {
      0.8, -- [1]
      0.8, -- [2]
      0.8, -- [3]
      1, -- [4]
    },
    ["npc_cache"] = {
      [151027] = {
        "Thornguard Burton", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [155634] = {
        "Bound Storm", -- [1]
        "The Eternal Palace", -- [2]
      },
      [16459] = {
        "Wanton Hostess", -- [1]
        "Karazhan", -- [2]
      },
      [127485] = {
        "Bilge Rat Looter", -- [1]
        "Tol Dagor", -- [2]
      },
      [24777] = {
        "Sunblade Sentinel", -- [1]
        "Magister's Terrace", -- [2]
      },
      [165872] = {
        "Flesh Crafter", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [151028] = {
        "Thornstalker Nydora", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [37901] = {
        "Vampiric Fiend", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [147957] = {
        "Azerchrysalis", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [34190] = {
        "Hardened Iron Golem", -- [1]
        "Ulduar", -- [2]
      },
      [97285] = {
        "Wind Rush Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [170480] = {
        "Atal'ai Deathwalker", -- [1]
        "De Other Side", -- [2]
      },
      [134137] = {
        "Temple Attendant", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [69388] = {
        "Zandalari Spear-Shaper", -- [1]
        "Throne of Thunder", -- [2]
      },
      [127230] = {
        "Garothi Annihilator", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [29832] = {
        "Drakkari Golem", -- [1]
        "Gundrak", -- [2]
      },
      [169457] = {
        "Bargast", -- [1]
        "Castle Nathria", -- [2]
      },
      [145399] = {
        "Wild Starcaller", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [60040] = {
        "Commander Durand", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [124927] = {
        "Jun-Ti", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [52362] = {
        "Tiki Lord Zim'wae", -- [1]
        "Zul'Gurub", -- [2]
      },
      [136186] = {
        "Tidesage Spiritualist", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [169458] = {
        "Hecutis", -- [1]
        "Castle Nathria", -- [2]
      },
      [36494] = {
        "Forgemaster Garfrost", -- [1]
        "Pit of Saron", -- [2]
      },
      [134139] = {
        "Shrine Templar", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [61448] = {
        "Sik'thik Soldier", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [127231] = {
        "Garothi Decimator", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [37134] = {
        "Ymirjar Huntress", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [82698] = {
        "Night-Twisted Devout", -- [1]
        "Highmaul", -- [2]
      },
      [103685] = {
        "Tichondrius", -- [1]
        "The Nighthold", -- [2]
      },
      [34191] = {
        "Trash", -- [1]
        "Ulduar", -- [2]
      },
      [145402] = {
        "Frenzied Wildheart", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [69134] = {
        "Kazra'jin", -- [1]
        "Throne of Thunder", -- [2]
      },
      [69390] = {
        "Zandalari Storm-Caller", -- [1]
        "Throne of Thunder", -- [2]
      },
      [164342] = {
        "Mawsworn Defender", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [168949] = {
        "Risen Bonesoldier", -- [1]
        "De Other Side", -- [2]
      },
      [15974] = {
        "Dread Creeper", -- [1]
        "Naxxramas", -- [2]
      },
      [43917] = {
        "Rock Borer", -- [1]
        "The Stonecore", -- [2]
      },
      [172021] = {
        "Coldheart Automaton", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [164343] = {
        "Mawsworn Debilitator", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [174069] = {
        "Hulking Gargon", -- [1]
        "Castle Nathria", -- [2]
      },
      [170486] = {
        "Atal'ai Devoted", -- [1]
        "De Other Side", -- [2]
      },
      [93961] = {
        "Worgen Tracker", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [73742] = {
        "Thresher Turret", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [37007] = {
        "Deathbound Ward", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [16524] = {
        "Shade of Aran", -- [1]
        "Karazhan", -- [2]
      },
      [161273] = {
        "Abyssal Spawn", -- [1]
        "Chamber of Heart - Scenario", -- [2]
      },
      [174070] = {
        "Kennel Overseer", -- [1]
        "Castle Nathria", -- [2]
      },
      [20875] = {
        "Negaton Screamer", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [131585] = {
        "Enthralled Guard", -- [1]
        "Waycrest Manor", -- [2]
      },
      [164857] = {
        "Spriggan Mendbender", -- [1]
        "De Other Side", -- [2]
      },
      [34192] = {
        "Boomer XP-500", -- [1]
        "Ulduar", -- [2]
      },
      [174071] = {
        "Vicious Gargon", -- [1]
        "Castle Nathria", -- [2]
      },
      [54923] = {
        "Infinite Warden", -- [1]
        "End Time", -- [2]
      },
      [93962] = {
        "Worgen Stalker", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [135169] = {
        "Spirit Drain Totem", -- [1]
        "The Underrot", -- [2]
      },
      [131586] = {
        "Banquet Steward", -- [1]
        "Waycrest Manor", -- [2]
      },
      [127490] = {
        "Knight Captain Valyri", -- [1]
        "Tol Dagor", -- [2]
      },
      [43662] = {
        "Unbound Earth Rager", -- [1]
        "The Stonecore", -- [2]
      },
      [142336] = {
        "Pygmy Octopus", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [52364] = {
        "Ritual Tiki Mask", -- [1]
        "Zul'Gurub", -- [2]
      },
      [170490] = {
        "Atal'ai High Priest", -- [1]
        "De Other Side", -- [2]
      },
      [36880] = {
        "Decaying Colossus", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [69905] = {
        "Gurubashi Berserker", -- [1]
        "Throne of Thunder", -- [2]
      },
      [166396] = {
        "Noble Skirmisher", -- [1]
        "Sanguine Depths", -- [2]
      },
      [146945] = {
        "Swarming Voidspawn", -- [1]
        "Crucible of Storms", -- [2]
      },
      [156159] = {
        "Coldheart Javelineer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [173051] = {
        "Suppressor Xelors", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [34193] = {
        "Clockwork Sapper", -- [1]
        "Ulduar", -- [2]
      },
      [130307] = {
        "Unstable Typhoon", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [151041] = {
        "Etruvis the Vassal", -- [1]
        "Crucible of Storms", -- [2]
      },
      [73745] = {
        "Kor'kron Iron Sentinel", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [69906] = {
        "Zandalari High Priest", -- [1]
        "Throne of Thunder", -- [2]
      },
      [140292] = {
        "Snowfur Alpha", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [59915] = {
        "Jasper Guardian", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [162303] = {
        "Aqir Swarmkeeper", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [134150] = {
        "Runecarver Sorn", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [139269] = {
        "Gloom Horror", -- [1]
        "Waycrest Manor", -- [2]
      },
      [156161] = {
        "Inquisitor Gnshal", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [148483] = {
        "Ancestral Avenger", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [153090] = {
        "Lady Venomtongue", -- [1]
        "The Eternal Palace", -- [2]
      },
      [36497] = {
        "Bronjahm", -- [1]
        "The Forge of Souls", -- [2]
      },
      [146436] = {
        "Tempting Siren", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [36881] = {
        "Skeletal Slave", -- [1]
        "Pit of Saron", -- [2]
      },
      [32914] = {
        "Elder Stonebark", -- [1]
        "Ulduar", -- [2]
      },
      [140294] = {
        "Snowfur Wolf", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [153091] = {
        "Serena Scarscale", -- [1]
        "The Eternal Palace", -- [2]
      },
      [149508] = {
        "Ice Blocked Nathanos", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [162305] = {
        "Aqir Heartpiercer", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [138247] = {
        "Irontide Marauder", -- [1]
        "Siege of Boralus", -- [2]
      },
      [163841] = {
        "Amalgamation of Flesh", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [140295] = {
        "Snowfur Pup", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [162306] = {
        "Aqir Drone", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [166913] = {
        "Corrupted Guardian", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [171520] = {
        "Blighted Creeper", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [29834] = {
        "Drakkari Frenzy", -- [1]
        "Gundrak", -- [2]
      },
      [111370] = {
        "Creature in the Shadows", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [157700] = {
        "Agustus Moulaine", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [174592] = {
        "Territorial Wader", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [67093] = {
        "Sik'thik Battle-Mender", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [163331] = {
        "Stone Legion Nightblade", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [164355] = {
        "Manifestation of Pride", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [56589] = {
        "Striker Ga'dok", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [56717] = {
        "Hoptallus", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [117769] = {
        "Felborne Spellbreaker", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [145928] = {
        "Skavis Nightstalker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [53006] = {
        "Spirit Link Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [53134] = {
        "Ancient Core Hound", -- [1]
        "Firelands", -- [2]
      },
      [126983] = {
        "Harlan Sweete", -- [1]
        "Freehold", -- [2]
      },
      [69909] = {
        "Amani'shi Flame Chanter", -- [1]
        "Throne of Thunder", -- [2]
      },
      [148488] = {
        "Unliving Augur", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [162309] = {
        "Kul'tharok", -- [1]
        "Theater of Pain", -- [2]
      },
      [62348] = {
        "Sik'thik Soldier", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [15687] = {
        "Moroes", -- [1]
        "Karazhan", -- [2]
      },
      [161286] = {
        "Dark Ritualist", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [126216] = {
        "Zian-Ti Destroyer", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [134157] = {
        "Shadow-Borne Warrior", -- [1]
        "Kings' Rest", -- [2]
      },
      [155656] = {
        "Misha", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [69910] = {
        "Drakkari Frost Warden", -- [1]
        "Throne of Thunder", -- [2]
      },
      [153097] = {
        "Voidbound Shaman", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [43537] = {
        "Stonecore Earthshaper", -- [1]
        "The Stonecore", -- [2]
      },
      [162311] = {
        "Death Knight", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [134158] = {
        "Shadow-Borne Champion", -- [1]
        "Kings' Rest", -- [2]
      },
      [155657] = {
        "Huffer", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [16167] = {
        "Bony Construct", -- [1]
        "Naxxramas", -- [2]
      },
      [168966] = {
        "Brightsparkle", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [56718] = {
        "Hopper", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [162312] = {
        "Druid", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [36627] = {
        "Rotface", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [61453] = {
        "Mu'Shiba", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [37011] = {
        "The Damned", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [16526] = {
        "Sorcerous Shade", -- [1]
        "Karazhan", -- [2]
      },
      [149516] = {
        "Blackpaw", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [162313] = {
        "Mage", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [138255] = {
        "Ashvane Spotter", -- [1]
        "Siege of Boralus", -- [2]
      },
      [164873] = {
        "Runestag Elderhorn", -- [1]
        "De Other Side", -- [2]
      },
      [34196] = {
        "Rune Etched Sentry", -- [1]
        "Ulduar", -- [2]
      },
      [72983] = {
        "Corrupted Skullsplitter", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [166921] = {
        "Blighted Creeper", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [164362] = {
        "Slimy Morsel", -- [1]
        "Plaguefall", -- [2]
      },
      [168969] = {
        "Gushing Slime", -- [1]
        "Plaguefall", -- [2]
      },
      [137233] = {
        "Plague Toad", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [21965] = {
        "Fathom-Guard Tidalvess", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [30283] = {
        "Plague Walker", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [56719] = {
        "Sha of Violence", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [157709] = {
        "Dreliana", -- [1]
        "Blackwing Descent Scenario", -- [2]
      },
      [166411] = {
        "Forsworn Usurper", -- [1]
        "Spires of Ascension", -- [2]
      },
      [162828] = {
        "Corrosive Digester", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [69657] = {
        "Zeb'tula Beastcaller", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [135699] = {
        "Ashvane Jailer", -- [1]
        "Tol Dagor", -- [2]
      },
      [53648] = {
        "Inferno Hawk", -- [1]
        "Firelands", -- [2]
      },
      [174090] = {
        "Nathrian Hierarch", -- [1]
        "Castle Nathria", -- [2]
      },
      [162317] = {
        "Gorechop", -- [1]
        "Theater of Pain", -- [2]
      },
      [151056] = {
        "Varanq'ul the Mighty", -- [1]
        "Crucible of Storms", -- [2]
      },
      [167948] = {
        "Infectious Monstrosity", -- [1]
        "Plaguefall", -- [2]
      },
      [129547] = {
        "Blacktooth Knuckleduster", -- [1]
        "Freehold", -- [2]
      },
      [34197] = {
        "Chamber Overseer", -- [1]
        "Ulduar", -- [2]
      },
      [154128] = {
        "Blazing Elemental", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [69658] = {
        "Zeb'tula Raptor", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [74009] = {
        "Crawler Mine", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [168973] = {
        "High Torturer Darithos", -- [1]
        "Castle Nathria", -- [2]
      },
      [174092] = {
        "Nathrian Gargon Rider", -- [1]
        "Castle Nathria", -- [2]
      },
      [154129] = {
        "Burning Emberguard", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [14024] = {
        "Corrupted Blue Whelp", -- [1]
        "Blackwing Lair", -- [2]
      },
      [151058] = {
        "Bubbling Blood", -- [1]
        "Crucible of Storms", -- [2]
      },
      [129548] = {
        "Blacktooth Brute", -- [1]
        "Freehold", -- [2]
      },
      [174093] = {
        "Nathrian Ranger", -- [1]
        "Castle Nathria", -- [2]
      },
      [72986] = {
        "Shanna Sparkfizz", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [44819] = {
        "Siamat", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [151059] = {
        "Eternal Guardian", -- [1]
        "Crucible of Storms", -- [2]
      },
      [32918] = {
        "Detonating Lasher", -- [1]
        "Ulduar", -- [2]
      },
      [127757] = {
        "Reanimated Honor Guard", -- [1]
        "Atal'Dazar", -- [2]
      },
      [154131] = {
        "Molten Fury", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [54161] = {
        "Flame Archon", -- [1]
        "Firelands", -- [2]
      },
      [135192] = {
        "Honored Raptor", -- [1]
        "Kings' Rest", -- [2]
      },
      [139799] = {
        "Ironhull Apprentice", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [117264] = {
        "Maiden of Valor", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [34198] = {
        "Iron Mender", -- [1]
        "Ulduar", -- [2]
      },
      [117776] = {
        "Shadow Council Warlock", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [155156] = {
        "Jaina Proudmoore", -- [1]
        "The Eternal Palace", -- [2]
      },
      [69916] = {
        "Gurubashi Berserker", -- [1]
        "Throne of Thunder", -- [2]
      },
      [29836] = {
        "Drakkari Battle Rider", -- [1]
        "Gundrak", -- [2]
      },
      [21966] = {
        "Fathom-Guard Sharkkis", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [26125] = {
        "Earthrumbler", -- [1]
        "Crucible of Storms", -- [2]
      },
      [135706] = {
        "Bilge Rat Looter", -- [1]
        "Tol Dagor", -- [2]
      },
      [129550] = {
        "Bilge Rat Padfoot", -- [1]
        "Freehold", -- [2]
      },
      [140825] = {
        "Thistlebrush Trickster", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [161812] = {
        "Faceless Ruiner", -- [1]
        "Chamber of Heart - Scenario", -- [2]
      },
      [36502] = {
        "Devourer of Souls", -- [1]
        "The Forge of Souls", -- [2]
      },
      [118289] = {
        "Maiden of Vigilance", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [155158] = {
        "First Arcanist Thalyssra", -- [1]
        "The Eternal Palace", -- [2]
      },
      [36886] = {
        "Geist Ambusher", -- [1]
        "Pit of Saron", -- [2]
      },
      [32919] = {
        "Storm Lasher", -- [1]
        "Ulduar", -- [2]
      },
      [127503] = {
        "Overseer Korgus", -- [1]
        "Tol Dagor", -- [2]
      },
      [70429] = {
        "Flesh'rok the Diseased", -- [1]
        "Throne of Thunder", -- [2]
      },
      [161813] = {
        "K'thir Assassin", -- [1]
        "Chamber of Heart - Scenario", -- [2]
      },
      [162325] = {
        "Warrior", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [37782] = {
        "Flesh-eating Insect", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [167956] = {
        "Dark Acolyte", -- [1]
        "Sanguine Depths", -- [2]
      },
      [34199] = {
        "Lightning Charged Iron Dwarf", -- [1]
        "Ulduar", -- [2]
      },
      [130319] = {
        "Slitherblade Phalanx", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [175123] = {
        "Warden Arkoban", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [159767] = {
        "Sanguimar", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [139804] = {
        "Venture Inspector", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [23694] = {
        "Pulsing Pumpkin", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [15976] = {
        "Venom Stalker", -- [1]
        "Naxxramas", -- [2]
      },
      [174100] = {
        "Nathrian Singuard", -- [1]
        "Castle Nathria", -- [2]
      },
      [162327] = {
        "Rogue", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [134174] = {
        "Shadow-Borne Witch Doctor", -- [1]
        "Kings' Rest", -- [2]
      },
      [155161] = {
        "Shandris Feathermoon", -- [1]
        "The Eternal Palace", -- [2]
      },
      [159768] = {
        "Deresh of the Nothingness", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [139805] = {
        "Mechanical Guardhound", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [129552] = {
        "Monzumi", -- [1]
        "Atal'Dazar", -- [2]
      },
      [165911] = {
        "Loyal Creation", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [162328] = {
        "Warlock", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [155162] = {
        "Lor'themar Theron", -- [1]
        "The Eternal Palace", -- [2]
      },
      [151579] = {
        "Shield Generator", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [139806] = {
        "Venture Demolitions Expert", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [136735] = {
        "Ashvane Marine", -- [1]
        "Tol Dagor", -- [2]
      },
      [12457] = {
        "Blackwing Spellbinder", -- [1]
        "Blackwing Lair", -- [2]
      },
      [166936] = {
        "Keeneye Bowman", -- [1]
        "Theater of Pain", -- [2]
      },
      [151068] = {
        "Tentacled Voidpriest", -- [1]
        "Crucible of Storms", -- [2]
      },
      [120851] = {
        "Hippogryph Lord Varah", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [139807] = {
        "Venture Surveyor", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [129553] = {
        "Dinomancer Kish'o", -- [1]
        "Atal'Dazar", -- [2]
      },
      [21263] = {
        "Greyheart Technician", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [162330] = {
        "Demon Hunter", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [151581] = {
        "Horrific Vision", -- [1]
        "The Eternal Palace", -- [2]
      },
      [139808] = {
        "Venture Oaf", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [43286] = {
        "Crystal Shard", -- [1]
        "The Stonecore", -- [2]
      },
      [59794] = {
        "Krik'thik Disruptor", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [162331] = {
        "Corrupted Neuron", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [71712] = {
        "Despair Spawn", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [30285] = {
        "Eye of Taldaram", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [168986] = {
        "Skeletal Raptor", -- [1]
        "De Other Side", -- [2]
      },
      [169498] = {
        "Plague Bomb", -- [1]
        "Plaguefall", -- [2]
      },
      [149535] = {
        "Icebound Image", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [134691] = {
        "Static-charged Dervish", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [167963] = {
        "Headless Client", -- [1]
        "De Other Side", -- [2]
      },
      [139810] = {
        "Venture Middle Manager", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [140322] = {
        "Stonehusk Broodwatcher", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [140834] = {
        "Laughing Blaze", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [33433] = {
        "Suit of Armor", -- [1]
        "Ulduar", -- [2]
      },
      [135204] = {
        "Spectral Hex Priest", -- [1]
        "Kings' Rest", -- [2]
      },
      [135716] = {
        "Nightsaber Hunter", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [168988] = {
        "Overgrowth", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [109592] = {
        "Felguard Legionnaire", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [167965] = {
        "Lubricator", -- [1]
        "De Other Side", -- [2]
      },
      [139812] = {
        "Venture Producer", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [140836] = {
        "Brightfire", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [60051] = {
        "Cobalt Guardian", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [14025] = {
        "Corrupted Bronze Whelp", -- [1]
        "Blackwing Lair", -- [2]
      },
      [39960] = {
        "Deep Murloc Drudge", -- [1]
        "Throne of the Tides", -- [2]
      },
      [52373] = {
        "Florawing Needler", -- [1]
        "Zul'Gurub", -- [2]
      },
      [24207] = {
        "Army of the Dead", -- [1]
        "Isle of Conquest", -- [2]
      },
      [161312] = {
        "Crushing Tendril", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [165919] = {
        "Skeletal Marauder", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [73250] = {
        "Kor'kron Wild Gun", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [53141] = {
        "Molten Surger", -- [1]
        "Firelands", -- [2]
      },
      [131112] = {
        "Cutwater Striker", -- [1]
        "Tol Dagor", -- [2]
      },
      [37017] = {
        "Skybreaker Assassin", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [16529] = {
        "Magical Horror", -- [1]
        "Karazhan", -- [2]
      },
      [165408] = {
        "Halkias", -- [1]
        "Halls of Atonement", -- [2]
      },
      [112153] = {
        "Dire Shaman", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [159266] = {
        "Portal Master", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [112665] = {
        "Nighthold Protector", -- [1]
        "The Nighthold", -- [2]
      },
      [168992] = {
        "Risen Cultist", -- [1]
        "De Other Side", -- [2]
      },
      [72483] = {
        "Sarok", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [122135] = {
        "Shatug", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [110618] = {
        "Anchoring Crystal", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [160291] = {
        "Ashwalker Assassin", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [29838] = {
        "Drakkari Rhino", -- [1]
        "Gundrak", -- [2]
      },
      [165410] = {
        "High Adjudicator Aleez", -- [1]
        "Halls of Atonement", -- [2]
      },
      [138281] = {
        "Faceless Corruptor", -- [1]
        "The Underrot", -- [2]
      },
      [147495] = {
        "Rastari Enforcer", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [139817] = {
        "Chief Engineer Zazzy", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [72484] = {
        "Zazo", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [130582] = {
        "Despondent Scallywag", -- [1]
        "Tol Dagor", -- [2]
      },
      [155686] = {
        "Azsh'ari Venomwatcher", -- [1]
        "The Eternal Palace", -- [2]
      },
      [139818] = {
        "Security Officer Durk", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [140842] = {
        "Ebb", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [154663] = {
        "Gnome-Eating Droplet", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [87841] = {
        "Grom'kar Firemender", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [33819] = {
        "Twilight Frost Mage", -- [1]
        "Ulduar", -- [2]
      },
      [15689] = {
        "Netherspite", -- [1]
        "Karazhan", -- [2]
      },
      [72485] = {
        "Goma", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [134701] = {
        "Blood Effigy", -- [1]
        "The Underrot", -- [2]
      },
      [63508] = {
        "Xuen", -- [1]
        "Crucible of Storms", -- [2]
      },
      [78116] = {
        "Water Elemental", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [148522] = {
        "Ice Block", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [165414] = {
        "Depraved Obliterator", -- [1]
        "Halls of Atonement", -- [2]
      },
      [171557] = {
        "Shade of Bargast", -- [1]
        "Castle Nathria", -- [2]
      },
      [155689] = {
        "Zanj'ir Gladiator", -- [1]
        "The Eternal Palace", -- [2]
      },
      [52375] = {
        "Florawing Needler", -- [1]
        "Zul'Gurub", -- [2]
      },
      [153130] = {
        "Greater Void Elemental", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [125977] = {
        "Reanimation Totem", -- [1]
        "Atal'Dazar", -- [2]
      },
      [36891] = {
        "Iceborn Proto-Drake", -- [1]
        "Pit of Saron", -- [2]
      },
      [24656] = {
        "Fizzle", -- [1]
        "Magister's Terrace", -- [2]
      },
      [140334] = {
        "Nightscale Coilfang", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [144941] = {
        "Akunda's Aspect", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [37531] = {
        "Frostwarden Handler", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [20881] = {
        "Unbound Devastator", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [33820] = {
        "Twilight Pyromancer", -- [1]
        "Ulduar", -- [2]
      },
      [140335] = {
        "Nightscale Screecher", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [144942] = {
        "Spark Bot", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [68904] = {
        "Suen", -- [1]
        "Throne of Thunder", -- [2]
      },
      [159275] = {
        "Portal Keeper", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [163882] = {
        "Decaying Flesh Giant", -- [1]
        "Plaguefall", -- [2]
      },
      [140336] = {
        "Nightscale Wind Serpent", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [129050] = {
        "Antoran Felguard", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [30287] = {
        "Plundering Geist", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [140337] = {
        "Nightscale Hatchling", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [144944] = {
        "Thirsting Bloodsucker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [72744] = {
        "Kor'kron Skullsplitter", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [68905] = {
        "Lu'lin", -- [1]
        "Throne of Thunder", -- [2]
      },
      [61334] = {
        "Cursed Mogu Sculpture", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [36892] = {
        "Ymirjar Deathbringer", -- [1]
        "Pit of Saron", -- [2]
      },
      [152623] = {
        "Underhold Grunt", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [37532] = {
        "Frostwing Whelp", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [62358] = {
        "Corrupt Droplet", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [112671] = {
        "Duskwatch Battle-Magus", -- [1]
        "The Nighthold", -- [2]
      },
      [140339] = {
        "Vale Terror", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [157231] = {
        "Shad'har the Insatiable", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [145970] = {
        "Razorshell Turtle", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [71466] = {
        "Iron Juggernaut", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [56472] = {
        "Fragrant Lotus", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [140341] = {
        "Cloudscraper", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [72490] = {
        "Overseer Mojka", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [101667] = {
        "Shielded Anchor", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [36893] = {
        "Ymirjar Flamebearer", -- [1]
        "Pit of Saron", -- [2]
      },
      [32926] = {
        "Flash Freeze", -- [1]
        "Ulduar", -- [2]
      },
      [144949] = {
        "Canopy Stalker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [174126] = {
        "Baron Duskhollow", -- [1]
        "Castle Nathria", -- [2]
      },
      [37533] = {
        "Rimefang", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [146485] = {
        "Nevara Nightshade", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [33822] = {
        "Twilight Guardian", -- [1]
        "Ulduar", -- [2]
      },
      [29264] = {
        "Spirit Wolf", -- [1]
        "Deepwind Gorge", -- [2]
      },
      [140855] = {
        "Trickle", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [130333] = {
        "Gritplate Basilisk", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [119072] = {
        "The Desolate Host", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [136249] = {
        "Guardian Elemental", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [59800] = {
        "Krik'thik Rager", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [149558] = {
        "Jaina's Tide Elemental", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [145975] = {
        "Stonehide Buck", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [112162] = {
        "Grisly Trapper", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [163891] = {
        "Rotmarrow Slime", -- [1]
        "Plaguefall", -- [2]
      },
      [156213] = {
        "Coldheart Guardian", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [72236] = {
        "Embodied Doubt", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [68397] = {
        "Lei Shen", -- [1]
        "Throne of Thunder", -- [2]
      },
      [145976] = {
        "Stonehide Bull", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [163892] = {
        "Rotting Slimeclaw", -- [1]
        "Plaguefall", -- [2]
      },
      [37022] = {
        "Blighted Abomination", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [157238] = {
        "Prophet Skitra", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [53786] = {
        "Blazing Monstrosity", -- [1]
        "Firelands", -- [2]
      },
      [145977] = {
        "Mammoth Stonehide", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [33567] = {
        "Deathsworn Zealot", -- [1]
        "Ulduar", -- [2]
      },
      [62360] = {
        "Corrupt Droplet", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [33823] = {
        "Twilight Slayer", -- [1]
        "Ulduar", -- [2]
      },
      [72237] = {
        "Embodied Fear", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [161334] = {
        "Gnashing Terror", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [109604] = {
        "Felguard Legionnaire", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [130335] = {
        "Gritplate Crystaleye", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [163894] = {
        "Blighted Spinebreaker", -- [1]
        "Plaguefall", -- [2]
      },
      [164406] = {
        "Shriekwing", -- [1]
        "Castle Nathria", -- [2]
      },
      [161335] = {
        "Void Horror", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [146491] = {
        "Phantom of Retribution", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [151098] = {
        "Shadowy Appendage", -- [1]
        "Crucible of Storms", -- [2]
      },
      [112676] = {
        "Nobleborn Warpcaster", -- [1]
        "The Nighthold", -- [2]
      },
      [16170] = {
        "Coldmist Stalker", -- [1]
        "Karazhan", -- [2]
      },
      [144956] = {
        "Razorbite", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [146492] = {
        "Phantom of Rage", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [61337] = {
        "Glintrok Ironhide", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [135231] = {
        "Spectral Brute", -- [1]
        "Kings' Rest", -- [2]
      },
      [16468] = {
        "Spectral Patron", -- [1]
        "Karazhan", -- [2]
      },
      [164920] = {
        "Drust Soulcleaver", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [174134] = {
        "Lord Evershade", -- [1]
        "Castle Nathria", -- [2]
      },
      [12459] = {
        "Blackwing Warlock", -- [1]
        "Blackwing Lair", -- [2]
      },
      [20883] = {
        "Spiteful Temptress", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [33824] = {
        "Twilight Shadowblade", -- [1]
        "Ulduar", -- [2]
      },
      [156219] = {
        "Coldheart Scout", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [164921] = {
        "Drust Harvester", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [81197] = {
        "Iron Raider", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [21395] = {
        "Protean Spawn", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [73775] = {
        "War Master Kragg", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [59546] = {
        "The Talking Fish", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [111398] = {
        "Nightmare Amalgamation", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [165946] = {
        "Mordretha, the Endless Empress", -- [1]
        "Theater of Pain", -- [2]
      },
      [166970] = {
        "Lord Stavros", -- [1]
        "Castle Nathria", -- [2]
      },
      [43934] = {
        "Soul Fragment", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [135234] = {
        "Diseased Mastiff", -- [1]
        "Waycrest Manor", -- [2]
      },
      [52380] = {
        "Venomancer Mauri", -- [1]
        "Zul'Gurub", -- [2]
      },
      [140353] = {
        "Brightscale Coilfang", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [72496] = {
        "Overseer Thathung", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [154174] = {
        "Horrific Summoner", -- [1]
        "The Eternal Palace", -- [2]
      },
      [158781] = {
        "Shredded Psyche", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [102185] = {
        "First Mate DeGauza", -- [1]
        "Azsuna", -- [2]
      },
      [36896] = {
        "Stonespine Gargoyle", -- [1]
        "Pit of Saron", -- [2]
      },
      [140354] = {
        "Brightscale Wind Serpent", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [37664] = {
        "Darkfallen Archmage", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [138819] = {
        "Bloodwake Marauder", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [140355] = {
        "Brightscale Screecher", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [149569] = {
        "Dazari Worshipper", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [167485] = {
        "Starving Mawrat", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [164414] = {
        "Reanimated Mage", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [140356] = {
        "Brightscale Hatchling", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [144963] = {
        "Kimbul's Aspect", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [134214] = {
        "Riftblade Kelain", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [138821] = {
        "Bloodwake Warmaiden", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [172093] = {
        "Hearty Haunch", -- [1]
        "Plaguefall", -- [2]
      },
      [52381] = {
        "Venomancer T'Kulu", -- [1]
        "Zul'Gurub", -- [2]
      },
      [140357] = {
        "Venomreaver", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [129828] = {
        "Brineshell Clacker", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [134215] = {
        "Duskrunner Lorinas", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [61339] = {
        "Glintrok Oracle", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [167999] = {
        "Echo of Sin", -- [1]
        "Castle Nathria", -- [2]
      },
      [156226] = {
        "Coldheart Binder", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [24723] = {
        "Selin Fireheart", -- [1]
        "Magister's Terrace", -- [2]
      },
      [33186] = {
        "Razorscale", -- [1]
        "Ulduar", -- [2]
      },
      [37665] = {
        "Darkfallen Lieutenant", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [138823] = {
        "Bloodwake Wayfinder", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [135240] = {
        "Soul Essence", -- [1]
        "Waycrest Manor", -- [2]
      },
      [136264] = {
        "Half-Finished Mummy", -- [1]
        "Kings' Rest", -- [2]
      },
      [138824] = {
        "Halfid Ironeye", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [168001] = {
        "Empowered Flameforge Enforcer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [140360] = {
        "Sunback", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [59804] = {
        "Gripping Hatred", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [171521] = {
        "Dread Evoker", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [71476] = {
        "Embodied Misery", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [168002] = {
        "Empowered Mawsworn Shackler", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [69131] = {
        "Frost King Malakk", -- [1]
        "Throne of Thunder", -- [2]
      },
      [140361] = {
        "Darkshadow the Omen", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [30418] = {
        "Bound Air Elemental", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [113920] = {
        "Flail of Il'gynoth", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [44704] = {
        "Minion of Siamat", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [168967] = {
        "Gerwyn", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [61340] = {
        "Glintrok Hexxer", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [139338] = {
        "Icetusk Prophet", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [102701] = {
        "Mo'arg Painbringer", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [140362] = {
        "Shimmerwing", -- [1]
        "Crestfall (Islands 11)", -- [2]
      },
      [157254] = {
        "Tek'ris", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [92933] = {
        "7th Legion Dragoon", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [168960] = {
        "Fulfir the Scarred", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [128551] = {
        "Irontide Mastiff", -- [1]
        "Freehold", -- [2]
      },
      [71477] = {
        "Embodied Gloom", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [168004] = {
        "Empowered Imperial Consular", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [171522] = {
        "Foul Slayer", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [15691] = {
        "The Curator", -- [1]
        "Karazhan", -- [2]
      },
      [157255] = {
        "Aqir Drone", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [130087] = {
        "Irontide Raider", -- [1]
        "Tol Dagor", -- [2]
      },
      [158279] = {
        "Haywire Clockwork Rocket Bot", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [166919] = {
        "Foul Slayer", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [167493] = {
        "Venomous Sniper", -- [1]
        "Plaguefall", -- [2]
      },
      [139340] = {
        "Icetusk Necromancer", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [102702] = {
        "Wrathguard Dreadblade", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [166914] = {
        "Fallen Keeper", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [157256] = {
        "Aqir Darter", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [142324] = {
        "Bluefin Dolphin", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [166917] = {
        "Grove Wrecker", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [166920] = {
        "Blighted Servitor", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [71478] = {
        "Embodied Anguish", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [135246] = {
        "\"Stabby\" Lottie", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [16171] = {
        "Coldmist Widow", -- [1]
        "Karazhan", -- [2]
      },
      [60701] = {
        "Zian of the Endless Shadow", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [144972] = {
        "Kaldorei Huntress", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [56862] = {
        "Drunken Hozen Brawler", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [160249] = {
        "Spike Tentacle", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [127484] = {
        "Jes Howlis", -- [1]
        "Tol Dagor", -- [2]
      },
      [61341] = {
        "Mounted Mogu", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [168007] = {
        "Empowered Mawsworn Soulbinder", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [37027] = {
        "Skybreaker Hierophant", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [52379] = {
        "Venomtip Needler", -- [1]
        "Zul'Gurub", -- [2]
      },
      [144973] = {
        "Kaldorei Sentinel", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [53791] = {
        "Blazing Monstrosity", -- [1]
        "Firelands", -- [2]
      },
      [12460] = {
        "Death Talon Wyrmguard", -- [1]
        "Blackwing Lair", -- [2]
      },
      [33572] = {
        "Steelforged Defender", -- [1]
        "Ulduar", -- [2]
      },
      [155211] = {
        "Gormling Pest", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [135248] = {
        "Briona the Bloodthirsty", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [123680] = {
        "Dark Keeper Aedis", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [171500] = {
        "Shuffling Corpse", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [109075] = {
        "Parasitic Lasher", -- [1]
        "The Nighthold", -- [2]
      },
      [137716] = {
        "Bottom Feeder", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [153119] = {
        "Lesser Void Elemental", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [118022] = {
        "Infernal Chaosbringer", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [102192] = {
        "Dread Sharpshooter", -- [1]
        "Azsuna", -- [2]
      },
      [166915] = {
        "Possessed Tender", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [69944] = {
        "Sand Elemental", -- [1]
        "Throne of Thunder", -- [2]
      },
      [162329] = {
        "Xav the Unfallen", -- [1]
        "Theater of Pain", -- [2]
      },
      [153165] = {
        "Custodian Thonar", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [167935] = {
        "Contagious Droplet", -- [1]
        "Plaguefall", -- [2]
      },
      [158284] = {
        "Craggle Wobbletop", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [135718] = {
        "Nightsaber Cub", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [71480] = {
        "Sun Tenderheart", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [163915] = {
        "Hatchling Nest", -- [1]
        "Plaguefall", -- [2]
      },
      [131667] = {
        "Soulbound Goliath", -- [1]
        "Waycrest Manor", -- [2]
      },
      [168961] = {
        "The Hungering Ones", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [30419] = {
        "Bound Water Elemental", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [56863] = {
        "Sleepy Hozen Brawler", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [36516] = {
        "Soulguard Animator", -- [1]
        "The Forge of Souls", -- [2]
      },
      [127486] = {
        "Ashvane Officer", -- [1]
        "Tol Dagor", -- [2]
      },
      [159309] = {
        "Leeching Parasite", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [127019] = {
        "Training Dummy", -- [1]
        "Freehold", -- [2]
      },
      [135763] = {
        "Voidling", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [111151] = {
        "Midnight Siphoner", -- [1]
        "The Nighthold", -- [2]
      },
      [103217] = {
        "Crystalline Scorpid", -- [1]
        "The Nighthold", -- [2]
      },
      [162298] = {
        "Yulkatar the Cruel", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [158286] = {
        "Reprogrammed Warbot", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [44577] = {
        "General Husam", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [22997] = {
        "Flame of Azzinoth", -- [1]
        "Black Temple", -- [2]
      },
      [70153] = {
        "Fungal Growth", -- [1]
        "Throne of Thunder", -- [2]
      },
      [71993] = {
        "Desperation Spawn", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [72249] = {
        "Galakras", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [58783] = {
        "Scarlet Initiate", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [156142] = {
        "Seeker of Souls", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [170572] = {
        "Atal'ai Hoodoo Hexxer", -- [1]
        "De Other Side", -- [2]
      },
      [102706] = {
        "Grinning Shadowstalker", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [126764] = {
        "Bladesworn Ravager", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [106545] = {
        "Empowered Eye of Gul'dan", -- [1]
        "The Nighthold", -- [2]
      },
      [69946] = {
        "Tree", -- [1]
        "Isle of Conquest", -- [2]
      },
      [70202] = {
        "Manchu", -- [1]
        "Throne of Thunder", -- [2]
      },
      [147965] = {
        "Volatile Azerite", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [36877] = {
        "Wrathbone Skeleton", -- [1]
        "Pit of Saron", -- [2]
      },
      [13996] = {
        "Blackwing Technician", -- [1]
        "Blackwing Lair", -- [2]
      },
      [99891] = {
        "Storm Drake", -- [1]
        "Halls of Valor", -- [2]
      },
      [138837] = {
        "Zara'thik Ambershaper", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [60447] = {
        "Krik'thik Saboteur", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [156241] = {
        "Monstrous Guardian", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [130298] = {
        "Water Elemental", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [135765] = {
        "Torrent Totem", -- [1]
        "Kings' Rest", -- [2]
      },
      [173568] = {
        "Anima Crazed Worker", -- [1]
        "Castle Nathria", -- [2]
      },
      [164338] = {
        "Mawsworn Guard", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [65310] = {
        "Turnip Punching Bag", -- [1]
        "Kings' Rest", -- [2]
      },
      [73530] = {
        "Dragonmaw Grunt", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [16407] = {
        "Spectral Servant", -- [1]
        "Karazhan", -- [2]
      },
      [156242] = {
        "Animated Prowler", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [56713] = {
        "Master Snowdrift", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [147439] = {
        "Molten Hound", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [53793] = {
        "Harbinger of Flame", -- [1]
        "Firelands", -- [2]
      },
      [140792] = {
        "Breakbeak Bonepicker", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [134232] = {
        "Hired Assassin", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [155219] = {
        "Gormling Spitter", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [139351] = {
        "Shadowspeaker Angolo", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [33699] = {
        "Storm Tempered Keeper", -- [1]
        "Ulduar", -- [2]
      },
      [113201] = {
        "Spirit Beast", -- [1]
        "Deepwind Gorge", -- [2]
      },
      [43658] = {
        "Frenzied Crocolisk", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [164339] = {
        "Mawsworn Bowman", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [60043] = {
        "Jade Guardian", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [72728] = {
        "Kor'kron Blood Axe", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [138840] = {
        "Zara'thik Impaler", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [168005] = {
        "Empowered Deadsoul Shambler", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [156244] = {
        "Winged Automaton", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [140376] = {
        "Duneshell Scarab", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [157268] = {
        "Crawling Corruption", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [36499] = {
        "Soulguard Reaper", -- [1]
        "The Forge of Souls", -- [2]
      },
      [135715] = {
        "Ferocious Nightsaber", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [149591] = {
        "Rastari Marksman", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [155221] = {
        "Faeleaf Tender", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [135258] = {
        "Irontide Marauder", -- [1]
        "Siege of Boralus", -- [2]
      },
      [156245] = {
        "Grand Automaton", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [140377] = {
        "Duneshell Harvester", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [153174] = {
        "Watchers of Death", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [174161] = {
        "Lady Sinsear", -- [1]
        "Castle Nathria", -- [2]
      },
      [103695] = {
        "Corruption Horror", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [61216] = {
        "Glintrok Hexxer", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [151127] = {
        "Lord of Torment", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [72981] = {
        "Aggron", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [160341] = {
        "Sewer Beastling", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [37158] = {
        "Quel'Delar", -- [1]
        "Halls of Reflection", -- [2]
      },
      [136688] = {
        "Fanatical Driller", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [53794] = {
        "Smouldering Hatchling", -- [1]
        "Firelands", -- [2]
      },
      [140798] = {
        "Cragcaw", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [91704] = {
        "Anchoring Crystal", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [138843] = {
        "Wingleader Srak'ik", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [139355] = {
        "Guran the Frostblade", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [131677] = {
        "Heartsbane Runeweaver", -- [1]
        "Waycrest Manor", -- [2]
      },
      [148569] = {
        "Breakwater Elemental", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [33818] = {
        "Twilight Adherent", -- [1]
        "Ulduar", -- [2]
      },
      [53642] = {
        "Cinderweb Spinner", -- [1]
        "Firelands", -- [2]
      },
      [113971] = {
        "Maiden of Virtue", -- [1]
        "Return to Karazhan", -- [2]
      },
      [42789] = {
        "Stonecore Magmalord", -- [1]
        "The Stonecore", -- [2]
      },
      [162319] = {
        "Paladin", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [33430] = {
        "Guardian Lasher", -- [1]
        "Ulduar", -- [2]
      },
      [139868] = {
        "Voru'kar Nerubian", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [70206] = {
        "Untrained Quilen", -- [1]
        "Throne of Thunder", -- [2]
      },
      [130318] = {
        "Slitherblade Prophet", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [170488] = {
        "Son of Hakkar", -- [1]
        "De Other Side", -- [2]
      },
      [147967] = {
        "7th Legion Marine", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [11981] = {
        "Flamegor", -- [1]
        "Blackwing Lair", -- [2]
      },
      [138845] = {
        "Commander Jo'vak", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [139357] = {
        "Icetusk Shambler", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [61701] = {
        "Sik'thik Warrior", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [147948] = {
        "Coagulated Azerite", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [61445] = {
        "Haiyan the Unstoppable", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [118523] = {
        "Huntress Kasparian", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [164861] = {
        "Spriggan Barkbinder", -- [1]
        "De Other Side", -- [2]
      },
      [40586] = {
        "Lady Naz'jar", -- [1]
        "Throne of the Tides", -- [2]
      },
      [138846] = {
        "Amberwinged Mindsinger", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [135263] = {
        "Ashvane Spotter", -- [1]
        "Siege of Boralus", -- [2]
      },
      [16472] = {
        "Phantom Stagehand", -- [1]
        "Karazhan", -- [2]
      },
      [173142] = {
        "Dread Feaster", -- [1]
        "Castle Nathria", -- [2]
      },
      [111413] = {
        "Dark Devourers", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [170071] = {
        "Mawsworn Shadestalker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [12461] = {
        "Death Talon Overseer", -- [1]
        "Blackwing Lair", -- [2]
      },
      [152089] = {
        "Thrall", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [138847] = {
        "Battle-Mender Ka'vaz", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [12557] = {
        "Grethok the Controller", -- [1]
        "Blackwing Lair", -- [2]
      },
      [54435] = {
        "Kìsuke", -- [1]
        "End Time", -- [2]
      },
      [10184] = {
        "Onyxia", -- [1]
        "Onyxia's Lair", -- [2]
      },
      [97081] = {
        "King Bjorn", -- [1]
        "Halls of Valor", -- [2]
      },
      [164862] = {
        "Weald Shimmermoth", -- [1]
        "De Other Side", -- [2]
      },
      [132126] = {
        "Gilded Priestess", -- [1]
        "Atal'Dazar", -- [2]
      },
      [172005] = {
        "Furrowed Colossus", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [164926] = {
        "Drust Boughbreaker", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [139360] = {
        "Risen Icetusk Brute", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [135235] = {
        "Spectral Beastmaster", -- [1]
        "Kings' Rest", -- [2]
      },
      [152669] = {
        "Void Globule", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [103224] = {
        "Volatile Scorpid", -- [1]
        "The Nighthold", -- [2]
      },
      [37133] = {
        "Ymirjar Warlord", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [93719] = {
        "Fel Commander Azgalor", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [101639] = {
        "Valarjar Shieldmaiden", -- [1]
        "Halls of Valor", -- [2]
      },
      [21964] = {
        "Fathom-Guard Caribdis", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [127235] = {
        "Garothi Demolisher", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [53383] = {
        "Nexus Warden", -- [1]
        "Nexus Legendary", -- [2]
      },
      [173145] = {
        "Gorging Mite", -- [1]
        "Castle Nathria", -- [2]
      },
      [20879] = {
        "Eredar Soul-Eater", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [56867] = {
        "Fiery Trickster", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [30549] = {
        "Baron Rivendare", -- [1]
        "Naxxramas", -- [2]
      },
      [138338] = {
        "Reanimated Guardian", -- [1]
        "The Underrot", -- [2]
      },
      [167962] = {
        "Defunct Dental Drill", -- [1]
        "De Other Side", -- [2]
      },
      [32915] = {
        "Elder Brightleaf", -- [1]
        "Ulduar", -- [2]
      },
      [70445] = {
        "Stormbringer Draz'kil", -- [1]
        "Throne of Thunder", -- [2]
      },
      [70209] = {
        "Untrained Quilen", -- [1]
        "Throne of Thunder", -- [2]
      },
      [144993] = {
        "Crazed Thistlebear", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [36626] = {
        "Festergut", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [38154] = {
        "Warhawk", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [117782] = {
        "Eredar Bloodmage", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [23436] = {
        "Image of Dementia", -- [1]
        "Black Temple", -- [2]
      },
      [59544] = {
        "The Nodding Tiger", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [131685] = {
        "Runic Disciple", -- [1]
        "Waycrest Manor", -- [2]
      },
      [38184] = {
        "Corrupted Ymirjar", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [165469] = {
        "Nathrian Enforcer", -- [1]
        "Castle Nathria", -- [2]
      },
      [135761] = {
        "Thundering Totem", -- [1]
        "Kings' Rest", -- [2]
      },
      [16461] = {
        "Concubine", -- [1]
        "Karazhan", -- [2]
      },
      [167966] = {
        "Experimental Sludge", -- [1]
        "De Other Side", -- [2]
      },
      [157158] = {
        "Cultist Slavedriver", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [151649] = {
        "Defense Bot Mk I", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [59555] = {
        "Haunting Sha", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [127479] = {
        "The Sand Queen", -- [1]
        "Tol Dagor", -- [2]
      },
      [165470] = {
        "Nathrian Executor", -- [1]
        "Castle Nathria", -- [2]
      },
      [115767] = {
        "Mistress Sassz'ine", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [34069] = {
        "Molten Colossus", -- [1]
        "Ulduar", -- [2]
      },
      [36874] = {
        "Disturbed Glacial Revenant", -- [1]
        "Pit of Saron", -- [2]
      },
      [44566] = {
        "Ozumat", -- [1]
        "Throne of the Tides", -- [2]
      },
      [144996] = {
        "Visage from Beyond", -- [1]
        "Crucible of Storms", -- [2]
      },
      [164447] = {
        "Skuld", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [72964] = {
        "Goro'dan", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [5048] = {
        "Deviate Adder", -- [1]
        "Wailing Caverns", -- [2]
      },
      [72770] = {
        "Kor'kron Dark Farseer", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [137830] = {
        "Pallid Gorger", -- [1]
        "Waycrest Manor", -- [2]
      },
      [154127] = {
        "Fire Spirit", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [61347] = {
        "Kingsguard", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [16409] = {
        "Phantom Guest", -- [1]
        "Karazhan", -- [2]
      },
      [16473] = {
        "Spectral Performer", -- [1]
        "Karazhan", -- [2]
      },
      [136295] = {
        "Sunken Denizen", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [165472] = {
        "Nathrian Siphoner", -- [1]
        "Castle Nathria", -- [2]
      },
      [140777] = {
        "Gemshard Colossus", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [140795] = {
        "Dunecircler the Bleak", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [30278] = {
        "Ahn'kahar Spell Flinger", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [117269] = {
        "Kil'jaeden", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [140839] = {
        "Water Spirit", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [129802] = {
        "Earthrager", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [121399] = {
        "Inquisitor Sebilus", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [132713] = {
        "Mogul Razdunk", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [174175] = {
        "Loyal Stoneborn", -- [1]
        "Halls of Atonement", -- [2]
      },
      [161293] = {
        "Neglected Guild Bank", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [167955] = {
        "Sanguine Cadet", -- [1]
        "Sanguine Depths", -- [2]
      },
      [155236] = {
        "Ironroot Strider", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [172128] = {
        "Hero", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [164450] = {
        "Dealer Xy'exa", -- [1]
        "De Other Side", -- [2]
      },
      [70212] = {
        "Flaming Head", -- [1]
        "Throne of Thunder", -- [2]
      },
      [136809] = {
        "Stonejaw the Rock-Eater", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [161251] = {
        "Cultist Sycophant", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [29830] = {
        "Living Mojo", -- [1]
        "Gundrak", -- [2]
      },
      [140843] = {
        "Air Spirit", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [52376] = {
        "Florawing Needler", -- [1]
        "Zul'Gurub", -- [2]
      },
      [151654] = {
        "Deuce Mecha-Buffer", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [164451] = {
        "Dessia the Decapitator", -- [1]
        "Theater of Pain", -- [2]
      },
      [60708] = {
        "Meng the Demented", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [168457] = {
        "Stonewall Gargon", -- [1]
        "Sanguine Depths", -- [2]
      },
      [131669] = {
        "Jagged Hound", -- [1]
        "Waycrest Manor", -- [2]
      },
      [36522] = {
        "Soul Horror", -- [1]
        "The Forge of Souls", -- [2]
      },
      [134251] = {
        "Seneschal M'bara", -- [1]
        "Kings' Rest", -- [2]
      },
      [61348] = {
        "Lorewalker Cho", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [94271] = {
        "Skyfire Engineer", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [53414] = {
        "Magic Hunter", -- [1]
        "Nexus Legendary", -- [2]
      },
      [148584] = {
        "Archmage Mordent Evenshade", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [136811] = {
        "Pebblestone Flinger", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [156212] = {
        "Coldheart Agent", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [135247] = {
        "Varigg", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [72451] = {
        "Kor'kron Dark Shaman", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [151144] = {
        "Hati", -- [1]
        "Crucible of Storms", -- [2]
      },
      [131123] = {
        "Enchanted Tiki Mask", -- [1]
        "Atal'Dazar", -- [2]
      },
      [112955] = {
        "Shadescale Wyrm", -- [1]
        "The Nighthold", -- [2]
      },
      [140338] = {
        "Clutch Guardian Jinka'lo", -- [1]
        "Crestfall (Islands 11)", -- [2]
      },
      [97087] = {
        "Valarjar Champion", -- [1]
        "Halls of Valor", -- [2]
      },
      [37663] = {
        "Darkfallen Noble", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [164351] = {
        "Fading Shade", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [69702] = {
        "Ritualist Xeron", -- [1]
        "Throne of Thunder", -- [2]
      },
      [73541] = {
        "Kor'kron Wolf Pup", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [151657] = {
        "Bomb Tonk", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [162318] = {
        "Monk", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [160871] = {
        "Possessed Package", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [149098] = {
        "Maiev Shadowsong", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [135245] = {
        "Bilge Rat Demolisher", -- [1]
        "Siege of Boralus", -- [2]
      },
      [163857] = {
        "Plaguebound Devoted", -- [1]
        "Plaguefall", -- [2]
      },
      [60197] = {
        "Training Dummy", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [134766] = {
        "Wavespitter", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [151658] = {
        "Strider Tonk", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [112956] = {
        "Shimmering Manaspine", -- [1]
        "The Nighthold", -- [2]
      },
      [164967] = {
        "Doctor Ickus", -- [1]
        "Plaguefall", -- [2]
      },
      [153194] = {
        "Briny Bubble", -- [1]
        "The Eternal Palace", -- [2]
      },
      [149611] = {
        "Apetagonizer 3000", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [156642] = {
        "Enthralled Laborer", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [44841] = {
        "Blight Beast", -- [1]
        "Throne of the Tides", -- [2]
      },
      [41096] = {
        "Naz'jar Spiritmender", -- [1]
        "Throne of the Tides", -- [2]
      },
      [151659] = {
        "Rocket Tonk", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [24664] = {
        "Kael'thas Sunstrider", -- [1]
        "Magister's Terrace", -- [2]
      },
      [155618] = {
        "Zanj'ir Huntress", -- [1]
        "The Eternal Palace", -- [2]
      },
      [37021] = {
        "Skybreaker Vicar", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [61989] = {
        "Cursed Mogu Sculpture", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [111933] = {
        "Venomous Spiderling", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [167949] = {
        "Plague-Ridden Survivor", -- [1]
        "Plaguefall", -- [2]
      },
      [134768] = {
        "Sandskitter the Relentless", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [33836] = {
        "Bomb Bot", -- [1]
        "Ulduar", -- [2]
      },
      [140827] = {
        "Giggling Thistlebrush", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [32517] = {
        "Spirit Beast", -- [1]
        "Crucible of Storms", -- [2]
      },
      [153196] = {
        "Scrapbone Grunter", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [131587] = {
        "Bewitched Captain", -- [1]
        "Waycrest Manor", -- [2]
      },
      [93506] = {
        "Skyfire Gryphon Rider", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [72194] = {
        "Hellscream Demolisher", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [134769] = {
        "Jagged Claw", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [166933] = {
        "Ventun the Ravenous", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [135764] = {
        "Explosive Totem", -- [1]
        "Kings' Rest", -- [2]
      },
      [111166] = {
        "Resolute Courtesan", -- [1]
        "The Nighthold", -- [2]
      },
      [162326] = {
        "Priest", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [102679] = {
        "Ysondre", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [92950] = {
        "Skyfire Marine", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [56473] = {
        "Flying Snow", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [148962] = {
        "Ravenous Stalker", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [140828] = {
        "Morningdew", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [52392] = {
        "Gurubashi Master Chef", -- [1]
        "Zul'Gurub", -- [2]
      },
      [148591] = {
        "Prison Groundsman", -- [1]
        "Tol Dagor Scenario", -- [2]
      },
      [165483] = {
        "Court Hierarch", -- [1]
        "Castle Nathria", -- [2]
      },
      [147938] = {
        "Azergem Crystalback", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [161815] = {
        "K'thir Voidcaller", -- [1]
        "Chamber of Heart - Scenario", -- [2]
      },
      [65317] = {
        "Xiang", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [134629] = {
        "Scaled Krolusk Rider", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [94275] = {
        "Skyfire Powder Monkey", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [143985] = {
        "Absorb-o-Tron", -- [1]
        "Crucible of Storms", -- [2]
      },
      [148592] = {
        "Prison Groundsman", -- [1]
        "Tol Dagor Scenario", -- [2]
      },
      [33453] = {
        "Dark Rune Watcher", -- [1]
        "Ulduar", -- [2]
      },
      [133605] = {
        "Escaped Convict", -- [1]
        "Tol Dagor", -- [2]
      },
      [141938] = {
        "Ashvane Sniper", -- [1]
        "Siege of Boralus", -- [2]
      },
      [138825] = {
        "Ingathora Blood-Drinker", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [167532] = {
        "Heavin the Breaker", -- [1]
        "Theater of Pain", -- [2]
      },
      [152644] = {
        "Deadsoul Drifter", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [164461] = {
        "Sathel the Accursed", -- [1]
        "Theater of Pain", -- [2]
      },
      [140259] = {
        "Runehoof Greatstag", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [45097] = {
        "Oathsworn Tamer", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [157807] = {
        "Mawsworn Soulweaver", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [141939] = {
        "Ashvane Spotter", -- [1]
        "Siege of Boralus", -- [2]
      },
      [60576] = {
        "Stone Quilen", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [167533] = {
        "Advent Nevermore", -- [1]
        "Theater of Pain", -- [2]
      },
      [159308] = {
        "Zealous Adherent", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [168003] = {
        "Empowered Coldheart Ascendant", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [82733] = {
        "Night-Twisted Shadowsworn", -- [1]
        "Highmaul", -- [2]
      },
      [32913] = {
        "Elder Ironbranch", -- [1]
        "Ulduar", -- [2]
      },
      [128060] = {
        "Priestess of Delirium", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [173633] = {
        "Nathrian Archivist", -- [1]
        "Castle Nathria", -- [2]
      },
      [112675] = {
        "Duskwatch Sentinel", -- [1]
        "The Nighthold", -- [2]
      },
      [167534] = {
        "Rek the Hardened", -- [1]
        "Theater of Pain", -- [2]
      },
      [56732] = {
        "Liu Flameheart", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [164463] = {
        "Paceran the Virulent", -- [1]
        "Theater of Pain", -- [2]
      },
      [61442] = {
        "Kuai the Brute", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [144970] = {
        "Kaldorei Archer", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [157809] = {
        "Mawsworn Darkcaster", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [44715] = {
        "Vicious Mindlasher", -- [1]
        "Throne of the Tides", -- [2]
      },
      [130620] = {
        "Frostfencer Seraphi", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [155250] = {
        "Decayspeaker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [102683] = {
        "Emeriss", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [164464] = {
        "Xira the Underhanded", -- [1]
        "Theater of Pain", -- [2]
      },
      [70219] = {
        "Putrid Waste", -- [1]
        "Throne of Thunder", -- [2]
      },
      [133663] = {
        "Fanatical Headhunter", -- [1]
        "The Underrot", -- [2]
      },
      [157810] = {
        "Mawsworn Endbringer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [162417] = {
        "Anubisath Sentinel", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [142454] = {
        "Ashtail Bandicoon", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [167536] = {
        "Harugia the Bloodthirsty", -- [1]
        "Theater of Pain", -- [2]
      },
      [33838] = {
        "Enslaved Fire Elemental", -- [1]
        "Ulduar", -- [2]
      },
      [33966] = {
        "Crusher Tentacle", -- [1]
        "Ulduar", -- [2]
      },
      [164427] = {
        "Reanimated Warrior", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [161244] = {
        "Blood of the Corruptor", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [157811] = {
        "Lilliam Sparkspindle", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [139811] = {
        "Venture Sub-Lead", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [142455] = {
        "Riverland Bronco", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [30277] = {
        "Ahn'kahar Slasher", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [139384] = {
        "Slitherblade Striker", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [14601] = {
        "Ebonroc", -- [1]
        "Blackwing Lair", -- [2]
      },
      [111170] = {
        "Astral Farseer", -- [1]
        "The Nighthold", -- [2]
      },
      [111405] = {
        "Shadow Pounder", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [157812] = {
        "Billibub Cogspinner", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [57109] = {
        "Minion of Doubt", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [170093] = {
        "Mawsworn Seeker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [167538] = {
        "Dokigg the Brutalizer", -- [1]
        "Theater of Pain", -- [2]
      },
      [140768] = {
        "Guuru the Mountain-Breaker", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [94970] = {
        "Skyfire Gryphon Rider", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [129598] = {
        "Freehold Pack Mule", -- [1]
        "Freehold", -- [2]
      },
      [173016] = {
        "Corpse Collector", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [157813] = {
        "Sprite Jumpsprocket", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [126527] = {
        "Fel Portal", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [146552] = {
        "Kul Tiran Tideweaver", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [155612] = {
        "Azsh'ari Channeler", -- [1]
        "The Eternal Palace", -- [2]
      },
      [29637] = {
        "Crafty Snake", -- [1]
        "Gundrak", -- [2]
      },
      [37038] = {
        "Vengeful Fleshreaper", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [137713] = {
        "Big Money Crab", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [146553] = {
        "Kul Tiran Strongarm", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [174194] = {
        "Court Executor", -- [1]
        "Castle Nathria", -- [2]
      },
      [150136] = {
        "Faceless Render", -- [1]
        "Uldir Scenario", -- [2]
      },
      [162933] = {
        "Thought Harvester", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [152612] = {
        "Subjugator Klontzas", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [152540] = {
        "Lyani Shadestalker", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [62632] = {
        "Sik'thik Engineer", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [129599] = {
        "Cutwater Knife Juggler", -- [1]
        "Freehold", -- [2]
      },
      [72191] = {
        "Overlord Runthak", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [150137] = {
        "Faceless Subduer", -- [1]
        "Uldir Scenario", -- [2]
      },
      [158327] = {
        "Crackling Shard", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [154744] = {
        "Toxic Monstrosity", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [59801] = {
        "Krik'thik Wind Shaper", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [111350] = {
        "Skittering Shadows", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [160375] = {
        "Feral Ritualist", -- [1]
        "Sanguine Depths", -- [2]
      },
      [32934] = {
        "Right Arm", -- [1]
        "Ulduar", -- [2]
      },
      [136829] = {
        "Witherbranch Axe Thrower", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [16142] = {
        "Bile Sludge", -- [1]
        "Naxxramas", -- [2]
      },
      [158328] = {
        "Il'gynoth", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [11983] = {
        "Firemaw", -- [1]
        "Blackwing Lair", -- [2]
      },
      [104262] = {
        "Burning Ember", -- [1]
        "The Nighthold", -- [2]
      },
      [151674] = {
        "Stinkfur Hopling", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [156794] = {
        "SI:7 Light-Hunter", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [129600] = {
        "Bilge Rat Brinescale", -- [1]
        "Freehold", -- [2]
      },
      [161241] = {
        "Voidweaver Mal'thir", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [174197] = {
        "Battlefield Ritualist", -- [1]
        "Theater of Pain", -- [2]
      },
      [150139] = {
        "K'thxx the Void Hunter", -- [1]
        "Uldir Scenario", -- [2]
      },
      [37127] = {
        "Ymirjar Frostbinder", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [69455] = {
        "Zandalari Water-Binder", -- [1]
        "Throne of Thunder", -- [2]
      },
      [73806] = {
        "Kor'kron Machinist", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [147932] = {
        "Agitated Azershard", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [152699] = {
        "Voidbound Berserker", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [136831] = {
        "Witherbranch Witch Doctor", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [140846] = {
        "Impish Breeze", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [12463] = {
        "Death Talon Flamescale", -- [1]
        "Blackwing Lair", -- [2]
      },
      [69375] = {
        "Hidden Fog", -- [1]
        "Throne of Thunder", -- [2]
      },
      [164345] = {
        "Scavenging Soul Eater", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [151676] = {
        "Stinkfur Hooligan", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [62633] = {
        "Sik'thik Builder", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [156795] = {
        "SI:7 Informant", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [54699] = {
        "Time-Twisted Nightsaber", -- [1]
        "End Time", -- [2]
      },
      [158169] = {
        "Devout Disciple", -- [1]
        "Halls of Origination", -- [2]
      },
      [21339] = {
        "Coilfang Hate-Screamer", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [150653] = {
        "Blackwater Behemoth", -- [1]
        "The Eternal Palace", -- [2]
      },
      [106311] = {
        "Venomous Spiderling", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [69712] = {
        "Ji-Kun", -- [1]
        "Throne of Thunder", -- [2]
      },
      [43438] = {
        "Corborus", -- [1]
        "The Stonecore", -- [2]
      },
      [70224] = {
        "Rotting Scavenger", -- [1]
        "Throne of Thunder", -- [2]
      },
      [127810] = {
        "Slobbering Fiend", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [139394] = {
        "Mirelurk Bog Priest", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [150142] = {
        "Scrapbone Trashtosser", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [138369] = {
        "Footbomb Hooligan", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [108359] = {
        "Volatile Scorpid", -- [1]
        "The Nighthold", -- [2]
      },
      [139393] = {
        "Mirelurk Clutchguard", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [148443] = {
        "Defense-A-Bot", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [148607] = {
        "Kal'ia Pa'kuaya", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [108360] = {
        "Acidmaw Scorpid", -- [1]
        "The Nighthold", -- [2]
      },
      [72784] = {
        "Kor'kron Gunner", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [150143] = {
        "Scrapbone Grinder", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [54700] = {
        "Time-Twisted Nightsaber", -- [1]
        "End Time", -- [2]
      },
      [134787] = {
        "Spineclaw Crab", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [151679] = {
        "Stinkfur Thumper", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [164476] = {
        "Tortured Amalgamation", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [173178] = {
        "Stone Legion Goliath", -- [1]
        "Castle Nathria", -- [2]
      },
      [132740] = {
        "Venomscale Hydra", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [33329] = {
        "Heart of the Deconstructor", -- [1]
        "Ulduar", -- [2]
      },
      [166524] = {
        "Deathwalker", -- [1]
        "Theater of Pain", -- [2]
      },
      [22939] = {
        "Temple Concubine", -- [1]
        "Black Temple", -- [2]
      },
      [116550] = {
        "Spectral Patron", -- [1]
        "Return to Karazhan", -- [2]
      },
      [139395] = {
        "Mirelurk Bogtender", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [168572] = {
        "Fungi Stormer", -- [1]
        "Plaguefall", -- [2]
      },
      [152704] = {
        "Crawling Corruption", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [145026] = {
        "Swifttail Scavenger", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [152656] = {
        "Deadsoul Stalker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [154240] = {
        "Azshara's Devoted", -- [1]
        "The Eternal Palace", -- [2]
      },
      [140838] = {
        "Mischievous Flood", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [134789] = {
        "Monstrous Spineclaw", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [139396] = {
        "Mirelurk Guardian", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [111860] = {
        "Bo'lan the Marked", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [148610] = {
        "Druid of the Branch", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [132742] = {
        "Flamescale Strider", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [70205] = {
        "Weisheng", -- [1]
        "Throne of Thunder", -- [2]
      },
      [150146] = {
        "Scrapbone Shaman", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [20885] = {
        "Dalliah the Doomsayer", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [108361] = {
        "Crystalline Scorpid", -- [1]
        "The Nighthold", -- [2]
      },
      [139397] = {
        "Mirelurk Lurker", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [168574] = {
        "Pestilent Harvester", -- [1]
        "Plaguefall", -- [2]
      },
      [148611] = {
        "Yoru'cha", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [161408] = {
        "Malicious Growth", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [157825] = {
        "Crazed Tormenter", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [162432] = {
        "Awakened Terror", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [69899] = {
        "Farraki Sand Conjurer", -- [1]
        "Throne of Thunder", -- [2]
      },
      [69459] = {
        "Bound Water Elemental", -- [1]
        "Throne of Thunder", -- [2]
      },
      [139398] = {
        "Mirelurk Assassin", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [131666] = {
        "Coven Thornshaper", -- [1]
        "Waycrest Manor", -- [2]
      },
      [86607] = {
        "Iron Flame Technician", -- [1]
        "Highmaul", -- [2]
      },
      [33202] = {
        "Ancient Water Spirit", -- [1]
        "Ulduar", -- [2]
      },
      [139392] = {
        "Mirelurk Saurok", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [61345] = {
        "Mogu Archer", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [134280] = {
        "Vindicator Baatul", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [138887] = {
        "Bloodwake Mystic", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [139399] = {
        "Mirelurk Basher", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [152708] = {
        "Mawsworn Seeker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [148613] = {
        "Commander Broadside", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [21212] = {
        "Lady Vashj", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [72787] = {
        "Blade of the Hundred Steps", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [30416] = {
        "Bound Fire Elemental", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [169601] = {
        "Stone Legion Commando", -- [1]
        "Castle Nathria", -- [2]
      },
      [163458] = {
        "Forsworn Castigator", -- [1]
        "Spires of Ascension", -- [2]
      },
      [139400] = {
        "Mirelurk Rivercaller", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [135817] = {
        "Zephyr", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [148614] = {
        "Kul Tiran Cannoneer", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [136841] = {
        "Thu'zun the Vile", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [174208] = {
        "Court Executor", -- [1]
        "Castle Nathria", -- [2]
      },
      [34183] = {
        "Arachnopod Destroyer", -- [1]
        "Ulduar", -- [2]
      },
      [30414] = {
        "Forgotten One", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [134794] = {
        "Darklurker", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [102682] = {
        "Lethon", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [135818] = {
        "Gust Soldier", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [72276] = {
        "Amalgam of Corruption", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [152199] = {
        "Magister Hathorel", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [56877] = {
        "Raigonn", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [155272] = {
        "Blackwater Oracle", -- [1]
        "The Eternal Palace", -- [2]
      },
      [154758] = {
        "Toxic Monstrosity", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [134795] = {
        "Veiled Hermit", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [151687] = {
        "Shrieker", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [135819] = {
        "Living Tornado", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [86609] = {
        "Iron Warmaster", -- [1]
        "Highmaul", -- [2]
      },
      [145033] = {
        "Arctic Hunter", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [174210] = {
        "Blighted Sludge-Spewer", -- [1]
        "Theater of Pain", -- [2]
      },
      [22876] = {
        "Coilskar Soothsayer", -- [1]
        "Black Temple", -- [2]
      },
      [175234] = {
        "Tractus the Icebreaker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [134796] = {
        "King Spineclaw", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [151688] = {
        "Melonsmasher", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [168580] = {
        "Plagueborer", -- [1]
        "Plaguefall", -- [2]
      },
      [148617] = {
        "Akunda the Devout", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [136844] = {
        "Sandscalp Warrior", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [145035] = {
        "Swifttail Courser", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [158343] = {
        "Organ of Corruption", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [114251] = {
        "Galindre", -- [1]
        "Return to Karazhan", -- [2]
      },
      [106317] = {
        "Storm Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [139404] = {
        "High Prophet Massas", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [131726] = {
        "Gunnolf the Ferocious", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [70230] = {
        "Zandalari Blade Initiate", -- [1]
        "Throne of Thunder", -- [2]
      },
      [136845] = {
        "Sandscalp Axe Thrower", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [134798] = {
        "Abyss Crawler", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [103758] = {
        "Star Augur Etraeus", -- [1]
        "The Nighthold", -- [2]
      },
      [134286] = {
        "Archmage Tamuura", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [155273] = {
        "Garval the Vanquisher", -- [1]
        "The Eternal Palace", -- [2]
      },
      [161416] = {
        "Aqir Shadowcrafter", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [152202] = {
        "Rowa Bloodstrike", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [140429] = {
        "Drifthopper the Swift", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [136846] = {
        "Sandscalp Blood Drinker", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [170483] = {
        "Atal'ai Deathwalker's Spirit", -- [1]
        "De Other Side", -- [2]
      },
      [140430] = {
        "Craghoof Bounder", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [32666] = {
        "Training Dummy", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [134799] = {
        "Fathomclaw", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [139406] = {
        "Hassan the Bloody Scale", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [53423] = {
        "Twilight Spellbinder", -- [1]
        "Nexus Legendary", -- [2]
      },
      [173190] = {
        "Court Hawkeye", -- [1]
        "Castle Nathria", -- [2]
      },
      [136847] = {
        "Sandscalp Shadow Hunter", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [120651] = {
        "Explosives", -- [1]
        "Waycrest Manor", -- [2]
      },
      [12464] = {
        "Death Talon Seether", -- [1]
        "Blackwing Lair", -- [2]
      },
      [175238] = {
        "Arch-Tyrant Zerios", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [155275] = {
        "Tideshaper Korvess", -- [1]
        "The Eternal Palace", -- [2]
      },
      [140431] = {
        "Craghoof Goat", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [112973] = {
        "Duskwatch Weaver", -- [1]
        "The Nighthold", -- [2]
      },
      [148621] = {
        "Jek'kwa", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [21213] = {
        "Morogrim Tidewalker", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [72791] = {
        "Lingering Corruption", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [171474] = {
        "Finger Food", -- [1]
        "Plaguefall", -- [2]
      },
      [37144] = {
        "Skybreaker Marksman", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [171656] = {
        "Venomous Sniper Captain", -- [1]
        "Plaguefall", -- [2]
      },
      [163978] = {
        "Darkwhisper Cultist", -- [1]
        "Blackwing Descent Scenario", -- [2]
      },
      [85241] = {
        "Night-Twisted Brute", -- [1]
        "Highmaul", -- [2]
      },
      [148622] = {
        "Echo of Kimbul", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [145039] = {
        "Snowstalker", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [165415] = {
        "Toiling Groundskeeper", -- [1]
        "Halls of Atonement", -- [2]
      },
      [23498] = {
        "Parasitic Shadowfiend", -- [1]
        "Black Temple", -- [2]
      },
      [103225] = {
        "Acidmaw Scorpid", -- [1]
        "The Nighthold", -- [2]
      },
      [150154] = {
        "Saurolisk Bonenipper", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [112718] = {
        "Sidereal Familiar", -- [1]
        "The Nighthold", -- [2]
      },
      [151128] = {
        "Lord of Locks", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [152718] = {
        "Alleria Windrunner", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [132755] = {
        "Breakbeak Scavenger", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [151029] = {
        "Thornspeaker Tavery", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [150159] = {
        "King Gobbamak", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [168022] = {
        "Slime Tentacle", -- [1]
        "Plaguefall", -- [2]
      },
      [155278] = {
        "Shimmerskin Pufferfish", -- [1]
        "The Eternal Palace", -- [2]
      },
      [155790] = {
        "Mawsworn Acolyte", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [41139] = {
        "Naz'jar Spiritmender", -- [1]
        "Throne of the Tides", -- [2]
      },
      [148624] = {
        "Echo of Pa'ku", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [122366] = {
        "Varimathras", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [12458] = {
        "Blackwing Taskmaster", -- [1]
        "Blackwing Lair", -- [2]
      },
      [22877] = {
        "Coilskar Wrangler", -- [1]
        "Black Temple", -- [2]
      },
      [140760] = {
        "Earthliving Giant", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [33717] = {
        "Azure Consort", -- [1]
        "Ulduar", -- [2]
      },
      [155791] = {
        "Horrific Shrieker", -- [1]
        "The Eternal Palace", -- [2]
      },
      [53795] = {
        "Egg Pile", -- [1]
        "Firelands", -- [2]
      },
      [148625] = {
        "Echo of Krag'wa", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [165481] = {
        "Court Assassin", -- [1]
        "Castle Nathria", -- [2]
      },
      [129601] = {
        "Cutwater Harpooner", -- [1]
        "Freehold", -- [2]
      },
      [138818] = {
        "Bloodwake Warbringer", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [130635] = {
        "Stonefury", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [106321] = {
        "Tailwind Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [44932] = {
        "Oathsworn Pathfinder", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [133593] = {
        "Expert Technician", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [131099] = {
        "Giggling Nettlevine", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [173708] = {
        "Anchoring Rune", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [105203] = {
        "Felguard Invader", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [173146] = {
        "Winged Ravager", -- [1]
        "Castle Nathria", -- [2]
      },
      [73012] = {
        "Klaxxi Skirmisher", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [134806] = {
        "Bloodsnapper", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [71770] = {
        "Kor'kron Ironblade", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [123702] = {
        "Feltouched Skitterer", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [152722] = {
        "Fallen Voidspeaker", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [33670] = {
        "Aerial Command Unit", -- [1]
        "Ulduar", -- [2]
      },
      [20870] = {
        "Zereketh the Unbound", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [32938] = {
        "Flash Freeze", -- [1]
        "Ulduar", -- [2]
      },
      [167055] = {
        "Rot Flinger", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [102227] = {
        "Dread Harpooner", -- [1]
        "Azsuna", -- [2]
      },
      [16415] = {
        "Skeletal Waiter", -- [1]
        "Karazhan", -- [2]
      },
      [168591] = {
        "Ravenous Dreadbat", -- [1]
        "Sanguine Depths", -- [2]
      },
      [156818] = {
        "Wrathion", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [136665] = {
        "Ashvane Spotter", -- [1]
        "Tol Dagor", -- [2]
      },
      [66652] = {
        "Lesser Volatile Energy", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [71771] = {
        "Kor'kron Arcweaver", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [3637] = {
        "Deviate Guardian", -- [1]
        "Wailing Caverns", -- [2]
      },
      [71515] = {
        "General Nazgrim", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [3653] = {
        "Kresh", -- [1]
        "Wailing Caverns", -- [2]
      },
      [123402] = {
        "Garothi Decimator", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [3669] = {
        "Lord Cobrahn", -- [1]
        "Wailing Caverns", -- [2]
      },
      [165521] = {
        "Lady Inerva Darkvein", -- [1]
        "Castle Nathria", -- [2]
      },
      [61567] = {
        "Vizier Jin'bak", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [150165] = {
        "Slime Elemental", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [72493] = {
        "Trak'gen", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [155090] = {
        "Anodized Coilbearer", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [37023] = {
        "Plague Scientist", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [167998] = {
        "Portal Guardian", -- [1]
        "Theater of Pain", -- [2]
      },
      [156820] = {
        "Dod", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [138820] = {
        "Bloodwake Vrykul", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [52402] = {
        "Venomtooth", -- [1]
        "Zul'Gurub", -- [2]
      },
      [164815] = {
        "Zolramus Siphoner", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [60208] = {
        "Hopling", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [168398] = {
        "Slimy Morsel", -- [1]
        "Plaguefall", -- [2]
      },
      [71772] = {
        "Kor'kron Assassin", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [160404] = {
        "Angry Bear Rug Spirit", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [148631] = {
        "Unexploded Ordnance", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [157333] = {
        "Darkwhisper Cultist", -- [1]
        "Blackwing Descent Scenario", -- [2]
      },
      [59545] = {
        "The Golden Beetle", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [166019] = {
        "Shimmermoth", -- [1]
        "Halls of Atonement", -- [2]
      },
      [130638] = {
        "Vicejaw Crocolisk", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [44980] = {
        "Neferset Theurgist", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [150168] = {
        "Toxic Monstrosity", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [148120] = {
        "Kul Tiran Marine", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [136347] = {
        "Tidesage Initiate", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [149144] = {
        "Jaina's Tide Elemental", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [45620] = {
        "Naz'jar Soldier", -- [1]
        "Throne of the Tides", -- [2]
      },
      [22878] = {
        "Aqueous Lord", -- [1]
        "Black Temple", -- [2]
      },
      [162255] = {
        "Onyxian Warder", -- [1]
        "Onyxia's Lair", -- [2]
      },
      [33719] = {
        "Emerald Consort", -- [1]
        "Ulduar", -- [2]
      },
      [71773] = {
        "Kor'kron Warshaman", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [164501] = {
        "Mistcaller", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [140443] = {
        "Muskflank Charger", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [105301] = {
        "Expedient Elemental", -- [1]
        "The Nighthold", -- [2]
      },
      [38454] = {
        "Kinetic Bomb", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [150169] = {
        "Toxic Lurker", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [77404] = {
        "The Butcher", -- [1]
        "Highmaul", -- [2]
      },
      [147098] = {
        "Spirit of Xuen", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [54952] = {
        "Brittle Ghoul", -- [1]
        "End Time", -- [2]
      },
      [135837] = {
        "Cyclonic Lieutenant", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [70238] = {
        "Unblinking Eye", -- [1]
        "Throne of Thunder", -- [2]
      },
      [71474] = {
        "Embodied Despair", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [22873] = {
        "Coilskar General", -- [1]
        "Black Temple", -- [2]
      },
      [164348] = {
        "Wandering Shade", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [95832] = {
        "Valarjar Shieldmaiden", -- [1]
        "Halls of Valor", -- [2]
      },
      [12017] = {
        "Broodlord Lashlayer", -- [1]
        "Blackwing Lair", -- [2]
      },
      [104534] = {
        "D'zorykx the Trapper", -- [1]
        "The Nighthold", -- [2]
      },
      [71734] = {
        "Sha of Pride", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [151613] = {
        "Anti-Personnel Squirrel", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [157337] = {
        "Spawn of Shad'har", -- [1]
        "Blackwing Descent Scenario", -- [2]
      },
      [36661] = {
        "Rimefang", -- [1]
        "Pit of Saron", -- [2]
      },
      [122450] = {
        "Garothi Worldbreaker", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [130640] = {
        "Vicejaw Sawtooth", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [44981] = {
        "Oathsworn Skinner", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [139422] = {
        "Scaled Krolusk Tamer", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [135839] = {
        "Swampgas", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [94809] = {
        "Knight-Captain Brimley", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [136863] = {
        "Great Mota", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [153755] = {
        "Naeno Megacrash", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [12465] = {
        "Death Talon Wyrmkin", -- [1]
        "Blackwing Lair", -- [2]
      },
      [95833] = {
        "Hyrja", -- [1]
        "Halls of Valor", -- [2]
      },
      [33720] = {
        "Obsidian Consort", -- [1]
        "Ulduar", -- [2]
      },
      [153552] = {
        "Weeping Wraith", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [130639] = {
        "Vicejaw Chomper", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [140447] = {
        "Demolishing Terror", -- [1]
        "Siege of Boralus", -- [2]
      },
      [153244] = {
        "Oblivion Elemental", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [135759] = {
        "Earthwall Totem", -- [1]
        "Kings' Rest", -- [2]
      },
      [71481] = {
        "Embodied Sorrow", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [114261] = {
        "Toe Knee", -- [1]
        "Return to Karazhan", -- [2]
      },
      [127799] = {
        "Dazar'ai Honor Guard", -- [1]
        "Atal'Dazar", -- [2]
      },
      [122963] = {
        "Rezan", -- [1]
        "Atal'Dazar", -- [2]
      },
      [164506] = {
        "Ancient Captain", -- [1]
        "Theater of Pain", -- [2]
      },
      [70240] = {
        "Shan'ze Celestial Shaper", -- [1]
        "Throne of Thunder", -- [2]
      },
      [173720] = {
        "Mistveil Gorgegullet", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [53532] = {
        "Twilight Riftweaver", -- [1]
        "Nexus Legendary", -- [2]
      },
      [22917] = {
        "Illidan Stormrage", -- [1]
        "Black Temple", -- [2]
      },
      [95834] = {
        "Valarjar Mystic", -- [1]
        "Halls of Valor", -- [2]
      },
      [158158] = {
        "Forge-Guard Hurrul", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [139425] = {
        "Crazed Incubator", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [33806] = {
        "Void Beast", -- [1]
        "Ulduar", -- [2]
      },
      [140449] = {
        "Thickflank", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [105304] = {
        "Dominator Tentacle", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [127723] = {
        "Imperator Deconix", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [59819] = {
        "Artillery", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [114262] = {
        "Attumen the Huntsman", -- [1]
        "Return to Karazhan", -- [2]
      },
      [69473] = {
        "Ra-den", -- [1]
        "Throne of Thunder", -- [2]
      },
      [71479] = {
        "He Softfoot", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [127315] = {
        "Reanimation Totem", -- [1]
        "Atal'Dazar", -- [2]
      },
      [123476] = {
        "Hulking Demolisher", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [161437] = {
        "Explosive Scarab", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [71454] = {
        "Malkorok", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [103769] = {
        "Xavius", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [130621] = {
        "Squallshaper Bryson", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [81398] = {
        "Frostwall Goren Hatchling", -- [1]
        "FW Horde Garrison Level 2", -- [2]
      },
      [40579] = {
        "Deep Murloc Hunter", -- [1]
        "Throne of the Tides", -- [2]
      },
      [158285] = {
        "Tinkered Shieldbot", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [33203] = {
        "Ancient Conservator", -- [1]
        "Ulduar", -- [2]
      },
      [58803] = {
        "Residual Hatred", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [153760] = {
        "Enthralled Footman", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [158367] = {
        "Basher Tentacle", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [23775] = {
        "Head of the Horseman", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [143011] = {
        "Sandy Perch", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [122965] = {
        "Vol'kaal", -- [1]
        "Atal'Dazar", -- [2]
      },
      [164510] = {
        "Shambling Arbalest", -- [1]
        "Theater of Pain", -- [2]
      },
      [123477] = {
        "Antoran Doomguard", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [145059] = {
        "Cunning Nightwing", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [168394] = {
        "Slimy Morsel", -- [1]
        "Plaguefall", -- [2]
      },
      [123398] = {
        "Garothi Annihilator", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [19872] = {
        "Lady Catriona Von'Indi", -- [1]
        "Karazhan", -- [2]
      },
      [134822] = {
        "Gritplate Matriarch", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [139429] = {
        "Stonebound Warrior", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [160416] = {
        "Angry Ale Barrel Spirit", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [61485] = {
        "General Pa'valak", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [145060] = {
        "Monstrous Shadefeather", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [56884] = {
        "Corrupted Taran Zhu", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [71160] = {
        "Iyyokuk the Lucid", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [114264] = {
        "Midnight", -- [1]
        "Return to Karazhan", -- [2]
      },
      [69475] = {
        "Arcanital Tula'chek", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [132745] = {
        "Frostscale Wanderer", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [16481] = {
        "Ghastly Haunt", -- [1]
        "Karazhan", -- [2]
      },
      [16545] = {
        "Ethereal Spellfilcher", -- [1]
        "Karazhan", -- [2]
      },
      [155216] = {
        "Faeleaf Warden", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [32916] = {
        "Snaplasher", -- [1]
        "Ulduar", -- [2]
      },
      [156157] = {
        "Coldheart Ascendant", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [20896] = {
        "Ethereum Slayer", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [33722] = {
        "Storm Tempered Keeper", -- [1]
        "Ulduar", -- [2]
      },
      [147621] = {
        "Dark Iron Vanguard", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [168393] = {
        "Plaguebelcher", -- [1]
        "Plaguefall", -- [2]
      },
      [140455] = {
        "Bramblefur Calf", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [21216] = {
        "Hydross the Unstable", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [69474] = {
        "Kresh the Ripper", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [158371] = {
        "Zardeth of the Black Claw", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [114265] = {
        "Gang Ruffian", -- [1]
        "Return to Karazhan", -- [2]
      },
      [146894] = {
        "Fleshrot Cabalist", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [155812] = {
        "Mawsworn Ritualist", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [63106] = {
        "Sik'thik Swarmer", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [140456] = {
        "Bramblefur Musken", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [140968] = {
        "Garnetback Striker", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [29982] = {
        "Drakkari Raider", -- [1]
        "Gundrak", -- [2]
      },
      [132741] = {
        "Flamescale Hydra", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [130025] = {
        "Irontide Thug", -- [1]
        "Tol Dagor", -- [2]
      },
      [112474] = {
        "Corrupted Totem", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [168098] = {
        "Empowered Coldheart Agent", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [129366] = {
        "Bilge Rat Buccaneer", -- [1]
        "Siege of Boralus", -- [2]
      },
      [140457] = {
        "Bramblefur Grazer", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [173729] = {
        "Manifestation of Pride", -- [1]
        "Sanguine Depths", -- [2]
      },
      [114266] = {
        "Shoreline Tidespeaker", -- [1]
        "Return to Karazhan", -- [2]
      },
      [158373] = {
        "Roberto Pupellyverbos", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [36666] = {
        "Spectral Warden", -- [1]
        "The Forge of Souls", -- [2]
      },
      [159321] = {
        "Khateph", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [168099] = {
        "Empowered Coldheart Javelineer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [139946] = {
        "Heart Guardian", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [70245] = {
        "Training Dummy", -- [1]
        "Throne of Thunder", -- [2]
      },
      [145065] = {
        "Fledgling Nightwing", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [170147] = {
        "Volatile Memory", -- [1]
        "De Other Side", -- [2]
      },
      [120153] = {
        "Eonic Defender", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [171171] = {
        "Mawsworn Archer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [134828] = {
        "Aqualing", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [163457] = {
        "Forsworn Vanguard", -- [1]
        "Spires of Ascension", -- [2]
      },
      [164517] = {
        "Tred'ova", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [102672] = {
        "Nythendra", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [146893] = {
        "Fleshrot Mystic", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [62205] = {
        "Wing Leader Ner'onok", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [158375] = {
        "Corruptor Tentacle", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [171172] = {
        "Mawsworn Shackler", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [159303] = {
        "Monstrous Behemoth", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [122969] = {
        "Zanchuli Witch-Doctor", -- [1]
        "Atal'Dazar", -- [2]
      },
      [169927] = {
        "Putrid Butcher", -- [1]
        "Theater of Pain", -- [2]
      },
      [70246] = {
        "Spirit Flayer", -- [1]
        "Throne of Thunder", -- [2]
      },
      [145067] = {
        "Shadefeather Hatchling", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [16017] = {
        "Patchwork Golem", -- [1]
        "Naxxramas", -- [2]
      },
      [158376] = {
        "Psychus", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [171173] = {
        "Mawsworn Shadestalker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [52151] = {
        "Bloodlord Mandokir", -- [1]
        "Zul'Gurub", -- [2]
      },
      [16145] = {
        "Death Knight Captain", -- [1]
        "Naxxramas", -- [2]
      },
      [96608] = {
        "Ebonclaw Worg", -- [1]
        "Halls of Valor", -- [2]
      },
      [53631] = {
        "Cinderweb Spiderling", -- [1]
        "Firelands", -- [2]
      },
      [140973] = {
        "Bore Tunneler", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [32906] = {
        "Freya", -- [1]
        "Ulduar", -- [2]
      },
      [40634] = {
        "Naz'jar Tempest Witch", -- [1]
        "Throne of the Tides", -- [2]
      },
      [5913] = {
        "Tremor Totem", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [102239] = {
        "Lord Brinebeard", -- [1]
        "Azsuna", -- [2]
      },
      [122970] = {
        "Shadowblade Stalker", -- [1]
        "Atal'Dazar", -- [2]
      },
      [16482] = {
        "Trapped Soul", -- [1]
        "Karazhan", -- [2]
      },
      [160937] = {
        "Night Terror", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [140974] = {
        "Eldercraw", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [56875] = {
        "Krik'thik Demolisher", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [53119] = {
        "Flamewaker Forward Guard", -- [1]
        "Firelands", -- [2]
      },
      [20897] = {
        "Ethereum Wave-Caster", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [152236] = {
        "Lady Ashvane", -- [1]
        "The Eternal Palace", -- [2]
      },
      [168104] = {
        "Empowered Flameforge Master", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [96609] = {
        "Gildedfur Stag", -- [1]
        "Halls of Valor", -- [2]
      },
      [71715] = {
        "Orgrimmar Faithful", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [140975] = {
        "Youngercraw", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [71482] = {
        "Embodied Desperation", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [123135] = {
        "Ratzighan", -- [1]
        "Isle of Conquest", -- [2]
      },
      [42810] = {
        "Crystalspawn Giant", -- [1]
        "The Stonecore", -- [2]
      },
      [122967] = {
        "Priestess Alun'za", -- [1]
        "Atal'Dazar", -- [2]
      },
      [122971] = {
        "Dazar'ai Juggernaut", -- [1]
        "Atal'Dazar", -- [2]
      },
      [70248] = {
        "Arcane Head", -- [1]
        "Throne of Thunder", -- [2]
      },
      [82533] = {
        "Smash", -- [1]
        "Highmaul", -- [2]
      },
      [157356] = {
        "Extractor Thelsara", -- [1]
        "Blackwing Descent Scenario", -- [2]
      },
      [95842] = {
        "Valarjar Thundercaller", -- [1]
        "Halls of Valor", -- [2]
      },
      [150190] = {
        "HK-8 Aerial Oppression Unit", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [30111] = {
        "Twilight Worshipper", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [104288] = {
        "Trilliax", -- [1]
        "The Nighthold", -- [2]
      },
      [168106] = {
        "Empowered Mawsworn Guard", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [129370] = {
        "Irontide Waveshaper", -- [1]
        "Siege of Boralus", -- [2]
      },
      [56631] = {
        "Hopling", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [132744] = {
        "Frostscale Hydra", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [16067] = {
        "Deathcharger Steed", -- [1]
        "Naxxramas", -- [2]
      },
      [173191] = {
        "Soulstalker V'lara", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [126776] = {
        "Slobbering Fiend", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [159405] = {
        "Aqir Scarab", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [122972] = {
        "Dazar'ai Augur", -- [1]
        "Atal'Dazar", -- [2]
      },
      [70249] = {
        "Focused Eye", -- [1]
        "Throne of Thunder", -- [2]
      },
      [82534] = {
        "Spike", -- [1]
        "Highmaul", -- [2]
      },
      [155271] = {
        "Abyssal Spearhunter", -- [1]
        "The Eternal Palace", -- [2]
      },
      [16408] = {
        "Phantom Valet", -- [1]
        "Karazhan", -- [2]
      },
      [22881] = {
        "Aqueous Surger", -- [1]
        "Black Temple", -- [2]
      },
      [95843] = {
        "King Haldor", -- [1]
        "Halls of Valor", -- [2]
      },
      [163501] = {
        "Forsworn Skirmisher", -- [1]
        "Spires of Ascension", -- [2]
      },
      [168108] = {
        "Empowered Lumbering Creation", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [129371] = {
        "Riptide Shredder", -- [1]
        "Siege of Boralus", -- [2]
      },
      [56876] = {
        "Krik'thik Sapper", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [136884] = {
        "Bristlethorn Battleguard", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [44977] = {
        "Neferset Torturer", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [138841] = {
        "Zara'thik Battlesinger", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [122089] = {
        "Slitherblade Oracle", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [114783] = {
        "Reformed Maiden", -- [1]
        "Return to Karazhan", -- [2]
      },
      [155824] = {
        "Lumbering Creation", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [168109] = {
        "Empowered Mawsworn Ritualist", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [94820] = {
        "Worgen Stalker", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [136885] = {
        "Bristlemane Bramble-Weaver", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [19874] = {
        "Baron Rafe Dreuger", -- [1]
        "Karazhan", -- [2]
      },
      [120158] = {
        "Volatile Corruption", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [171181] = {
        "Territorial Bladebeak", -- [1]
        "De Other Side", -- [2]
      },
      [163503] = {
        "Etherdiver", -- [1]
        "Spires of Ascension", -- [2]
      },
      [139445] = {
        "Tumat", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [52409] = {
        "Ragnaros", -- [1]
        "Firelands", -- [2]
      },
      [157354] = {
        "Vexiona", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [140981] = {
        "Gnashing Horror", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [72810] = {
        "Staff of Resonating Water", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [150195] = {
        "Gnome-Eating Slime", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [61239] = {
        "Glintrok Oracle", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [122718] = {
        "Felblade Shocktrooper", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [168111] = {
        "Empowered Imperial Curator", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [61623] = {
        "Sap Globule", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [5763] = {
        "Nightmare Ectoplasm", -- [1]
        "Wailing Caverns", -- [2]
      },
      [33214] = {
        "Mechanolift 304-A", -- [1]
        "Ulduar", -- [2]
      },
      [30284] = {
        "Bonegrinder", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [71157] = {
        "Xaril the Poisoned Mind", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [20898] = {
        "Gargantuan Abyssal", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [139341] = {
        "Icetusk Shadowcaster", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [168112] = {
        "General Kaal", -- [1]
        "Castle Nathria", -- [2]
      },
      [129373] = {
        "Dockhound Packmaster", -- [1]
        "Siege of Boralus", -- [2]
      },
      [94737] = {
        "7th Legion Battlemage", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [21218] = {
        "Vashj'ir Honor Guard", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [76906] = {
        "Operator Thogar", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [21346] = {
        "Sightless Eye", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [130653] = {
        "Wanton Sapper", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [163506] = {
        "Forsworn Stealthclaw", -- [1]
        "Spires of Ascension", -- [2]
      },
      [135353] = {
        "Veteran Man O' War", -- [1]
        "Freehold", -- [2]
      },
      [153031] = {
        "Elite Battlemage", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [94822] = {
        "Abigail the Huntress", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [140984] = {
        "Frostbore Worm", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [164804] = {
        "Droman Oulfarran", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [146103] = {
        "Living Bomb", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [140432] = {
        "Craghoof Leaper", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [30176] = {
        "Ahn'kahar Guardian", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [61436] = {
        "Sik'thik Bladedancer", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [157365] = {
        "Crackling Stalker", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [125535] = {
        "Riftworld Assistant", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [140985] = {
        "Acidic Worm", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [140434] = {
        "Craghoof Rockhorn", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [146104] = {
        "Living Bomb", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [40765] = {
        "Commander Ulthok", -- [1]
        "Throne of the Tides", -- [2]
      },
      [148623] = {
        "Echo of Gonk", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [155830] = {
        "Mawsworn Disciple", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [168627] = {
        "Plaguebinder", -- [1]
        "Plaguefall", -- [2]
      },
      [138428] = {
        "Spitefin Myrmidon", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [165556] = {
        "Fleeting Manifestation", -- [1]
        "Sanguine Depths", -- [2]
      },
      [33343] = {
        "XS-013 Scrapbot", -- [1]
        "Ulduar", -- [2]
      },
      [52606] = {
        "Gurubashi Warmonger", -- [1]
        "Zul'Gurub", -- [2]
      },
      [150712] = {
        "Trixie Tazer", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [113130] = {
        "Burning Sentry", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [155831] = {
        "Mawsworn Soulbinder", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [33983] = {
        "Constrictor Tentacle", -- [1]
        "Ulduar", -- [2]
      },
      [148665] = {
        "Rastari Royal Guard", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [140987] = {
        "Fleshmelter the Insatiable", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [23330] = {
        "Dragonmaw Wind Reaver", -- [1]
        "Black Temple", -- [2]
      },
      [23394] = {
        "Promenade Sentinel", -- [1]
        "Black Temple", -- [2]
      },
      [171188] = {
        "Plaguebound Devoted", -- [1]
        "Plaguefall", -- [2]
      },
      [135736] = {
        "Gore", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [73539] = {
        "Kor'kron Den Mother", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [157368] = {
        "Velinaria", -- [1]
        "Blackwing Descent Scenario", -- [2]
      },
      [59705] = {
        "Scarlet Flamethrower", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [140988] = {
        "Steelshred", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [137405] = {
        "Gripping Terror", -- [1]
        "Siege of Boralus", -- [2]
      },
      [134173] = {
        "Animated Droplet", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [19875] = {
        "Baroness Dorothea Millstipe", -- [1]
        "Karazhan", -- [2]
      },
      [52155] = {
        "High Priest Venoxis", -- [1]
        "Zul'Gurub", -- [2]
      },
      [16146] = {
        "Death Knight", -- [1]
        "Naxxramas", -- [2]
      },
      [139949] = {
        "Plague Doctor", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [148667] = {
        "Rastari Punisher", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [56762] = {
        "Yu'lon", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [56890] = {
        "Krik'thik Infiltrator", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [174773] = {
        "Spiteful Shade", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [33216] = {
        "Mechagnome Pilot", -- [1]
        "Ulduar", -- [2]
      },
      [167607] = {
        "Stoneborn Slasher", -- [1]
        "Halls of Atonement", -- [2]
      },
      [140990] = {
        "Bonescale Spitter", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [28961] = {
        "Titanium Siegebreaker", -- [1]
        "Halls of Lightning", -- [2]
      },
      [33088] = {
        "Iron Roots", -- [1]
        "Ulduar", -- [2]
      },
      [53691] = {
        "Shannox", -- [1]
        "Firelands", -- [2]
      },
      [12435] = {
        "Razorgore the Untamed", -- [1]
        "Blackwing Lair", -- [2]
      },
      [12467] = {
        "Death Talon Captain", -- [1]
        "Blackwing Lair", -- [2]
      },
      [165474] = {
        "Nathrian Assassin", -- [1]
        "Castle Nathria", -- [2]
      },
      [94190] = {
        "Burning Sentry", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [123191] = {
        "Fel Hound", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [73538] = {
        "Kor'kron War Wolf", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [146102] = {
        "Living Bomb", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [58810] = {
        "Fragment of Hatred", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [139814] = {
        "Merger Specialist Huzzle", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [159312] = {
        "Living Blood", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [106087] = {
        "Elerethe Renferal", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [102248] = {
        "Ravenous Hunter", -- [1]
        "Azsuna", -- [2]
      },
      [131728] = {
        "Raul the Tenacious", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [152253] = {
        "The Tarragrue", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [52405] = {
        "Mor'Lek the Dismantler", -- [1]
        "Zul'Gurub", -- [2]
      },
      [140992] = {
        "Corpseburster", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [139457] = {
        "Stonebound Quilen", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [134600] = {
        "Sandswept Marksman", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [134338] = {
        "Tidesage Enforcer", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [167610] = {
        "Stonefiend Anklebiter", -- [1]
        "Halls of Atonement", -- [2]
      },
      [151742] = {
        "Void-Twisted Invader", -- [1]
        "Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
      },
      [20868] = {
        "Entropic Eye", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [10404] = {
        "Pustulating Horror", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [56763] = {
        "Regenerating Sha", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [165824] = {
        "Nar'zudah", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [144837] = {
        "Darkshore Stag", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [138434] = {
        "Spitefin Tempest Witch", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [167611] = {
        "Stoneborn Eviscerator", -- [1]
        "Halls of Atonement", -- [2]
      },
      [52524] = {
        "Cinderweb Spinner", -- [1]
        "Firelands", -- [2]
      },
      [123236] = {
        "Scuttlestep Crab", -- [1]
        "Freehold", -- [2]
      },
      [155828] = {
        "Runecarved Colossus", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [94189] = {
        "Living Felblaze", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [65402] = {
        "Gurthan Swiftblade", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [22883] = {
        "Aqueous Spawn", -- [1]
        "Black Temple", -- [2]
      },
      [22947] = {
        "Mother Shahraz", -- [1]
        "Black Temple", -- [2]
      },
      [167612] = {
        "Stoneborn Reaver", -- [1]
        "Halls of Atonement", -- [2]
      },
      [139459] = {
        "Stonebound Soldier", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [58555] = {
        "Scarlet Fanatic", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [148673] = {
        "Vessel of Bwonsamdi", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [52530] = {
        "Alysrazor", -- [1]
        "Firelands", -- [2]
      },
      [122086] = {
        "Slitherblade Ironscale", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [166589] = {
        "Animated Weapon", -- [1]
        "Sanguine Depths", -- [2]
      },
      [122469] = {
        "Diima, Mother of Gloom", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [122468] = {
        "Noura, Mother of Flames", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [139460] = {
        "Stonebound Earthweaver", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [139461] = {
        "Stonebound Rockmaw", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [113128] = {
        "Withered Skulker", -- [1]
        "The Nighthold", -- [2]
      },
      [140996] = {
        "Deepbore", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [56764] = {
        "Consuming Sha", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [39616] = {
        "Naz'jar Invader", -- [1]
        "Throne of the Tides", -- [2]
      },
      [19876] = {
        "Lord Robin Daris", -- [1]
        "Karazhan", -- [2]
      },
      [132807] = {
        "Zian-Ti Quilen", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [135366] = {
        "Blacktooth Arsonist", -- [1]
        "Tol Dagor", -- [2]
      },
      [52413] = {
        "Zulian Gnasher", -- [1]
        "Zul'Gurub", -- [2]
      },
      [56636] = {
        "Commander Ri'mok", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [113512] = {
        "Putrid Sludge", -- [1]
        "The Nighthold", -- [2]
      },
      [166079] = {
        "Brittlebone Crossbowman", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [130404] = {
        "Vermin Trapper", -- [1]
        "Freehold", -- [2]
      },
      [28578] = {
        "Hardened Steel Reaver", -- [1]
        "Halls of Lightning", -- [2]
      },
      [167615] = {
        "Depraved Darkblade", -- [1]
        "Halls of Atonement", -- [2]
      },
      [139462] = {
        "Stonebound Shale-Speaker", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [16485] = {
        "Arcane Watchman", -- [1]
        "Karazhan", -- [2]
      },
      [156866] = {
        "Ra-den", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [139417] = {
        "Rotwood the Cursed", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [33346] = {
        "XE-321 Boombot", -- [1]
        "Ulduar", -- [2]
      },
      [146371] = {
        "Dark Iron Primalist", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [20900] = {
        "Unchained Doombringer", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [150160] = {
        "Scrapbone Bully", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [139463] = {
        "Stonebound Annihilator", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [131785] = {
        "Buzzing Drone", -- [1]
        "Tol Dagor", -- [2]
      },
      [174012] = {
        "Executrix Ophelia", -- [1]
        "Castle Nathria", -- [2]
      },
      [58812] = {
        "Hateful Essence", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [43391] = {
        "Millhouse Manastorm", -- [1]
        "The Stonecore", -- [2]
      },
      [146118] = {
        "Territorial Needleback", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [130661] = {
        "Venture Co. Earthshaper", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [102252] = {
        "Dread Lookout", -- [1]
        "Azsuna", -- [2]
      },
      [139464] = {
        "Zian-Ti Howler", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [144071] = {
        "Irontide Waveshaper", -- [1]
        "Siege of Boralus", -- [2]
      },
      [111210] = {
        "Searing Infernal", -- [1]
        "The Nighthold", -- [2]
      },
      [153285] = {
        "Training Dummy", -- [1]
        "The Underrot", -- [2]
      },
      [135365] = {
        "Matron Alma", -- [1]
        "Waycrest Manor", -- [2]
      },
      [146119] = {
        "Needleback Brute", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [135846] = {
        "Sand-Crusted Striker", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [30178] = {
        "Ahn'kahar Swarmer", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [140993] = {
        "Darktunnel Ambusher", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [52414] = {
        "Tor-Tun", -- [1]
        "Zul'Gurub", -- [2]
      },
      [165059] = {
        "Crimson Protector", -- [1]
        "Castle Nathria Scenario", -- [2]
      },
      [56765] = {
        "Destroying Sha", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [168105] = {
        "Empowered Mawsworn Flametender", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [170690] = {
        "Diseased Horror", -- [1]
        "Theater of Pain", -- [2]
      },
      [15977] = {
        "Poisonous Skitterer", -- [1]
        "Naxxramas", -- [2]
      },
      [163524] = {
        "Kyrian Dark-Praetor", -- [1]
        "Spires of Ascension", -- [2]
      },
      [114794] = {
        "Skeletal Hound", -- [1]
        "Return to Karazhan", -- [2]
      },
      [72945] = {
        "Dragonmaw Bonecrusher", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [165060] = {
        "Animimic", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [53694] = {
        "Riplimb", -- [1]
        "Firelands", -- [2]
      },
      [157122] = {
        "Patrician Cromwell", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [133836] = {
        "Reanimated Guardian", -- [1]
        "The Underrot", -- [2]
      },
      [156146] = {
        "Voidbound Shieldbearer", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [5755] = {
        "Deviate Viper", -- [1]
        "Wailing Caverns", -- [2]
      },
      [151752] = {
        "Voidswarm", -- [1]
        "Emerald Dream - HoA Scenario", -- [2]
      },
      [121193] = {
        "Shadowsoul", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [165061] = {
        "Crimson Assassin", -- [1]
        "Castle Nathria Scenario", -- [2]
      },
      [135834] = {
        "Vile Cloud", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [58108] = {
        "Krik'thik Infiltrator", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [138444] = {
        "General Vesparak", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [167109] = {
        "Skeletal Vanguard", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [146884] = {
        "Warlord Hjelskard", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [139468] = {
        "Spineripper Ku-Kon", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [94576] = {
        "Skyfire Gryphon", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [169157] = {
        "Mudlump", -- [1]
        "Castle Nathria", -- [2]
      },
      [168107] = {
        "Empowered Mawsworn Interceptor", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [159425] = {
        "Occult Shadowmender", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [111980] = {
        "Nightmother", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [16243] = {
        "Plague Slime", -- [1]
        "Naxxramas", -- [2]
      },
      [71542] = {
        "Blood", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [151754] = {
        "Void Haunt", -- [1]
        "Emerald Dream - HoA Scenario", -- [2]
      },
      [114284] = {
        "Elfyra", -- [1]
        "Return to Karazhan", -- [2]
      },
      [125545] = {
        "Blazing Imp", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [56766] = {
        "Volatile Energy", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [167111] = {
        "Spinemaw Staghorn", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [61245] = {
        "Capacitor Totem", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [28579] = {
        "Hardened Steel Berserker", -- [1]
        "Halls of Lightning", -- [2]
      },
      [61434] = {
        "Sik'thik Vanguard", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [114796] = {
        "Wholesome Hostess", -- [1]
        "Return to Karazhan", -- [2]
      },
      [164552] = {
        "Rotmarrow Slime", -- [1]
        "Plaguefall", -- [2]
      },
      [169159] = {
        "Unstable Canister", -- [1]
        "Plaguefall", -- [2]
      },
      [53695] = {
        "Rageface", -- [1]
        "Firelands", -- [2]
      },
      [87411] = {
        "Workshop Guardian", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [12468] = {
        "Death Talon Hatcher", -- [1]
        "Blackwing Lair", -- [2]
      },
      [20901] = {
        "Sargeron Archer", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [71543] = {
        "Immerseus", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [139471] = {
        "Bugan the Flesh-Crusher", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [164553] = {
        "Misty Ally", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [82532] = {
        "Krush", -- [1]
        "Highmaul", -- [2]
      },
      [21221] = {
        "Coilfang Beast-Tamer", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [64183] = {
        "Enormous Stone Quilen", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [158411] = {
        "Unstable Servant", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [167113] = {
        "Spinemaw Acidgullet", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [114541] = {
        "Spectral Patron", -- [1]
        "Return to Karazhan", -- [2]
      },
      [147614] = {
        "Dark Iron Primalist", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [76865] = {
        "Beastlord Darmac", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [165066] = {
        "Huntsman Altimor", -- [1]
        "Castle Nathria", -- [2]
      },
      [135322] = {
        "The Golden Serpent", -- [1]
        "Kings' Rest", -- [2]
      },
      [64061] = {
        "Mogu'shan Warden", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [150222] = {
        "Gunker", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [168101] = {
        "Empowered Deadsoul Shade", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [30179] = {
        "Twilight Apostle", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [165560] = {
        "Gormling Larva", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [164555] = {
        "Millificent Manastorm", -- [1]
        "De Other Side", -- [2]
      },
      [165067] = {
        "Margore", -- [1]
        "Castle Nathria", -- [2]
      },
      [132819] = {
        "Rustpelt Pup", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [145616] = {
        "King Rastakhan", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [162508] = {
        "Anubisath Sentinel", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [146596] = {
        "Darkscale Myrmidon", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [77687] = {
        "Grom'kar Man-at-Arms", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [139474] = {
        "Qor-Xin the Earth-Caller", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [164556] = {
        "Millhouse Manastorm", -- [1]
        "De Other Side", -- [2]
      },
      [45378] = {
        "Augh", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [132820] = {
        "Mudsnout Piglet", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [71152] = {
        "Skeer the Bloodseeker", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [22885] = {
        "Dragon Turtle", -- [1]
        "Black Temple", -- [2]
      },
      [167116] = {
        "Spinemaw Reaver", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [151755] = {
        "Shadehound", -- [1]
        "Emerald Dream - HoA Scenario", -- [2]
      },
      [139475] = {
        "Jade-Formed Bonesnapper", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [164557] = {
        "Shard of Halkias", -- [1]
        "Halls of Atonement", -- [2]
      },
      [165030] = {
        "Lady Inerva Darkvein", -- [1]
        "Castle Nathria Scenario", -- [2]
      },
      [173714] = {
        "Mistveil Nightblossom", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [110617] = {
        "Shadowsworn Harbinger", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [42691] = {
        "Stonecore Rift Conjurer", -- [1]
        "The Stonecore", -- [2]
      },
      [167117] = {
        "Spinemaw Larva", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [130896] = {
        "Blackout Barrel", -- [1]
        "Freehold", -- [2]
      },
      [135893] = {
        "Burning Emberguard", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [164558] = {
        "Hakkar the Soulflayer", -- [1]
        "De Other Side", -- [2]
      },
      [16540] = {
        "Shadow Pillager", -- [1]
        "Karazhan", -- [2]
      },
      [111164] = {
        "Twilight Stardancer", -- [1]
        "The Nighthold", -- [2]
      },
      [157904] = {
        "Aqir Scarab", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [146131] = {
        "Bartok the Burrower", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [60710] = {
        "Subetai the Swift", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [64446] = {
        "Training Dummy", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [153532] = {
        "Aqir Mindhunter", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [52417] = {
        "Shredtooth Frenzy", -- [1]
        "Zul'Gurub", -- [2]
      },
      [162310] = {
        "Hunter", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [165479] = {
        "Court Enforcer", -- [1]
        "Castle Nathria", -- [2]
      },
      [145053] = {
        "Eldritch Abomination", -- [1]
        "Crucible of Storms", -- [2]
      },
      [28580] = {
        "Hardened Steel Skycaller", -- [1]
        "Halls of Lightning", -- [2]
      },
      [61247] = {
        "Glintrok Greenhorn", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [53185] = {
        "Flamewaker Overseer", -- [1]
        "Firelands", -- [2]
      },
      [28836] = {
        "Stormforged Runeshaper", -- [1]
        "Halls of Lightning", -- [2]
      },
      [135895] = {
        "Blazing Spark", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [45379] = {
        "Augh", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [146365] = {
        "Blazing Fireguard", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [33350] = {
        "Mimiron", -- [1]
        "Ulduar", -- [2]
      },
      [166608] = {
        "Mueh'zala", -- [1]
        "De Other Side", -- [2]
      },
      [20902] = {
        "Sargeron Hellcaller", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [58807] = {
        "Vestige of Hatred", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [3654] = {
        "Mutanus the Devourer", -- [1]
        "Wailing Caverns", -- [2]
      },
      [61945] = {
        "Gurthan Iron Maw", -- [1]
        "Azsuna", -- [2]
      },
      [3670] = {
        "Lord Pythas", -- [1]
        "Wailing Caverns", -- [2]
      },
      [68476] = {
        "Horridon", -- [1]
        "Throne of Thunder", -- [2]
      },
      [136297] = {
        "Forgotten Denizen", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [42692] = {
        "Stonecore Bruiser", -- [1]
        "The Stonecore", -- [2]
      },
      [156837] = {
        "Valeera Sanguinar", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [138968] = {
        "Zian-Ti Ironmaw", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [139480] = {
        "Stonebound Protector", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [164562] = {
        "Depraved Houndmaster", -- [1]
        "Halls of Atonement", -- [2]
      },
      [156884] = {
        "Essence of Vita", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [78714] = {
        "Kargath Bladefist", -- [1]
        "Highmaul", -- [2]
      },
      [64063] = {
        "Mogu'shan Arcanist", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [145058] = {
        "Shadefeather Raven", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [37016] = {
        "Skybreaker Luminary", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [138969] = {
        "Zian-Ti Spirit", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [70235] = {
        "Frozen Head", -- [1]
        "Throne of Thunder", -- [2]
      },
      [52418] = {
        "Lost Offspring of Gahz'ranka", -- [1]
        "Zul'Gurub", -- [2]
      },
      [162744] = {
        "Nekthara the Mangler", -- [1]
        "Theater of Pain", -- [2]
      },
      [163459] = {
        "Forsworn Mender", -- [1]
        "Spires of Ascension", -- [2]
      },
      [72828] = {
        "Claw of Burning Anger", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [140442] = {
        "Muskflank Yak", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [36678] = {
        "Professor Putricide", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [138970] = {
        "Vengeful Spirit", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [114802] = {
        "Spectral Journeyman", -- [1]
        "Return to Karazhan", -- [2]
      },
      [158315] = {
        "Eye of Chaos", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [165076] = {
        "Gluttonous Tick", -- [1]
        "Sanguine Depths", -- [2]
      },
      [123760] = {
        "Fel-Infused Destructor", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [68079] = {
        "Ro'shak", -- [1]
        "Throne of Thunder", -- [2]
      },
      [133852] = {
        "Living Rot", -- [1]
        "The Underrot", -- [2]
      },
      [134364] = {
        "Faithless Tender", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [138971] = {
        "Zian-Ti Serpent", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [112709] = {
        "Promenade Guard", -- [1]
        "The Nighthold", -- [2]
      },
      [67966] = {
        "Whirl Turtle", -- [1]
        "Throne of Thunder", -- [2]
      },
      [68222] = {
        "Bow Fly Swarm", -- [1]
        "Throne of Thunder", -- [2]
      },
      [165529] = {
        "Depraved Collector", -- [1]
        "Halls of Atonement", -- [2]
      },
      [140970] = {
        "Cragburster", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [129367] = {
        "Bilge Rat Tempest", -- [1]
        "Siege of Boralus", -- [2]
      },
      [146650] = {
        "Champion Sentinel", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [138972] = {
        "Zian-Ti Cloudbreaker", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [114803] = {
        "Spectral Stable Hand", -- [1]
        "Return to Karazhan", -- [2]
      },
      [158136] = {
        "Inquisitor Darkspeak", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [63808] = {
        "Faintly Glowing Gem", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [168594] = {
        "Chamber Sentinel", -- [1]
        "Sanguine Depths", -- [2]
      },
      [170197] = {
        "Conjured Manifestation", -- [1]
        "Castle Nathria", -- [2]
      },
      [163966] = {
        "Dread Siphonist", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [129369] = {
        "Irontide Raider", -- [1]
        "Siege of Boralus", -- [2]
      },
      [164567] = {
        "Ingra Maloch", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [16148] = {
        "Spectral Death Knight", -- [1]
        "Naxxramas", -- [2]
      },
      [152282] = {
        "Underhold Elite Guard", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [16424] = {
        "Spectral Sentry", -- [1]
        "Karazhan", -- [2]
      },
      [16244] = {
        "Infectious Ghoul", -- [1]
        "Naxxramas", -- [2]
      },
      [135903] = {
        "Manifestation of the Deep", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [146140] = {
        "Quilldozer", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [73342] = {
        "Fallen Pool Tender", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [36807] = {
        "Deathspeaker Disciple", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [139486] = {
        "Skycrack", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [16488] = {
        "Arcane Anomaly", -- [1]
        "Karazhan", -- [2]
      },
      [28837] = {
        "Stormforged Sentinel", -- [1]
        "Halls of Lightning", -- [2]
      },
      [170199] = {
        "Harnessed Specter", -- [1]
        "Castle Nathria", -- [2]
      },
      [28965] = {
        "Titanium Thunderer", -- [1]
        "Halls of Lightning", -- [2]
      },
      [72941] = {
        "Dragonmaw Grunt", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [146653] = {
        "Champion Hunter", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [112638] = {
        "Astral Defender", -- [1]
        "The Nighthold", -- [2]
      },
      [66413] = {
        "Yeasty Brew Alemental", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [113013] = {
        "Felsworn Shadowblade", -- [1]
        "The Nighthold", -- [2]
      },
      [68078] = {
        "Iron Qon", -- [1]
        "Throne of Thunder", -- [2]
      },
      [84860] = {
        "Iron Earthbinder", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [105591] = {
        "Nightmare Horror", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [110616] = {
        "Dark Worshipper", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [138464] = {
        "Ashvane Deckhand", -- [1]
        "Siege of Boralus", -- [2]
      },
      [59458] = {
        "Hopling", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [151773] = {
        "Junkyard D.0.G.", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [128095] = {
        "Sister of the Lash", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [111222] = {
        "Demonic Essence", -- [1]
        "The Nighthold", -- [2]
      },
      [165594] = {
        "Coldheart Ambusher", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [8886] = {
        "Deviate Python", -- [1]
        "Wailing Caverns", -- [2]
      },
      [21863] = {
        "Serpentshrine Lurker", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [138465] = {
        "Ashvane Cannoneer", -- [1]
        "Siege of Boralus", -- [2]
      },
      [139284] = {
        "Plague Doctor", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [30245] = {
        "Nexus Lord", -- [1]
        "The Eye of Eternity", -- [2]
      },
      [153527] = {
        "Aqir Swarmleader", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [153015] = {
        "Bound Soul", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [132835] = {
        "Dreadfang Snake", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [134284] = {
        "Fallen Deathspeaker", -- [1]
        "The Underrot", -- [2]
      },
      [36808] = {
        "Deathspeaker Zealot", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [138466] = {
        "Obsidian Whelp", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [53188] = {
        "Flamewaker Subjugator", -- [1]
        "Firelands", -- [2]
      },
      [16539] = {
        "Homunculus", -- [1]
        "Karazhan", -- [2]
      },
      [131812] = {
        "Heartsbane Soulcharmer", -- [1]
        "Waycrest Manor", -- [2]
      },
      [73452] = {
        "Harbinger of Y'Shaarj", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [140441] = {
        "Muskflank Calf", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [170418] = {
        "Goxul the Devourer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [22887] = {
        "High Warlord Naj'entus", -- [1]
        "Black Temple", -- [2]
      },
      [138467] = {
        "Obsidian Dragonkin", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [138979] = {
        "Muckfin Tidecaller", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [155871] = {
        "Voidbound Terror", -- [1]
        "The Eternal Palace", -- [2]
      },
      [19873] = {
        "Lord Crispin Ference", -- [1]
        "Karazhan", -- [2]
      },
      [160990] = {
        "Image of Absolution", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [161502] = {
        "Ravenous Fleshfiend", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [134788] = {
        "Spineclaw Rockshell", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [42695] = {
        "Stonecore Sentry", -- [1]
        "The Stonecore", -- [2]
      },
      [138468] = {
        "Obsidian Flamecaller", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [138980] = {
        "Muckfin Raider", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [59459] = {
        "Hopling", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [148194] = {
        "Icy Barrier", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [144611] = {
        "Coralback Scuttler", -- [1]
        "The Eternal Palace", -- [2]
      },
      [145123] = {
        "Myara Nightsong", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [123478] = {
        "Antoran Felguard", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [120182] = {
        "Tormented Priestess", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [138469] = {
        "Obsidian Scalebane", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [138981] = {
        "Muckfin Oracle", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [14101] = {
        "Enraged Felguard", -- [1]
        "Blackwing Lair", -- [2]
      },
      [173613] = {
        "Nathrian Registrar", -- [1]
        "Castle Nathria", -- [2]
      },
      [133685] = {
        "Befouled Spirit", -- [1]
        "The Underrot", -- [2]
      },
      [136934] = {
        "Weapons Tester", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [164407] = {
        "Sludgefist", -- [1]
        "Castle Nathria", -- [2]
      },
      [56895] = {
        "Weak Spot", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [28582] = {
        "Stormforged Mender", -- [1]
        "Halls of Lightning", -- [2]
      },
      [138982] = {
        "Muckfin Murloc", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [16425] = {
        "Phantom Guardsman", -- [1]
        "Karazhan", -- [2]
      },
      [16489] = {
        "Chaotic Sentience", -- [1]
        "Karazhan", -- [2]
      },
      [28838] = {
        "Titanium Vanguard", -- [1]
        "Halls of Lightning", -- [2]
      },
      [129372] = {
        "Blacktar Bomber", -- [1]
        "Siege of Boralus", -- [2]
      },
      [33354] = {
        "Corrupted Servitor", -- [1]
        "Ulduar", -- [2]
      },
      [157620] = {
        "Prophet Skitra", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [20904] = {
        "Warden Mellichar", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [138983] = {
        "Muckfin Tidehunter", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [160405] = {
        "Angry Treant Chair Spirit", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [131817] = {
        "Cragmaw the Infested", -- [1]
        "The Underrot", -- [2]
      },
      [162018] = {
        "Temple Guard", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [21224] = {
        "Tidewalker Depth-Seer", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [121975] = {
        "Aggramar", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [42696] = {
        "Stonecore Warbringer", -- [1]
        "The Stonecore", -- [2]
      },
      [102263] = {
        "Skorpyron", -- [1]
        "The Nighthold", -- [2]
      },
      [36478] = {
        "Soulguard Watchman", -- [1]
        "The Forge of Souls", -- [2]
      },
      [59460] = {
        "Hopling", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [131818] = {
        "Marked Sister", -- [1]
        "Waycrest Manor", -- [2]
      },
      [111226] = {
        "Summoner Xiv", -- [1]
        "The Nighthold", -- [2]
      },
      [3475] = {
        "Лещенко", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [134283] = {
        "Anchorite Lanna", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [21214] = {
        "Fathom-Lord Karathress", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [138473] = {
        "Stygia", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [127045] = {
        "Antoran Champion", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [105322] = {
        "Deathglare Tentacle", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [131819] = {
        "Coven Diviner", -- [1]
        "Waycrest Manor", -- [2]
      },
      [33985] = {
        "Corruptor Tentacle", -- [1]
        "Ulduar", -- [2]
      },
      [131729] = {
        "Lyco", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [162020] = {
        "Priestess of Elune", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [158437] = {
        "Fallen Taskmaster", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [139191] = {
        "Underbrush", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [138986] = {
        "Borgl the Seeker", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [157340] = {
        "Skeletal Remains", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [20866] = {
        "Soul Devourer", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [111227] = {
        "Felweaver Pharamere", -- [1]
        "The Nighthold", -- [2]
      },
      [136250] = {
        "Hoodoo Hexer", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [162021] = {
        "Temple Archer", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [138987] = {
        "Muckfin High Oracle", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [112251] = {
        "Putrid Sludge", -- [1]
        "The Nighthold", -- [2]
      },
      [5756] = {
        "Deviate Venomwing", -- [1]
        "Wailing Caverns", -- [2]
      },
      [140986] = {
        "Acidic Burrower", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [131821] = {
        "Faceless Maiden", -- [1]
        "Waycrest Manor", -- [2]
      },
      [134893] = {
        "Ironweb Spider", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [161510] = {
        "Mindrend Tentacle", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [123001] = {
        "Dark Water", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [162534] = {
        "Anubisath Sentinel", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [73349] = {
        "Tormented Initiate", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [138988] = {
        "Mrgl-Eye", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [59461] = {
        "Hopling", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [133870] = {
        "Diseased Lasher", -- [1]
        "The Underrot", -- [2]
      },
      [152809] = {
        "Alx'kov the Infested", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [15989] = {
        "Sapphiron", -- [1]
        "Naxxramas", -- [2]
      },
      [64068] = {
        "Mogu'shan Engine Keeper", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [150250] = {
        "Pistonhead Blaster", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [148615] = {
        "Div'yane", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [138989] = {
        "Saltfin", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [16149] = {
        "Spectral Horse", -- [1]
        "Naxxramas", -- [2]
      },
      [131823] = {
        "Sister Malady", -- [1]
        "Waycrest Manor", -- [2]
      },
      [57080] = {
        "Corrupted Scroll", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [53575] = {
        "Lava Wielder", -- [1]
        "Firelands", -- [2]
      },
      [145644] = {
        "Bwonsamdi", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [150251] = {
        "Pistonhead Mechanic", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [28583] = {
        "Blistering Steamrager", -- [1]
        "Halls of Lightning", -- [2]
      },
      [45001] = {
        "Enslaved Bandit", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [173798] = {
        "Rat of Unusual Size", -- [1]
        "Castle Nathria", -- [2]
      },
      [131824] = {
        "Sister Solena", -- [1]
        "Waycrest Manor", -- [2]
      },
      [24744] = {
        "Vexallus", -- [1]
        "Magister's Terrace", -- [2]
      },
      [33228] = {
        "Eonar's Gift", -- [1]
        "Ulduar", -- [2]
      },
      [84841] = {
        "Iron Dockworker", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [154347] = {
        "Void-Twisted Corruptor", -- [1]
        "Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
      },
      [20905] = {
        "Blazing Trickster", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [138991] = {
        "Grrl", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [168878] = {
        "Rigged Plagueborer", -- [1]
        "Plaguefall", -- [2]
      },
      [131825] = {
        "Sister Briar", -- [1]
        "Waycrest Manor", -- [2]
      },
      [147891] = {
        "Proudmoore Infantry", -- [1]
        "Tol Dagor Scenario", -- [2]
      },
      [132849] = {
        "Grizzlefur Cub", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [133361] = {
        "Wasting Servant", -- [1]
        "Waycrest Manor", -- [2]
      },
      [150253] = {
        "Weaponized Crawler", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [106319] = {
        "Ember Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [138992] = {
        "Muckfin Puddlejumper", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [146867] = {
        "Mistscorn Sharphorn", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [168681] = {
        "Forsworn Helion", -- [1]
        "Spires of Ascension", -- [2]
      },
      [34085] = {
        "Forge Construct", -- [1]
        "Ulduar", -- [2]
      },
      [173800] = {
        "Sewer Rat", -- [1]
        "Castle Nathria", -- [2]
      },
      [139419] = {
        "High Oracle Asayza", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [137969] = {
        "Interment Construct", -- [1]
        "Kings' Rest", -- [2]
      },
      [138481] = {
        "Chromitus", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [134898] = {
        "Venomfang Recluse", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [172265] = {
        "Remnant of Fury", -- [1]
        "Sanguine Depths", -- [2]
      },
      [67977] = {
        "Tortos", -- [1]
        "Throne of Thunder", -- [2]
      },
      [88708] = {
        "orag", -- [1]
        "Deepwind Gorge", -- [2]
      },
      [33855] = {
        "Junk Bot", -- [1]
        "Ulduar", -- [2]
      },
      [137458] = {
        "Rotting Spore", -- [1]
        "The Underrot", -- [2]
      },
      [109591] = {
        "Felguard Legionnaire", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [140841] = {
        "Snickering Ripple", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [134899] = {
        "Venomfang Lurker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [32845] = {
        "Hodir", -- [1]
        "Ulduar", -- [2]
      },
      [168683] = {
        "Gorak Zhar", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [139700] = {
        "Brineshell Sea Shaman", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [173802] = {
        "Carved Assistant", -- [1]
        "Castle Nathria", -- [2]
      },
      [21225] = {
        "Tidewalker Warrior", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [112255] = {
        "Sludgerax", -- [1]
        "The Nighthold", -- [2]
      },
      [138483] = {
        "Obsidian Monstrosity", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [134900] = {
        "Venomfang Spider", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [136864] = {
        "Uguu the Feared", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [130909] = {
        "Fetid Maggot", -- [1]
        "The Underrot", -- [2]
      },
      [169196] = {
        "Crimson Cabalist", -- [1]
        "Castle Nathria", -- [2]
      },
      [165805] = {
        "Shade of Kael'thas", -- [1]
        "Castle Nathria", -- [2]
      },
      [23337] = {
        "Illidari Centurion", -- [1]
        "Black Temple", -- [2]
      },
      [59835] = {
        "Krik'thik Swarmer", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [138484] = {
        "Obsidian Prophet", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [138996] = {
        "Earth-Speaker Juwa", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [131318] = {
        "Elder Leaxa", -- [1]
        "The Underrot", -- [2]
      },
      [160495] = {
        "Maniacal Soulbinder", -- [1]
        "Theater of Pain", -- [2]
      },
      [16018] = {
        "Bile Retcher", -- [1]
        "Naxxramas", -- [2]
      },
      [146116] = {
        "Needleback Forager", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [132802] = {
        "Craghorn Yeti", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [94812] = {
        "7th Legion Paratrooper", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [134390] = {
        "Sand-crusted Striker", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [138997] = {
        "Grawlash the Frenzied", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [171184] = {
        "Mythresh, Sky's Talons", -- [1]
        "De Other Side", -- [2]
      },
      [135926] = {
        "Smolderheart", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [73098] = {
        "Kor'kron Overseer", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [138998] = {
        "Thick-Hide", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [157102] = {
        "Imperial Consular", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [126333] = {
        "Felseeker Ritualist", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [28584] = {
        "Unbound Firestorm", -- [1]
        "Halls of Lightning", -- [2]
      },
      [24553] = {
        "Apoko", -- [1]
        "Magister's Terrace", -- [2]
      },
      [37116] = {
        "Skybreaker Sorcerer", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [16491] = {
        "Mana Feeder", -- [1]
        "Karazhan", -- [2]
      },
      [146493] = {
        "Phantom of Slaughter", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [139414] = {
        "Mire Priest Vassz", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [146864] = {
        "Mistscorn Earthbinder", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [120191] = {
        "Eternal Soulguard", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [148619] = {
        "Echo of Akunda", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [138999] = {
        "Elder Ordol", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [36476] = {
        "Ick", -- [1]
        "Pit of Saron", -- [2]
      },
      [42188] = {
        "Ozruk", -- [1]
        "The Stonecore", -- [2]
      },
      [118374] = {
        "Captain Yathae Moonstrike", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [21226] = {
        "Tidewalker Shaman", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [136391] = {
        "Heart Guardian", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [146678] = {
        "Ancient Protector", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [150773] = {
        "Shimmerskin Pufferfish", -- [1]
        "The Eternal Palace", -- [2]
      },
      [69516] = {
        "Zandalari Barricade", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [59464] = {
        "Hopper", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [135929] = {
        "Baron Blazehollow", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [56439] = {
        "Sha of Doubt", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [129826] = {
        "Brineshell Snapclaw", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [171433] = {
        "Suppressor Cer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [158452] = {
        "Mindtwist Tendril", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [138489] = {
        "Shadow of Zul", -- [1]
        "Kings' Rest", -- [2]
      },
      [139001] = {
        "Wildlands Ursa", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [151798] = {
        "Vexiona", -- [1]
        "Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
      },
      [135930] = {
        "Lavarok", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [158774] = {
        "Broken Citizen", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [29713] = {
        "Slad'ran Constrictor", -- [1]
        "Gundrak", -- [2]
      },
      [40633] = {
        "Naz'jar Honor Guard", -- [1]
        "Throne of the Tides", -- [2]
      },
      [69517] = {
        "Zeb'tula Stoneshield", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [111070] = {
        "Soul Fragment of Azzinoth", -- [1]
        "The Nighthold", -- [2]
      },
      [139002] = {
        "Wildlands Totemic", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [168361] = {
        "Fen Hornet", -- [1]
        "Plaguefall", -- [2]
      },
      [156406] = {
        "Voidbound Honor Guard", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [165108] = {
        "Illusionary Clone", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [171432] = {
        "Suppressor Hersi", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [69352] = {
        "Vampiric Cave Bat", -- [1]
        "Throne of Thunder", -- [2]
      },
      [166644] = {
        "Artificer Xy'mox", -- [1]
        "Castle Nathria", -- [2]
      },
      [22954] = {
        "Illidari Fearbringer", -- [1]
        "Black Temple", -- [2]
      },
      [139003] = {
        "Wildlands Warrior", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [130521] = {
        "Freehold Deckhand", -- [1]
        "Freehold", -- [2]
      },
      [58569] = {
        "Scarlet Purifier", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [121473] = {
        "Coercitor Nixa", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [162038] = {
        "Regal Mistdancer", -- [1]
        "Sanguine Depths", -- [2]
      },
      [121985] = {
        "Flame of Taeshalach", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [23402] = {
        "Illidari Battle-mage", -- [1]
        "Black Temple", -- [2]
      },
      [142587] = {
        "Devouring Maggot", -- [1]
        "Waycrest Manor", -- [2]
      },
      [139004] = {
        "Wildlands Shaman", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [54191] = {
        "Risen Ghoul", -- [1]
        "End Time", -- [2]
      },
      [135934] = {
        "Lord Incindivar", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [56906] = {
        "Saboteur Kip'tilak", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [37711] = {
        "Hungering Ghoul", -- [1]
        "Pit of Saron", -- [2]
      },
      [16022] = {
        "Surgical Assistant", -- [1]
        "Naxxramas", -- [2]
      },
      [120194] = {
        "Ghostly Acolyte", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [138493] = {
        "Minion of Zul", -- [1]
        "Kings' Rest", -- [2]
      },
      [139005] = {
        "Wildlands Tracker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [16150] = {
        "Spectral Rider", -- [1]
        "Naxxramas", -- [2]
      },
      [117123] = {
        "Tidescale Legionnaire", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [165111] = {
        "Drust Spiteclaw", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [115844] = {
        "Goroth", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [141565] = {
        "Kul Tiran Footman", -- [1]
        "Siege of Boralus", -- [2]
      },
      [138495] = {
        "Twilight Commander", -- [1]
        "Crestfall (Islands 11)", -- [2]
      },
      [28585] = {
        "Slag", -- [1]
        "Halls of Lightning", -- [2]
      },
      [139006] = {
        "Wildlands Furbolg", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [20865] = {
        "Protean Horror", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [16492] = {
        "Syphoner", -- [1]
        "Karazhan", -- [2]
      },
      [144637] = {
        "Grong", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [132864] = {
        "Juvenile Knucklebump", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [162041] = {
        "Grubby Dirtcruncher", -- [1]
        "Sanguine Depths", -- [2]
      },
      [33488] = {
        "Saronite Vapors", -- [1]
        "Ulduar", -- [2]
      },
      [112261] = {
        "Dreadsoul Corruptor", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [139007] = {
        "Feral Stalker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [155899] = {
        "Sak'ja", -- [1]
        "The Eternal Palace", -- [2]
      },
      [108934] = {
        "Tainted Blood", -- [1]
        "The Nighthold", -- [2]
      },
      [125570] = {
        "Riftworld Assistant", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [21227] = {
        "Tidewalker Harpooner", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [135925] = {
        "Pyroblaze", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [150959] = {
        "Mawsworn Interceptor", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [122986] = {
        "Wild Skyscreamer", -- [1]
        "Atal'Dazar", -- [2]
      },
      [139008] = {
        "Primal Mauler", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [155900] = {
        "Zsal'iss", -- [1]
        "The Eternal Palace", -- [2]
      },
      [43214] = {
        "Slabhide", -- [1]
        "The Stonecore", -- [2]
      },
      [59722] = {
        "Pile of Corpses", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [154030] = {
        "Oddly Large Mawrat", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [137473] = {
        "Guard Captain Atu", -- [1]
        "Kings' Rest", -- [2]
      },
      [160169] = {
        "Honored Duelist", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [138497] = {
        "Twilight Scalesworn", -- [1]
        "Crestfall (Islands 11)", -- [2]
      },
      [139009] = {
        "Feral Hunter", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [30249] = {
        "Scion of Eternity", -- [1]
        "The Eye of Eternity", -- [2]
      },
      [61338] = {
        "Glintrok Skulker", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [146860] = {
        "Mistscorn Marauder", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [21220] = {
        "Coilfang Priestess", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [170234] = {
        "Oppressive Banner", -- [1]
        "Theater of Pain", -- [2]
      },
      [73104] = {
        "Unstable Spark", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [138498] = {
        "Twilight Drake", -- [1]
        "Crestfall (Islands 11)", -- [2]
      },
      [134915] = {
        "Trapdoor Ambusher", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [172282] = {
        "Web Wrap", -- [1]
        "Plaguefall", -- [2]
      },
      [136330] = {
        "Soul Thorns", -- [1]
        "Waycrest Manor", -- [2]
      },
      [162046] = {
        "Famished Tick", -- [1]
        "Sanguine Depths", -- [2]
      },
      [132868] = {
        "Congealed Azerite", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [174843] = {
        "Stoneborn Maitre D'", -- [1]
        "Castle Nathria", -- [2]
      },
      [174842] = {
        "Belligerent Waiter", -- [1]
        "Castle Nathria", -- [2]
      },
      [138499] = {
        "Twilight Dragonkin", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [139011] = {
        "Feral Protector", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [16193] = {
        "Skeletal Smith", -- [1]
        "Naxxramas", -- [2]
      },
      [168700] = {
        "Pestering Fiend", -- [1]
        "Castle Nathria", -- [2]
      },
      [101002] = {
        "Krosus", -- [1]
        "The Nighthold", -- [2]
      },
      [125828] = {
        "Víridian", -- [1]
        "Atal'Dazar", -- [2]
      },
      [23339] = {
        "Illidari Heartseeker", -- [1]
        "Black Temple", -- [2]
      },
      [130435] = {
        "Addled Thug", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [138500] = {
        "Twilight Scalesister", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [147202] = {
        "Animated Azershard", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [44982] = {
        "Neferset Darkcaster", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [130436] = {
        "Off-Duty Laborer", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [152833] = {
        "Azerite Giant", -- [1]
        "The Maelstrom - Heart of Azeroth", -- [2]
      },
      [146859] = {
        "Enslaved Rock Elemental", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [162047] = {
        "Insatiable Brute", -- [1]
        "Sanguine Depths", -- [2]
      },
      [137989] = {
        "Embalming Fluid", -- [1]
        "Kings' Rest", -- [2]
      },
      [138501] = {
        "Twilight Whelp", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [139013] = {
        "Frenzied Moonkin", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [139014] = {
        "Feral Moonseeker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [131847] = {
        "Waycrest Reveler", -- [1]
        "Waycrest Manor", -- [2]
      },
      [152834] = {
        "Azerite Skitterer", -- [1]
        "The Maelstrom - Heart of Azeroth", -- [2]
      },
      [5053] = {
        "Deviate Crocolisk", -- [1]
        "Wailing Caverns", -- [2]
      },
      [76945] = {
        "Ironcrusher", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [61131] = {
        "Mogu'shan Secret-Keeper", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [114312] = {
        "Moroes", -- [1]
        "Return to Karazhan", -- [2]
      },
      [45007] = {
        "Enslaved Bandit", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [152325] = {
        "Rebecca Laughlin", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [24683] = {
        "Sunblade Mage Guard", -- [1]
        "Magister's Terrace", -- [2]
      },
      [152835] = {
        "Crystalized Azerite", -- [1]
        "The Maelstrom - Heart of Azeroth", -- [2]
      },
      [157442] = {
        "Gaze of Madness", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [133384] = {
        "Merektha", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [150276] = {
        "Heavy Scrapbot", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [20908] = {
        "Akkiris Lightning-Waker", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [139015] = {
        "Feral Moonkin", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [151812] = {
        "Detect-o-Bot", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [152324] = {
        "Aldwin Laughlin", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [152836] = {
        "Azerite Borer", -- [1]
        "The Maelstrom - Heart of Azeroth", -- [2]
      },
      [21228] = {
        "Tidewalker Hydromancer", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [76946] = {
        "Faultline", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [130437] = {
        "Mine Rat", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [157608] = {
        "Faceless Willbreaker", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [69524] = {
        "Zeb'tula Alchemist", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [155908] = {
        "Deathspeaker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [131850] = {
        "Maddened Survivalist", -- [1]
        "Waycrest Manor", -- [2]
      },
      [37713] = {
        "Deathwhisper Torturer", -- [1]
        "Pit of Saron", -- [2]
      },
      [174336] = {
        "Kennel Overseer", -- [1]
        "Castle Nathria", -- [2]
      },
      [162051] = {
        "Frenzied Ghoul", -- [1]
        "Sanguine Depths", -- [2]
      },
      [139692] = {
        "Brineshell Elder", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [123480] = {
        "Antoran Champion", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [139017] = {
        "Wildmane", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [151814] = {
        "Deadsoul Shade", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [171772] = {
        "Mistveil Defender", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [52558] = {
        "Lord Rhyolith", -- [1]
        "Firelands", -- [2]
      },
      [163520] = {
        "Forsworn Squad-Leader", -- [1]
        "Spires of Ascension", -- [2]
      },
      [157441] = {
        "Void Wraith", -- [1]
        "Blackwing Descent Scenario", -- [2]
      },
      [69013] = {
        "Diffused Lightning", -- [1]
        "Throne of Thunder", -- [2]
      },
      [140038] = {
        "Abyssal Eel", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [126848] = {
        "Captain Eudora", -- [1]
        "Freehold", -- [2]
      },
      [127111] = {
        "Irontide Oarsman", -- [1]
        "Freehold", -- [2]
      },
      [22956] = {
        "Sister of Pain", -- [1]
        "Black Temple", -- [2]
      },
      [139691] = {
        "Brineshell Squallshaper", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [127879] = {
        "Shieldbearer of Zul", -- [1]
        "Atal'Dazar", -- [2]
      },
      [174338] = {
        "Stinky Feedhauler", -- [1]
        "Castle Nathria", -- [2]
      },
      [120201] = {
        "Spectral Guardian", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [31146] = {
        "Raider's Training Dummy", -- [1]
        "The Underrot", -- [2]
      },
      [112603] = {
        "Terrace Grove-Tender", -- [1]
        "The Nighthold", -- [2]
      },
      [37970] = {
        "Prince Valanar", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [132877] = {
        "Dankscale", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [134060] = {
        "Lord Stormsong", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [157447] = {
        "Fanatical Cultist", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [137484] = {
        "King A'akul", -- [1]
        "Kings' Rest", -- [2]
      },
      [146186] = {
        "Firesting Warrior", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [138507] = {
        "Warlord Ultriss", -- [1]
        "Crestfall (Islands 11)", -- [2]
      },
      [62795] = {
        "Sik'thik Warden", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [151817] = {
        "Deadsoul Devil", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [151630] = {
        "Void Ichor", -- [1]
        "Crucible of Storms", -- [2]
      },
      [149635] = {
        "Blooming Protector", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [139444] = {
        "Necrolord Zian", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [137485] = {
        "Bloodsworn Agent", -- [1]
        "Kings' Rest", -- [2]
      },
      [146187] = {
        "Firesting Dominator", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [114316] = {
        "Baroness Dorothea Millstipe", -- [1]
        "Return to Karazhan", -- [2]
      },
      [139021] = {
        "Bloodtracker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [16151] = {
        "Midnight", -- [1]
        "Karazhan", -- [2]
      },
      [113036] = {
        "Fel Lord Razzar", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [16215] = {
        "Unholy Staff", -- [1]
        "Naxxramas", -- [2]
      },
      [157449] = {
        "Sinister Soulcarver", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [162056] = {
        "Rockbound Sprite", -- [1]
        "Sanguine Depths", -- [2]
      },
      [146188] = {
        "Firesting Dominator", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [138510] = {
        "Twilight Doomcaller", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [61389] = {
        "Kargesh Highguard", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [137487] = {
        "Skeletal Hunting Raptor", -- [1]
        "Kings' Rest", -- [2]
      },
      [24684] = {
        "Sunblade Blood Knight", -- [1]
        "Magister's Terrace", -- [2]
      },
      [73188] = {
        "Captive Cave Bat", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [157450] = {
        "Spellbound Ritualist", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [162057] = {
        "Chamber Sentinel", -- [1]
        "Sanguine Depths", -- [2]
      },
      [151816] = {
        "Deadsoul Scavenger", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [128649] = {
        "Sergeant Bainbridge", -- [1]
        "Siege of Boralus", -- [2]
      },
      [164550] = {
        "Slithering Ooze", -- [1]
        "Plaguefall", -- [2]
      },
      [34004] = {
        "Life Spark", -- [1]
        "Ulduar", -- [2]
      },
      [113037] = {
        "Fel Lord Darakk", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [152486] = {
        "Underhold Elite Guard", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [157451] = {
        "Iron-Willed Enforcer", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [162058] = {
        "Ventunax", -- [1]
        "Spires of Ascension", -- [2]
      },
      [131858] = {
        "Thornguard", -- [1]
        "Waycrest Manor", -- [2]
      },
      [134417] = {
        "Deepsea Ritualist", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [168713] = {
        "Dread Caller Skulfir", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [139536] = {
        "Zara'thik Drone", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [59598] = {
        "Lesser Sha", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [140560] = {
        "Blazeseeker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [29931] = {
        "Drakkari Rhino", -- [1]
        "Gundrak", -- [2]
      },
      [162059] = {
        "Kin-Tara", -- [1]
        "Spires of Ascension", -- [2]
      },
      [139343] = {
        "Icetusk Drudge", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [134418] = {
        "Drowned Depthbringer", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [87520] = {
        "Animated Slag", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [104592] = {
        "Nightmare Tentacle", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [113038] = {
        "Fel Lord Kurrz", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [144948] = {
        "Leatherwing Hunter", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [56912] = {
        "Krik'thik Engulfer", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [162060] = {
        "Oryphrion", -- [1]
        "Spires of Ascension", -- [2]
      },
      [69017] = {
        "Primordius", -- [1]
        "Throne of Thunder", -- [2]
      },
      [114318] = {
        "Baron Rafe Dreuger", -- [1]
        "Return to Karazhan", -- [2]
      },
      [167691] = {
        "Stasis Trap", -- [1]
        "Castle Nathria", -- [2]
      },
      [36948] = {
        "Muradin Bronzebeard", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [144807] = {
        "Ravenous Stalker", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [123532] = {
        "Dark Keeper", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [33237] = {
        "Ulduar Colossus", -- [1]
        "Ulduar", -- [2]
      },
      [162061] = {
        "Devos", -- [1]
        "Spires of Ascension", -- [2]
      },
      [158478] = {
        "Corruption Tumor", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [128651] = {
        "Hadal Darkfathom", -- [1]
        "Siege of Boralus", -- [2]
      },
      [58319] = {
        "Lesser Sha", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [139539] = {
        "Tavok, Hammer of the Empress", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [92564] = {
        "Mo'arg Painbringer", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [34133] = {
        "Champion of Hodir", -- [1]
        "Ulduar", -- [2]
      },
      [132885] = {
        "Air Elemental", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [58959] = {
        "Pip'tok", -- [1]
        "Crucible of Storms", -- [2]
      },
      [29822] = {
        "Drakkari Fire Weaver", -- [1]
        "Gundrak", -- [2]
      },
      [163086] = {
        "Rancid Gasbag", -- [1]
        "Theater of Pain", -- [2]
      },
      [147218] = {
        "Spirit of Gold", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [155920] = {
        "Azsh'ari Galeblade", -- [1]
        "The Eternal Palace", -- [2]
      },
      [168717] = {
        "Forsworn Justicar", -- [1]
        "Spires of Ascension", -- [2]
      },
      [123533] = {
        "Tarneth", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [52305] = {
        "Toxic Husk", -- [1]
        "Zul'Gurub", -- [2]
      },
      [131863] = {
        "Raal the Gluttonous", -- [1]
        "Waycrest Manor", -- [2]
      },
      [29630] = {
        "Fanged Pit Viper", -- [1]
        "Gundrak", -- [2]
      },
      [128652] = {
        "Viq'Goth", -- [1]
        "Siege of Boralus", -- [2]
      },
      [153874] = {
        "Mawsworn Sentry", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [3527] = {
        "Healing Stream Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [168718] = {
        "Forsworn Warden", -- [1]
        "Spires of Ascension", -- [2]
      },
      [136470] = {
        "Refreshment Vendor", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [131864] = {
        "Gorak Tul", -- [1]
        "Waycrest Manor", -- [2]
      },
      [126093] = {
        "Slitherblade Saurok", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [14264] = {
        "Red Drakonid", -- [1]
        "Blackwing Lair", -- [2]
      },
      [114320] = {
        "Lord Robin Daris", -- [1]
        "Return to Karazhan", -- [2]
      },
      [24557] = {
        "Kagani Nightstrike", -- [1]
        "Magister's Terrace", -- [2]
      },
      [120463] = {
        "Undersea Custodian", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [24685] = {
        "Sunblade Magister", -- [1]
        "Magister's Terrace", -- [2]
      },
      [33110] = {
        "Dark Rune Acolyte", -- [1]
        "Ulduar", -- [2]
      },
      [14456] = {
        "Blackwing Guardsman", -- [1]
        "Blackwing Lair", -- [2]
      },
      [113041] = {
        "Infected Diemetradon", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [133912] = {
        "Bloodsworn Defiler", -- [1]
        "The Underrot", -- [2]
      },
      [20910] = {
        "Twilight Drakonaar", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [120719] = {
        "Lunar Priestess", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [37973] = {
        "Prince Taldaram", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [17007] = {
        "Lady Keira Berrybuck", -- [1]
        "Karazhan", -- [2]
      },
      [165137] = {
        "Zolramus Gatekeeper", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [136984] = {
        "Reban", -- [1]
        "Kings' Rest", -- [2]
      },
      [126094] = {
        "Slitherblade Wavecaller", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [150293] = {
        "Mechagon Prowler", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [114321] = {
        "Lord Crispin Ference", -- [1]
        "Return to Karazhan", -- [2]
      },
      [113113] = {
        "Essence of Nightmare", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [106643] = {
        "Elisande", -- [1]
        "The Nighthold", -- [2]
      },
      [135961] = {
        "Deepstone Crusher", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [165138] = {
        "Blight Bag", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [173840] = {
        "Plaguebound Devoted", -- [1]
        "Plaguefall", -- [2]
      },
      [21806] = {
        "Greyheart Spellbinder", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [87448] = {
        "Ironworker", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [153878] = {
        "Mawsworn Archer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [120720] = {
        "Lunar Guard", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [52306] = {
        "Tangled Vine", -- [1]
        "Zul'Gurub", -- [2]
      },
      [52434] = {
        "Gurubashi Villager", -- [1]
        "Zul'Gurub", -- [2]
      },
      [156949] = {
        "Armsmaster Terenson", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [157461] = {
        "Mycelial Cyst", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [126095] = {
        "Vyliss", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [150295] = {
        "Tank Buster MK1", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [132892] = {
        "Giddyleaf", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [134939] = {
        "Bristlethorn Maneater", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [127119] = {
        "Freehold Deckhand", -- [1]
        "Freehold", -- [2]
      },
      [146853] = {
        "Kefolkis the Unburied", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [78491] = {
        "Brackenspore", -- [1]
        "Highmaul", -- [2]
      },
      [70557] = {
        "Zandalari Prophet", -- [1]
        "Throne of Thunder", -- [2]
      },
      [153879] = {
        "Deadsoul Shadow", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [20864] = {
        "Protean Nightmare", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [101637] = {
        "Valarjar Aspirant", -- [1]
        "Halls of Valor", -- [2]
      },
      [134940] = {
        "Bristlethorn Piercer", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [28926] = {
        "Spark of Ionar", -- [1]
        "Halls of Lightning", -- [2]
      },
      [140059] = {
        "Grizzlefur Mauler", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [34135] = {
        "Winter Rumbler", -- [1]
        "Ulduar", -- [2]
      },
      [34234] = {
        "Runeforged Sentry", -- [1]
        "Ulduar", -- [2]
      },
      [144293] = {
        "Waste Processing Unit", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [150297] = {
        "Mechagon Renormalizer", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [134423] = {
        "Abyss Dweller", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [134941] = {
        "Bristlethorn Spider", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [118930] = {
        "Ixallon the Soulbreaker", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [140060] = {
        "Grizzlefur Bear", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [159510] = {
        "Eye of the Depths", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [102293] = {
        "Dread Admiral Eliza", -- [1]
        "Azsuna", -- [2]
      },
      [16024] = {
        "Embalming Slime", -- [1]
        "Naxxramas", -- [2]
      },
      [168110] = {
        "Empowered Imperial Duelist", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [135962] = {
        "Crag Rager", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [37972] = {
        "Prince Keleseth", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [56658] = {
        "Corrupt Droplet", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [52435] = {
        "Gurubashi Villager", -- [1]
        "Zul'Gurub", -- [2]
      },
      [16216] = {
        "Unholy Swords", -- [1]
        "Naxxramas", -- [2]
      },
      [130192] = {
        "Hulking Demolisher", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [153882] = {
        "Deadsoul Spirit", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [16803] = {
        "Death Knight Understudy", -- [1]
        "Naxxramas", -- [2]
      },
      [147225] = {
        "Azerite Extractor", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [24558] = {
        "Ellrys Duskhallow", -- [1]
        "Magister's Terrace", -- [2]
      },
      [69791] = {
        "Kokayy", -- [1]
        "Crucible of Storms", -- [2]
      },
      [24686] = {
        "Sunblade Warlock", -- [1]
        "Magister's Terrace", -- [2]
      },
      [21230] = {
        "Greyheart Nether-Mage", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [136991] = {
        "Blood-Hunter Dazal'ai", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [162719] = {
        "Void Ascendant", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [171799] = {
        "Depths Warden", -- [1]
        "Sanguine Depths", -- [2]
      },
      [20911] = {
        "Blackwing Drakonaar", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [159514] = {
        "Blood of Ny'alotha", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [151836] = {
        "Void Horror", -- [1]
        "Emerald Dream - HoA Scenario", -- [2]
      },
      [21231] = {
        "Greyheart Shield-Bearer", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [72351] = {
        "Dragonmaw Flagbearer", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [157467] = {
        "Void Ascendant", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [56511] = {
        "Corrupt Living Water", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [45269] = {
        "Servant of Siamat", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [172312] = {
        "Spinemaw Gorger", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [151325] = {
        "Alarm-o-Bot", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [69792] = {
        "Kokayy", -- [1]
        "Crucible of Storms", -- [2]
      },
      [148254] = {
        "Frost Shard", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [96664] = {
        "Valarjar Runecarver", -- [1]
        "Halls of Valor", -- [2]
      },
      [169753] = {
        "Famished Tick", -- [1]
        "Sanguine Depths", -- [2]
      },
      [153885] = {
        "Deadsoul Shambler", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [134786] = {
        "Spineclaw Sandsnapper", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [73185] = {
        "Enraged Mushan Beast", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [154016] = {
        "Prisonbreak Soulmender", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [52436] = {
        "Gurubashi Refugee", -- [1]
        "Zul'Gurub", -- [2]
      },
      [144160] = {
        "Chopper Redhook", -- [1]
        "Siege of Boralus", -- [2]
      },
      [72352] = {
        "Dragonmaw Ebon Stalker", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [144294] = {
        "Mechagon Tinkerer", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [56915] = {
        "Sun", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [156575] = {
        "Dark Inquisitor Xanesh", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [126099] = {
        "Duskcoat Den-Mother", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [120789] = {
        "Lieutenant Silvermight", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [32857] = {
        "Stormcaller Brundir", -- [1]
        "Ulduar", -- [2]
      },
      [135971] = {
        "Faithless Conscript", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [136483] = {
        "Ashvane Deckhand", -- [1]
        "Siege of Boralus", -- [2]
      },
      [145185] = {
        "Gnomercy 4.U.", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [71393] = {
        "Mogu Shadow Ritualist", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [138019] = {
        "Kul Tiran Vanguard", -- [1]
        "Siege of Boralus", -- [2]
      },
      [22959] = {
        "Spellbound Attendant", -- [1]
        "Black Temple", -- [2]
      },
      [72353] = {
        "Dragonmaw Flameslinger", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [147745] = {
        "The Indomitable", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [140067] = {
        "Rustpelt Alpha", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [173339] = {
        "Plaguebelcher", -- [1]
        "Plaguefall", -- [2]
      },
      [22847] = {
        "Ashtongue Primalist", -- [1]
        "Black Temple", -- [2]
      },
      [140564] = {
        "Brimstone Lavamaw", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [122773] = {
        "Decimator", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [90525] = {
        "Eredar Chaos Guard", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [102298] = {
        "Dread Squallshaper", -- [1]
        "Azsuna", -- [2]
      },
      [127124] = {
        "Freehold Barhand", -- [1]
        "Freehold", -- [2]
      },
      [140068] = {
        "Rustpelt Snarler", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [114526] = {
        "Ghostly Understudy", -- [1]
        "Return to Karazhan", -- [2]
      },
      [153377] = {
        "Goop", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [52437] = {
        "Gurubashi Refugee", -- [1]
        "Zul'Gurub", -- [2]
      },
      [113048] = {
        "Corrupted Deer", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [150818] = {
        "Disturbed Blood Globule", -- [1]
        "Uldir Scenario", -- [2]
      },
      [171805] = {
        "Research Scribe", -- [1]
        "Sanguine Depths", -- [2]
      },
      [73184] = {
        "Starved Yeti", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [140069] = {
        "Rustpelt Wolf", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [72354] = {
        "Dragonmaw Bonecrusher", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [166299] = {
        "Mistveil Tender", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [113043] = {
        "Abyss Watcher", -- [1]
        "The Nighthold", -- [2]
      },
      [61139] = {
        "Shan-xi Watershaper", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [65362] = {
        "Minion of Doubt", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [114584] = {
        "Phantom Crew", -- [1]
        "Return to Karazhan", -- [2]
      },
      [135892] = {
        "Unleashed Inferno", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [135975] = {
        "Off-Duty Laborer", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [132904] = {
        "Sandscalp Villager", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [24815] = {
        "Sunblade Imp", -- [1]
        "Magister's Terrace", -- [2]
      },
      [137511] = {
        "Bilge Rat Cutthroat", -- [1]
        "Siege of Boralus", -- [2]
      },
      [151333] = {
        "Sentinel Shard", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [20912] = {
        "Harbinger Skyriss", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [33754] = {
        "Dark Rune Thunderer", -- [1]
        "Ulduar", -- [2]
      },
      [69540] = {
        "Zeb'tula Raptor", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [17521] = {
        "The Big Bad Wolf", -- [1]
        "Karazhan", -- [2]
      },
      [125590] = {
        "Antoran Felguard", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [157475] = {
        "Synthesis Growth", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [58964] = {
        "Hrogrik", -- [1]
        "Crucible of Storms", -- [2]
      },
      [122263] = {
        "Spineshell Snapjaw", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [162715] = {
        "Fanatical Cultist", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [163618] = {
        "Zolramus Necromancer", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [29742] = {
        "Snake Wrap", -- [1]
        "Gundrak", -- [2]
      },
      [148262] = {
        "Tidewater Elemental", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [70308] = {
        "Soul-Fed Construct", -- [1]
        "Throne of Thunder", -- [2]
      },
      [161571] = {
        "Anubisath Sentinel", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [21232] = {
        "Greyheart Skulker", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [127381] = {
        "Silt Crab", -- [1]
        "Tol Dagor", -- [2]
      },
      [173464] = {
        "Deplina", -- [1]
        "Castle Nathria", -- [2]
      },
      [163619] = {
        "Zolramus Bonecarver", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [144680] = {
        "Frida Ironbellows", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [52438] = {
        "Mortaxx", -- [1]
        "Zul'Gurub", -- [2]
      },
      [72356] = {
        "Master Cannoneer Dagryn", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [153382] = {
        "Maw of the Maw", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [159416] = {
        "Spiked Tentacle", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [122264] = {
        "Elder Spineshell", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [53206] = {
        "Hell Hound", -- [1]
        "Firelands", -- [2]
      },
      [163620] = {
        "Rotspew", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [150292] = {
        "Mechagon Cavalry", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [123288] = {
        "Southsea Cannoneer", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [72929] = {
        "Sra'thik Amber-Master", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [120473] = {
        "Tidescale Combatant", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [33755] = {
        "Dark Rune Ravager", -- [1]
        "Ulduar", -- [2]
      },
      [148893] = {
        "Tormented Soul", -- [1]
        "Siege of Boralus", -- [2]
      },
      [22960] = {
        "Dragonmaw Wyrmcaller", -- [1]
        "Black Temple", -- [2]
      },
      [163621] = {
        "Goregrind", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [144286] = {
        "Asset Manager", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [143774] = {
        "Revitalized Voodoo Totem", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [72357] = {
        "Lieutenant Krugruk", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [34267] = {
        "Parts Recovery Technician", -- [1]
        "Ulduar", -- [2]
      },
      [137516] = {
        "Ashvane Invader", -- [1]
        "Siege of Boralus", -- [2]
      },
      [81315] = {
        "Iron Crack-Shot", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [140076] = {
        "Knucklebump Silverback", -- [1]
        "Crestfall (Islands 11)", -- [2]
      },
      [163622] = {
        "Goregrind Bits", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [121498] = {
        "Twilight Soul", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [111004] = {
        "Gelatinized Decay", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [87515] = {
        "Iron Flame Binder", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [154011] = {
        "Armed Prisoner", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [16025] = {
        "Stitched Giant", -- [1]
        "Naxxramas", -- [2]
      },
      [122778] = {
        "Annihilator", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [146731] = {
        "Zombie Dust Totem", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [163623] = {
        "Rotspew Leftovers", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [52311] = {
        "Venomguard Destroyer", -- [1]
        "Zul'Gurub", -- [2]
      },
      [113052] = {
        "Dreadguard", -- [1]
        "The Nighthold", -- [2]
      },
      [72358] = {
        "Kor'kron Cannon", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [132911] = {
        "Pebblestone Trogg", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [105630] = {
        "Eye of Gul'dan", -- [1]
        "The Nighthold", -- [2]
      },
      [133935] = {
        "Animated Guardian", -- [1]
        "Kings' Rest", -- [2]
      },
      [77477] = {
        "Marak the Blooded", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [24560] = {
        "Priestess Delrissa", -- [1]
        "Magister's Terrace", -- [2]
      },
      [152987] = {
        "Faceless Willbreaker", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [140078] = {
        "Knucklebump Gorilla", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [152875] = {
        "Massive Crusher", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [137517] = {
        "Ashvane Destroyer", -- [1]
        "Siege of Boralus", -- [2]
      },
      [113053] = {
        "Mother Sepestra", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [37595] = {
        "Darkfallen Blood Knight", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [58198] = {
        "Shado-Pan Disciple", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [128921] = {
        "Duskcoat Tiger", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [135472] = {
        "Zanazal the Wise", -- [1]
        "Kings' Rest", -- [2]
      },
      [152364] = {
        "Radiance of Azshara", -- [1]
        "The Eternal Palace", -- [2]
      },
      [132913] = {
        "Island Ettin", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [157483] = {
        "Ysedra the Darkener", -- [1]
        "Halls of Origination", -- [2]
      },
      [122578] = {
        "Kin'garoth", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [123290] = {
        "Sparkleshell Clacker", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [113307] = {
        "Chronowraith", -- [1]
        "The Nighthold", -- [2]
      },
      [135470] = {
        "Aka'ali the Conqueror", -- [1]
        "Kings' Rest", -- [2]
      },
      [12129] = {
        "Onyxian Warder", -- [1]
        "Onyxia's Lair", -- [2]
      },
      [123291] = {
        "Sparkleshell Crab", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [122477] = {
        "F'harg", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [52339] = {
        "Lesser Priest of Bethekk", -- [1]
        "Zul'Gurub", -- [2]
      },
      [137521] = {
        "Irontide Powdershot", -- [1]
        "Siege of Boralus", -- [2]
      },
      [112596] = {
        "Duskwatch Warden", -- [1]
        "The Nighthold", -- [2]
      },
      [24688] = {
        "Wretched Skulker", -- [1]
        "Magister's Terrace", -- [2]
      },
      [130400] = {
        "Irontide Crusher", -- [1]
        "Freehold", -- [2]
      },
      [135474] = {
        "Thistle Acolyte", -- [1]
        "Waycrest Manor", -- [2]
      },
      [30319] = {
        "Twilight Darkcaster", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [138429] = {
        "Spitefin Tidebinder", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [23397] = {
        "Illidari Blood Lord", -- [1]
        "Black Temple", -- [2]
      },
      [61398] = {
        "Xin the Weaponmaster", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [81318] = {
        "Iron Gunnery Sergeant", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [175401] = {
        "Warden of Souls", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [40923] = {
        "Unstable Corruption", -- [1]
        "Throne of the Tides", -- [2]
      },
      [135475] = {
        "Kula the Butcher", -- [1]
        "Kings' Rest", -- [2]
      },
      [168747] = {
        "Venomfang", -- [1]
        "Plaguefall", -- [2]
      },
      [61910] = {
        "Resin Flake", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [157486] = {
        "Horrific Hemorrhage", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [3977] = {
        "High Inquisitor Whitemane", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [112678] = {
        "Shal'dorei Naturalist", -- [1]
        "The Nighthold", -- [2]
      },
      [120477] = {
        "Deep Stalker", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [124828] = {
        "Argus the Unmaker", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [155951] = {
        "Ruffer", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [56637] = {
        "Ook-Ook", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [144690] = {
        "Mestrah", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [34269] = {
        "XR-949 Salvagebot", -- [1]
        "Ulduar", -- [2]
      },
      [156239] = {
        "Dark Ascended Corrus", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [102300] = {
        "Raging Current", -- [1]
        "Azsuna", -- [2]
      },
      [59223] = {
        "Brother Korloff", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [168113] = {
        "General Grashaal", -- [1]
        "Castle Nathria", -- [2]
      },
      [155952] = {
        "Suffer", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [135989] = {
        "Shieldbearer of Zul", -- [1]
        "Atal'Dazar", -- [2]
      },
      [22957] = {
        "Priestess of Dementia", -- [1]
        "Black Temple", -- [2]
      },
      [132918] = {
        "Spitefin Raider", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [133430] = {
        "Venture Co. Mastermind", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [132797] = {
        "Pinegraze Calf", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [129231] = {
        "Rixxa Fluxflame", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [60375] = {
        "Zandalari Skullcharger", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [155953] = {
        "C'Thuffer", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [140085] = {
        "Pinegraze Greatstag", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [132919] = {
        "Spitefin Behemoth", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [56792] = {
        "Figment of Doubt", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [33236] = {
        "Steelforged Defender", -- [1]
        "Ulduar", -- [2]
      },
      [118175] = {
        "Storm Elemental", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [24689] = {
        "Wretched Bruiser", -- [1]
        "Magister's Terrace", -- [2]
      },
      [36829] = {
        "Deathspeaker High Priest", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [22846] = {
        "Ashtongue Stormcaller", -- [1]
        "Black Temple", -- [2]
      },
      [140086] = {
        "Pinegraze Courser", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [144693] = {
        "Manceroy Flamefist", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [33271] = {
        "General Vezax", -- [1]
        "Ulduar", -- [2]
      },
      [133432] = {
        "Venture Co. Alchemist", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [133944] = {
        "Aspix", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [163121] = {
        "Stitched Vanguard", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [164563] = {
        "Vicious Gargon", -- [1]
        "Halls of Atonement", -- [2]
      },
      [17447] = {
        "grizette", -- [1]
        "Temple of Kotmogu", -- [2]
      },
      [96677] = {
        "Steeljaw Grizzly", -- [1]
        "Halls of Valor", -- [2]
      },
      [73948] = {
        "Commander Ik'tal", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [122973] = {
        "Dazar'ai Confessor", -- [1]
        "Atal'Dazar", -- [2]
      },
      [21298] = {
        "Coilfang Serpentguard", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [138650] = {
        "Tide-Lost Champion", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [163122] = {
        "Brittlebone Warrior", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [29680] = {
        "Slad'ran Viper", -- [1]
        "Gundrak", -- [2]
      },
      [126767] = {
        "Clubfist Beastlord", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [70060] = {
        "Shadowed Voodoo Spirit", -- [1]
        "Throne of Thunder", -- [2]
      },
      [156980] = {
        "Essence of Void", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [43612] = {
        "High Prophet Barim", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [162099] = {
        "General Kaal", -- [1]
        "Sanguine Depths", -- [2]
      },
      [167967] = {
        "Sentient Oil", -- [1]
        "De Other Side", -- [2]
      },
      [112290] = {
        "Horrid Eagle", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [72412] = {
        "Kor'kron Grunt", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [52441] = {
        "Curious Jungle Monkey", -- [1]
        "Zul'Gurub", -- [2]
      },
      [33118] = {
        "Ignis the Furnace Master", -- [1]
        "Ulduar", -- [2]
      },
      [173361] = {
        "Slimy Morsel", -- [1]
        "Plaguefall", -- [2]
      },
      [132923] = {
        "Coldlight Murloc", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [162100] = {
        "Kryxis the Voracious", -- [1]
        "Sanguine Depths", -- [2]
      },
      [44752] = {
        "Faceless Sapper", -- [1]
        "Throne of the Tides", -- [2]
      },
      [40925] = {
        "Tainted Sentry", -- [1]
        "Throne of the Tides", -- [2]
      },
      [167731] = {
        "Separation Assistant", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [138654] = {
        "Vestar of the Tattered Sail", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [96934] = {
        "Valarjar Trapper", -- [1]
        "Halls of Valor", -- [2]
      },
      [168578] = {
        "Fungalmancer", -- [1]
        "Plaguefall", -- [2]
      },
      [165430] = {
        "Malignant Spawn", -- [1]
        "Plaguefall", -- [2]
      },
      [133436] = {
        "Venture Co. Skyscorcher", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [22898] = {
        "Supremus", -- [1]
        "Black Temple", -- [2]
      },
      [22962] = {
        "Priestess of Delight", -- [1]
        "Black Temple", -- [2]
      },
      [31216] = {
        "Sparrucard-Archimonde", -- [1]
        "Temple of Kotmogu", -- [2]
      },
      [112803] = {
        "Astrologer Jarin", -- [1]
        "The Nighthold", -- [2]
      },
      [113059] = {
        "Fel Lord Garzan", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [72365] = {
        "Dragonmaw Cannoneer", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [34271] = {
        "XD-175 Compactobot", -- [1]
        "Ulduar", -- [2]
      },
      [162102] = {
        "Grand Proctor Beryllia", -- [1]
        "Sanguine Depths", -- [2]
      },
      [146185] = {
        "Firesting Drone", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [163126] = {
        "Brittlebone Mage", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [151353] = {
        "Mawrat", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [139672] = {
        "Gibberfin", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [34014] = {
        "Sanctum Sentry", -- [1]
        "Ulduar", -- [2]
      },
      [157452] = {
        "Nightmare Antigen", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [153401] = {
        "K'thir Dominator", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [162103] = {
        "Executor Tarvold", -- [1]
        "Sanguine Depths", -- [2]
      },
      [134041] = {
        "Infected Peasant", -- [1]
        "Waycrest Manor", -- [2]
      },
      [52059] = {
        "High Priestess Kilnara", -- [1]
        "Zul'Gurub", -- [2]
      },
      [131383] = {
        "Sporecaller Zancha", -- [1]
        "The Underrot", -- [2]
      },
      [168246] = {
        "Reanimated Crossbowman", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [151331] = {
        "Cellblock Sentinel", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [52571] = {
        "Majordomo Staghelm", -- [1]
        "Firelands", -- [2]
      },
      [3673] = {
        "Lord Serpentis", -- [1]
        "Wailing Caverns", -- [2]
      },
      [84859] = {
        "Iron Cleaver", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [163128] = {
        "Zolramus Sorcerer", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [138558] = {
        "Faceless One", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [137486] = {
        "Queen Patlaa", -- [1]
        "Kings' Rest", -- [2]
      },
      [24690] = {
        "Wretched Husk", -- [1]
        "Magister's Terrace", -- [2]
      },
      [135999] = {
        "Heliodor", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [126092] = {
        "Slitherblade Gladiator", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [61243] = {
        "Gekkan", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [16470] = {
        "Ghostly Philanthropist", -- [1]
        "Karazhan", -- [2]
      },
      [122783] = {
        "Blazing Imp", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [174802] = {
        "Venomous Sniper", -- [1]
        "Plaguefall", -- [2]
      },
      [139670] = {
        "Morgok", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [36853] = {
        "Sindragosa", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [140095] = {
        "Mudsnout Gorer", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [72367] = {
        "Dragonmaw Tidal Shaman", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [105383] = {
        "Corruptor Tentacle", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [21299] = {
        "Coilfang Fathom-Witch", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [36725] = {
        "Nerub'ar Broodkeeper", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [54544] = {
        "Echo of Tyrande", -- [1]
        "End Time", -- [2]
      },
      [138556] = {
        "Tainted Ooze", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [16154] = {
        "Risen Squire", -- [1]
        "Naxxramas", -- [2]
      },
      [140096] = {
        "Mudsnout Boar", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [16020] = {
        "Mad Scientist", -- [1]
        "Naxxramas", -- [2]
      },
      [145305] = {
        "Feral Hulk", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [43614] = {
        "Lockmaw", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [81270] = {
        "Gorian Guardsman", -- [1]
        "Highmaul", -- [2]
      },
      [97068] = {
        "Storm Drake", -- [1]
        "Halls of Valor", -- [2]
      },
      [138645] = {
        "Kvaldir Soulflayer", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [36830] = {
        "Wrathbone Laborer", -- [1]
        "Pit of Saron", -- [2]
      },
      [140094] = {
        "Mudsnout Thornback", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [140609] = {
        "Ravenous Mako", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [151815] = {
        "Deadsoul Echo", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [120482] = {
        "Tidescale Seacaller", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [52956] = {
        "Zandalari Juggernaut", -- [1]
        "Zul'Gurub", -- [2]
      },
      [122532] = {
        "Ember of Taeshalach", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [32865] = {
        "Thorim", -- [1]
        "Ulduar", -- [2]
      },
      [73904] = {
        "Kor'kron Iron Sentinel", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [172858] = {
        "Stone Legion Goliath", -- [1]
        "Castle Nathria", -- [2]
      },
      [33121] = {
        "Iron Construct", -- [1]
        "Ulduar", -- [2]
      },
      [111975] = {
        "Shadowfeather", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [146753] = {
        "Kul Tiran Marine", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [112039] = {
        "Screeching Spiderling", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [124580] = {
        "Grotto Terrapin", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [138644] = {
        "Kvaldir Cursewalker", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [151872] = {
        "Grip of Horror", -- [1]
        "Emerald Dream - HoA Scenario", -- [2]
      },
      [140099] = {
        "Thundersnort the Loud", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [129699] = {
        "Ludwig Von Tortollan", -- [1]
        "Freehold", -- [2]
      },
      [34273] = {
        "XB-488 Disposalbot", -- [1]
        "Ulduar", -- [2]
      },
      [173609] = {
        "Nathrian Conservator", -- [1]
        "Castle Nathria", -- [2]
      },
      [155688] = {
        "Azsh'ari Frostbinder", -- [1]
        "The Eternal Palace", -- [2]
      },
      [145298] = {
        "Feral Hungerer", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [22884] = {
        "Leviathan", -- [1]
        "Black Temple", -- [2]
      },
      [113103] = {
        "Corrupted Swoop", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [136005] = {
        "Rowdy Reveler", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [131849] = {
        "Crazed Marksman", -- [1]
        "Waycrest Manor", -- [2]
      },
      [137029] = {
        "Ordnance Specialist", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [45122] = {
        "Oathsworn Captain", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [146833] = {
        "Necromancer Conjurer", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [124581] = {
        "Spineshell Snapper", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [146756] = {
        "Energized Storm", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [80048] = {
        "Vul'gor", -- [1]
        "Highmaul", -- [2]
      },
      [136006] = {
        "Rowdy Reveler", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [152898] = {
        "Deadsoul Chorus", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [5055] = {
        "Deviate Lasher", -- [1]
        "Wailing Caverns", -- [2]
      },
      [56924] = {
        "Inflamed Hozen Brawler", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [146244] = {
        "Stinging Fiend", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [44895] = {
        "Augh", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [78001] = {
        "Cloudburst Totem", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [36961] = {
        "Skybreaker Sergeant", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [111528] = {
        "Deathroot Ancient", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [37217] = {
        "Precious", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [165260] = {
        "Oozing Leftovers", -- [1]
        "Theater of Pain", -- [2]
      },
      [136083] = {
        "Forgotten Denizen", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [71859] = {
        "Earthbreaker Haromm", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [124582] = {
        "Chasm-Hunter", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [71603] = {
        "Sha Puddle", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [33890] = {
        "Brain of Yogg-Saron", -- [1]
        "Ulduar", -- [2]
      },
      [97197] = {
        "Valarjar Purifier", -- [1]
        "Halls of Valor", -- [2]
      },
      [113321] = {
        "Shambling Hungerer", -- [1]
        "The Nighthold", -- [2]
      },
      [38369] = {
        "Dark Nucleus", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [36724] = {
        "Servant of the Throne", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [140101] = {
        "Swampwallow", -- [1]
        "Crestfall (Islands 11)", -- [2]
      },
      [23400] = {
        "Illidari Archon", -- [1]
        "Black Temple", -- [2]
      },
      [16021] = {
        "Living Monstrosity", -- [1]
        "Naxxramas", -- [2]
      },
      [131402] = {
        "Underrot Tick", -- [1]
        "The Underrot", -- [2]
      },
      [140689] = {
        "Dreadfang Slitherer", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [29874] = {
        "Drakkari Inciter", -- [1]
        "Gundrak", -- [2]
      },
      [160061] = {
        "Crawling Corruption", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [162115] = {
        "Koda Steelclaw", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [124583] = {
        "Garnetback Worm", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [138569] = {
        "Harbinger Vor'zzyx", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [64947] = {
        "Mogu'shan Warden", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [146831] = {
        "Kul Tiran Stormbringer", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [56541] = {
        "Master Snowdrift", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [138254] = {
        "Irontide Powdershot", -- [1]
        "Siege of Boralus", -- [2]
      },
      [133963] = {
        "Test Subject", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [162116] = {
        "Lyanis Moonfall", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [52958] = {
        "Zandalari Hierophant", -- [1]
        "Zul'Gurub", -- [2]
      },
      [44896] = {
        "Pygmy Brute", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [22875] = {
        "Coilskar Sea-Caller", -- [1]
        "Black Temple", -- [2]
      },
      [32867] = {
        "Steelbreaker", -- [1]
        "Ulduar", -- [2]
      },
      [90544] = {
        "Krosus", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [112804] = {
        "Trained Shadescale", -- [1]
        "The Nighthold", -- [2]
      },
      [111054] = {
        "Nightorb", -- [1]
        "The Nighthold", -- [2]
      },
      [162117] = {
        "Tyrande Whisperwind", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [15547] = {
        "Spectral Charger", -- [1]
        "Karazhan", -- [2]
      },
      [22964] = {
        "Sister of Pleasure", -- [1]
        "Black Temple", -- [2]
      },
      [23028] = {
        "Bonechewer Taskmaster", -- [1]
        "Black Temple", -- [2]
      },
      [5775] = {
        "Verdan the Everliving", -- [1]
        "Wailing Caverns", -- [2]
      },
      [61387] = {
        "Quilen Guardian", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [140619] = {
        "Coastal Fathomjaw", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [151785] = {
        "Void-Twisted Wyrmkiller", -- [1]
        "Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
      },
      [140976] = {
        "Bore Worm", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [138471] = {
        "Obsidian Wyrmguard", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [162049] = {
        "Vestige of Doubt", -- [1]
        "Sanguine Depths", -- [2]
      },
      [152874] = {
        "Vez'okk the Lightless", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [151881] = {
        "Abyssal Commander Sivara", -- [1]
        "The Eternal Palace", -- [2]
      },
      [15931] = {
        "Grobbulus", -- [1]
        "Naxxramas", -- [2]
      },
      [152905] = {
        "Tower Sentinel", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [34164] = {
        "Mechagnome Battletank", -- [1]
        "Ulduar", -- [2]
      },
      [54511] = {
        "Time-Twisted Geist", -- [1]
        "End Time", -- [2]
      },
      [146251] = {
        "Sister Katherine", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [171333] = {
        "Atal'ai Devoted", -- [1]
        "De Other Side", -- [2]
      },
      [134990] = {
        "Charged Dust Devil", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [131407] = {
        "Venture Goon", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [155225] = {
        "Faeleaf Grovesinger", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [23403] = {
        "Illidari Assassin", -- [1]
        "Black Temple", -- [2]
      },
      [71383] = {
        "Kor'thik Warcaller", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [138061] = {
        "Venture Co. Longshoreman", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [53087] = {
        "Right Foot", -- [1]
        "Firelands", -- [2]
      },
      [150859] = {
        "Za'qul", -- [1]
        "The Eternal Palace", -- [2]
      },
      [134991] = {
        "Sandfury Stonefist", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [12416] = {
        "Blackwing Legionnaire", -- [1]
        "Blackwing Lair", -- [2]
      },
      [28859] = {
        "Malygos", -- [1]
        "The Eye of Eternity", -- [2]
      },
      [157002] = {
        "Imperial Enforcer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [54512] = {
        "Time-Twisted Sentinel", -- [1]
        "End Time", -- [2]
      },
      [37955] = {
        "Blood-Queen Lana'thel", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [146253] = {
        "Brother Joseph", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [14263] = {
        "Bronze Drakonid", -- [1]
        "Blackwing Lair", -- [2]
      },
      [58590] = {
        "Scarlet Zealot", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [121003] = {
        "Rez the Tombwatcher", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [152396] = {
        "Guardian of Azeroth", -- [1]
        "Deepwind Gorge", -- [2]
      },
      [157003] = {
        "Imperial Duelist", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [138576] = {
        "Faceless Tendril", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [21301] = {
        "Coilfang Shatterer", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [121004] = {
        "Razorjaw Myrmidon", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [146766] = {
        "Greater Serpent Totem", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [134993] = {
        "Mchimba the Embalmer", -- [1]
        "Kings' Rest", -- [2]
      },
      [72662] = {
        "Vanity", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [111022] = {
        "The Demon Within", -- [1]
        "The Nighthold", -- [2]
      },
      [131411] = {
        "Venomscale Monitor", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [119724] = {
        "Tidal Surger", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [56799] = {
        "Krik'thik Bombardier", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [116939] = {
        "Fallen Avatar", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [13020] = {
        "Vaelastrasz the Corrupt", -- [1]
        "Blackwing Lair", -- [2]
      },
      [134994] = {
        "Spectral Headhunter", -- [1]
        "Kings' Rest", -- [2]
      },
      [164171] = {
        "Honored Duelist", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [104880] = {
        "Thing That Should Not Be", -- [1]
        "The Nighthold", -- [2]
      },
      [152910] = {
        "Queen Azshara", -- [1]
        "The Eternal Palace", -- [2]
      },
      [97202] = {
        "Olmyr the Enlightened", -- [1]
        "Halls of Valor", -- [2]
      },
      [56927] = {
        "Hozen Party Animal", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [146256] = {
        "Laminaria", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [53088] = {
        "Temple Rat", -- [1]
        "Zul'Gurub", -- [2]
      },
      [152390] = {
        "Unruly Experiment", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [71382] = {
        "Burial Urn", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [53472] = {
        "Thyrinar", -- [1]
        "Nexus Legendary", -- [2]
      },
      [61242] = {
        "Glintrok Ironhide", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [138643] = {
        "Kvaldir Berserker", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [22965] = {
        "Enslaved Servant", -- [1]
        "Black Temple", -- [2]
      },
      [133972] = {
        "Heavy Cannon", -- [1]
        "Tol Dagor", -- [2]
      },
      [138579] = {
        "Giant Claw Tentacle", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [125612] = {
        "Felguard", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [71865] = {
        "Garrosh Hellscream", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [104881] = {
        "Spellblade Aluriel", -- [1]
        "The Nighthold", -- [2]
      },
      [165197] = {
        "Skeletal Monstrosity", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [105393] = {
        "Il'gynoth", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [16406] = {
        "Phantom Attendant", -- [1]
        "Karazhan", -- [2]
      },
      [72408] = {
        "Anti-Air Turret", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [146770] = {
        "Druid of the Claw", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [69943] = {
        "Spirit Beast", -- [1]
        "Deepwind Gorge", -- [2]
      },
      [146769] = {
        "Druid of the Claw", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [91569] = {
        "Volatile Bear", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [22950] = {
        "High Nethermancer Zerevor", -- [1]
        "Black Temple", -- [2]
      },
      [70586] = {
        "Eternal Guardian", -- [1]
        "Throne of Thunder", -- [2]
      },
      [29819] = {
        "Drakkari Lancer", -- [1]
        "Gundrak", -- [2]
      },
      [44898] = {
        "Pygmy Firebreather", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [171341] = {
        "Bladebeak Hatchling", -- [1]
        "De Other Side", -- [2]
      },
      [58605] = {
        "Scarlet Judicator", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [21229] = {
        "Greyheart Tidecaller", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [50159] = {
        "Джигурда", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [52577] = {
        "Left Foot", -- [1]
        "Firelands", -- [2]
      },
      [149331] = {
        "Luminous Azerite", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [133463] = {
        "Venture Co. War Machine", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [105906] = {
        "Eye of Il'gynoth", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [171342] = {
        "Juvenile Runestag", -- [1]
        "De Other Side", -- [2]
      },
      [126832] = {
        "Skycap'n Kragg", -- [1]
        "Freehold", -- [2]
      },
      [128455] = {
        "T'lonja", -- [1]
        "Atal'Dazar", -- [2]
      },
      [120009] = {
        "Naisha", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [140630] = {
        "Ornate Puffer", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [70587] = {
        "Shale Stalker", -- [1]
        "Throne of Thunder", -- [2]
      },
      [165764] = {
        "Rockbound Vanquisher", -- [1]
        "Castle Nathria", -- [2]
      },
      [3640] = {
        "Evolving Ectoplasm", -- [1]
        "Wailing Caverns", -- [2]
      },
      [171343] = {
        "Bladebeak Matriarch", -- [1]
        "De Other Side", -- [2]
      },
      [127106] = {
        "Irontide Officer", -- [1]
        "Freehold", -- [2]
      },
      [164177] = {
        "Royal Nightcloak", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [157439] = {
        "Fury of N'Zoth", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [140631] = {
        "South Sea Ray", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [3680] = {
        "Serpentbloom Snake", -- [1]
        "Wailing Caverns", -- [2]
      },
      [158035] = {
        "Magister Umbric", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [114634] = {
        "Undying Servant", -- [1]
        "Return to Karazhan", -- [2]
      },
      [134056] = {
        "Aqu'sirr", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [81362] = {
        "Frostwall Goren", -- [1]
        "FW Horde Garrison Level 2", -- [2]
      },
      [133379] = {
        "Adderis", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [173953] = {
        "Loyal Gargon", -- [1]
        "Castle Nathria", -- [2]
      },
      [140632] = {
        "Scaleback Snapper", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [144776] = {
        "Airyn Swiftfeet", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [113012] = {
        "Felsworn Chaos-Mage", -- [1]
        "The Nighthold", -- [2]
      },
      [135562] = {
        "Venomous Ophidian", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [139097] = {
        "Sandswept Marksman", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [135002] = {
        "Demonic Tyrant", -- [1]
        "Crucible of Storms", -- [2]
      },
      [52322] = {
        "Witch Doctor Qu'in", -- [1]
        "Zul'Gurub", -- [2]
      },
      [44260] = {
        "Venomfang Crocolisk", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [135052] = {
        "Blight Toad", -- [1]
        "Waycrest Manor", -- [2]
      },
      [96640] = {
        "Valarjar Marksman", -- [1]
        "Halls of Valor", -- [2]
      },
      [153942] = {
        "Annihilator Lak'hal", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [52962] = {
        "Zandalari Archon", -- [1]
        "Zul'Gurub", -- [2]
      },
      [61250] = {
        "Sorcerer Mogu", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [3840] = {
        "Druid of the Fang", -- [1]
        "Wailing Caverns", -- [2]
      },
      [69821] = {
        "Thunder Lord", -- [1]
        "Throne of Thunder", -- [2]
      },
      [157572] = {
        "Mawsworn Firecaller", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [137940] = {
        "Safety Shark", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [33255] = {
        "Titanium Stormlord", -- [1]
        "Ulduar", -- [2]
      },
      [170323] = {
        "General Grashaal", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [15548] = {
        "Spectral Stallion", -- [1]
        "Karazhan", -- [2]
      },
      [163157] = {
        "Amarth", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [23030] = {
        "Dragonmaw Sky Stalker", -- [1]
        "Black Temple", -- [2]
      },
      [140371] = {
        "Egg-Tender Ny'xik", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [162030] = {
        "Darkwhisper Ritualist", -- [1]
        "Blackwing Descent Scenario", -- [2]
      },
      [114633] = {
        "Spectral Valet", -- [1]
        "Return to Karazhan", -- [2]
      },
      [165905] = {
        "Son of Hakkar", -- [1]
        "De Other Side", -- [2]
      },
      [72893] = {
        "Orgrimmar Peon", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [165763] = {
        "Vile Occultist", -- [1]
        "Castle Nathria", -- [2]
      },
      [167994] = {
        "Ossified Conscript", -- [1]
        "Theater of Pain", -- [2]
      },
      [16060] = {
        "Gothik the Harvester", -- [1]
        "Naxxramas", -- [2]
      },
      [34919] = {
        "7th Legion Infantry", -- [1]
        "Isle of Conquest", -- [2]
      },
      [16156] = {
        "Dark Touched Warrior", -- [1]
        "Naxxramas", -- [2]
      },
      [157016] = {
        "Imperial Archivist", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [59873] = {
        "Corrupt Living Water", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [158040] = {
        "Unbound Deathwalker", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [162647] = {
        "Willing Sacrifice", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [164737] = {
        "Brood Ambusher", -- [1]
        "Plaguefall", -- [2]
      },
      [16124] = {
        "Unrelenting Trainee", -- [1]
        "Naxxramas", -- [2]
      },
      [52323] = {
        "Chosen of Hethiss", -- [1]
        "Zul'Gurub", -- [2]
      },
      [44261] = {
        "Sharptalon Eagle", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [53187] = {
        "Flamewaker Animator", -- [1]
        "Firelands", -- [2]
      },
      [15551] = {
        "Spectral Stable Hand", -- [1]
        "Karazhan", -- [2]
      },
      [158041] = {
        "N'Zoth the Corruptor", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [170838] = {
        "Unyielding Contender", -- [1]
        "Theater of Pain", -- [2]
      },
      [162133] = {
        "General Kaal", -- [1]
        "Sanguine Depths", -- [2]
      },
      [135007] = {
        "Orb Guardian", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [32872] = {
        "Runic Colossus", -- [1]
        "Ulduar", -- [2]
      },
      [16504] = {
        "Arcane Protector", -- [1]
        "Karazhan", -- [2]
      },
      [162689] = {
        "Surgeon Stitchflesh", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [146827] = {
        "Feral Dog", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [133345] = {
        "Feckless Assistant", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [135894] = {
        "Fire Elemental", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [159578] = {
        "Exposed Synapse", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [33768] = {
        "Rubble", -- [1]
        "Ulduar", -- [2]
      },
      [121011] = {
        "Tidescale Witch", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [32882] = {
        "Jormungar Behemoth", -- [1]
        "Ulduar", -- [2]
      },
      [163712] = {
        "Dying Voidspawn", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [85711] = {
        "Aquatic Technician", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [134686] = {
        "Mature Krolusk", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [54073] = {
        "Flamewaker Hound Master", -- [1]
        "Firelands", -- [2]
      },
      [126642] = {
        "Sandyback Crab", -- [1]
        "Siege of Boralus", -- [2]
      },
      [173949] = {
        "Nathrian Soldier", -- [1]
        "Castle Nathria", -- [2]
      },
      [140677] = {
        "Hulking Frostbeard", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [69507] = {
        "Zeb'tula Beastcaller", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [59746] = {
        "Scarlet Centurion", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [168318] = {
        "Forsworn Goliath", -- [1]
        "Spires of Ascension", -- [2]
      },
      [135046] = {
        "Crawmog", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [128434] = {
        "Feasting Skyscreamer", -- [1]
        "Atal'Dazar", -- [2]
      },
      [52077] = {
        "Gurubashi Berserker", -- [1]
        "Zul'Gurub", -- [2]
      },
      [60386] = {
        "Zandalari Terror Rider", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [170882] = {
        "Bone Magus", -- [1]
        "Theater of Pain", -- [2]
      },
      [29306] = {
        "Gal'darah", -- [1]
        "Gundrak", -- [2]
      },
      [164185] = {
        "Echelon", -- [1]
        "Halls of Atonement", -- [2]
      },
      [120777] = {
        "Guardian Sentry", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [58826] = {
        "Zao Sunseeker", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [73152] = {
        "Storeroom Guard", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [164188] = {
        "Horrific Figment", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [36840] = {
        "Ymirjar Wrathbringer", -- [1]
        "Pit of Saron", -- [2]
      },
      [32873] = {
        "Ancient Rune Giant", -- [1]
        "Ulduar", -- [2]
      },
      [139661] = {
        "Dampscale Forager", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [95675] = {
        "God-King Skovald", -- [1]
        "Halls of Valor", -- [2]
      },
      [149344] = {
        "Fury Imbued Azerite", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [87229] = {
        "Iron Blood Mage", -- [1]
        "Highmaul", -- [2]
      },
      [128435] = {
        "Toxic Saurid", -- [1]
        "Atal'Dazar", -- [2]
      },
      [145932] = {
        "Celestra Brightmoon", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [153943] = {
        "Decimator Shiq'voth", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [164189] = {
        "Horrific Figment", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [132491] = {
        "Kul Tiran Marksman", -- [1]
        "Siege of Boralus", -- [2]
      },
      [140643] = {
        "Ferocious Craghorn", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [71378] = {
        "Quilen Guardian", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [60384] = {
        "Zandalari Pterror Wing", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [138978] = {
        "Gargantuan Muckfin", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [140902] = {
        "Vog'rish, the Ascended", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [163678] = {
        "Clotted Corruption", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [156000] = {
        "Lyani Shadestalker", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [164702] = {
        "Carrion Worm", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [136549] = {
        "Ashvane Cannoneer", -- [1]
        "Siege of Boralus", -- [2]
      },
      [70594] = {
        "Mist Lurker", -- [1]
        "Throne of Thunder", -- [2]
      },
      [141566] = {
        "Scrimshaw Gutter", -- [1]
        "Siege of Boralus", -- [2]
      },
      [95676] = {
        "Odyn", -- [1]
        "Halls of Valor", -- [2]
      },
      [116407] = {
        "Harjatan", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [52325] = {
        "Gurubashi Blood Drinker", -- [1]
        "Zul'Gurub", -- [2]
      },
      [164191] = {
        "Noble Courtier", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [139348] = {
        "Baga the Frostshield", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [95674] = {
        "Fenryr", -- [1]
        "Halls of Valor", -- [2]
      },
      [5056] = {
        "Deviate Dreadfang", -- [1]
        "Wailing Caverns", -- [2]
      },
      [37232] = {
        "Nerub'ar Broodling", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [111047] = {
        "Parasitic Shadow Demon", -- [1]
        "The Nighthold", -- [2]
      },
      [162040] = {
        "Grand Overseer", -- [1]
        "Sanguine Depths", -- [2]
      },
      [36841] = {
        "Fallen Warrior", -- [1]
        "Pit of Saron", -- [2]
      },
      [32874] = {
        "Iron Ring Guard", -- [1]
        "Ulduar", -- [2]
      },
      [118728] = {
        "Ghastly Bonewarden", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [146816] = {
        "Sir Barton Brigham", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [169823] = {
        "Gorm Behemoth", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [134389] = {
        "Venomous Ophidian", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [42333] = {
        "High Priestess Azil", -- [1]
        "The Stonecore", -- [2]
      },
      [69515] = {
        "Zandalari Barricade", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [53732] = {
        "Unbound Smoldering Elemental", -- [1]
        "Firelands", -- [2]
      },
      [72131] = {
        "Blind Blademaster", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [164705] = {
        "Pestilence Slime", -- [1]
        "Plaguefall", -- [2]
      },
      [125569] = {
        "Riftworld Assistant", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [36907] = {
        "Wrathbone Siegesmith", -- [1]
        "Pit of Saron", -- [2]
      },
      [138625] = {
        "Amathet Enforcer", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [130485] = {
        "Mechanized Peacekeeper", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [149346] = {
        "Suffused Azerite", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [126847] = {
        "Captain Raoul", -- [1]
        "Freehold", -- [2]
      },
      [42845] = {
        "Rock Borer", -- [1]
        "The Stonecore", -- [2]
      },
      [144231] = {
        "Rowdy Reveler", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [144767] = {
        "Gonk's Aspect", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [164707] = {
        "Congealed Slime", -- [1]
        "Plaguefall", -- [2]
      },
      [133482] = {
        "Crawler Mine", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [139626] = {
        "Dredged Sailor", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [114629] = {
        "Spectral Retainer", -- [1]
        "Return to Karazhan", -- [2]
      },
      [36842] = {
        "Wrathbone Coldwraith", -- [1]
        "Pit of Saron", -- [2]
      },
      [104636] = {
        "Cenarius", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [144232] = {
        "Rowdy Reveler", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [161124] = {
        "Urg'roth, Breaker of Heroes", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [32875] = {
        "Iron Honor Guard", -- [1]
        "Ulduar", -- [2]
      },
      [44648] = {
        "Unyielding Behemoth", -- [1]
        "Throne of the Tides", -- [2]
      },
      [170850] = {
        "Raging Bloodhorn", -- [1]
        "Theater of Pain", -- [2]
      },
      [53094] = {
        "Patriarch Fire Turtle", -- [1]
        "Firelands", -- [2]
      },
      [11262] = {
        "Onyxian Whelp", -- [1]
        "Onyxia's Lair", -- [2]
      },
      [131436] = {
        "Chosen Blood Matron", -- [1]
        "The Underrot", -- [2]
      },
      [37098] = {
        "Val'kyr Herald", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [70341] = {
        "Tormented Spirit", -- [1]
        "Throne of Thunder", -- [2]
      },
      [74158] = {
        "Kor'kron Gunner", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [72655] = {
        "Fragment of Pride", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [33515] = {
        "Auriaya", -- [1]
        "Ulduar", -- [2]
      },
      [120449] = {
        "Defensive Countermeasure", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [54507] = {
        "Time-Twisted Scourge Beast", -- [1]
        "End Time", -- [2]
      },
      [33136] = {
        "Guardian of Yogg-Saron", -- [1]
        "Ulduar", -- [2]
      },
      [172899] = {
        "Nathrian Enforcer", -- [1]
        "Castle Nathria", -- [2]
      },
      [144747] = {
        "Pa'ku's Aspect", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [149353] = {
        "Incandescent Azergem Crystalback", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [138623] = {
        "Amathet Archer", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [158567] = {
        "Tormented Kor'kron Annihilator", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [20859] = {
        "Arcatraz Warder", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [16029] = {
        "Sludge Belcher", -- [1]
        "Naxxramas", -- [2]
      },
      [33264] = {
        "Ironwork Cannon", -- [1]
        "Ulduar", -- [2]
      },
      [144765] = {
        "Asithra Diresong", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [165222] = {
        "Zolramus Bonemender", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [47720] = {
        "Camel", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [158056] = {
        "Rat", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [16061] = {
        "Instructor Razuvious", -- [1]
        "Naxxramas", -- [2]
      },
      [129208] = {
        "Dread Captain Lockwood", -- [1]
        "Siege of Boralus", -- [2]
      },
      [16125] = {
        "Unrelenting Death Knight", -- [1]
        "Naxxramas", -- [2]
      },
      [52327] = {
        "Gurubashi Shadow Hunter", -- [1]
        "Zul'Gurub", -- [2]
      },
      [53095] = {
        "Matriarch Fire Turtle", -- [1]
        "Firelands", -- [2]
      },
      [56678] = {
        "Jade Staff", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [118715] = {
        "Reanimated Templar", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [61029] = {
        "Primal Fire Elemental", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [130488] = {
        "Mech Jockey", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [73414] = {
        "Kor'kron Reaper", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [53223] = {
        "Flamewaker Beast Handler", -- [1]
        "Firelands", -- [2]
      },
      [32876] = {
        "Dark Rune Champion", -- [1]
        "Ulduar", -- [2]
      },
      [24696] = {
        "Coilskar Witch", -- [1]
        "Magister's Terrace", -- [2]
      },
      [152939] = {
        "Boundless Corruption", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [145261] = {
        "Opulence", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [33388] = {
        "Dark Rune Guardian", -- [1]
        "Ulduar", -- [2]
      },
      [20857] = {
        "Arcatraz Defender", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [36658] = {
        "Scourgelord Tyrannus", -- [1]
        "Pit of Saron", -- [2]
      },
      [33772] = {
        "Faceless Horror", -- [1]
        "Ulduar", -- [2]
      },
      [162664] = {
        "Aqir Swarmer", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [156523] = {
        "Maut", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [155945] = {
        "Gherus the Chained", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [34924] = {
        "High Commander Halford Wyrmbane", -- [1]
        "Isle of Conquest", -- [2]
      },
      [72903] = {
        "Kor'kron Siegemaster", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [130489] = {
        "Dazarian Stalker", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [73415] = {
        "Ichor of Y'Shaarj", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [163690] = {
        "Shath'Yar Scribe", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [59494] = {
        "Yeasty Brew Alemental", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [136049] = {
        "Algenon", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [140157] = {
        "Rotclaw Cub-Eater", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [44234] = {
        "Vicious Leech", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [137585] = {
        "Earthgrab Totem", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [134388] = {
        "A Knot of Snakes", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [134514] = {
        "Abyssal Cultist", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [161243] = {
        "Samh'rek, Beckoner of Chaos", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [97084] = {
        "King Tor", -- [1]
        "Halls of Valor", -- [2]
      },
      [136050] = {
        "Gorestream", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [140657] = {
        "Craghorn Behemoth", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [131727] = {
        "Fenrae the Cunning", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [140458] = {
        "Bramblefur Bull", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [37228] = {
        "Frostwarden Warrior", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [53096] = {
        "Fire Turtle Hatchling", -- [1]
        "Firelands", -- [2]
      },
      [53224] = {
        "Flamewaker Taskmaster", -- [1]
        "Firelands", -- [2]
      },
      [32877] = {
        "Dark Rune Warbringer", -- [1]
        "Ulduar", -- [2]
      },
      [61670] = {
        "Sik'thik Demolisher", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [111295] = {
        "Domesticated Manasaber", -- [1]
        "The Nighthold", -- [2]
      },
      [54123] = {
        "Echo of Sylvanas", -- [1]
        "End Time", -- [2]
      },
      [144971] = {
        "Druid of the Branch", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [59820] = {
        "Pandaren Cannoneer", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [80071] = {
        "Bladespire Sorcerer", -- [1]
        "Highmaul", -- [2]
      },
      [37868] = {
        "Risen Archmage", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [156015] = {
        "Writhing Soulmass", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [144754] = {
        "Fa'thuul the Feared", -- [1]
        "Crucible of Storms", -- [2]
      },
      [80583] = {
        "Pale Gloomstalker", -- [1]
        "FW Horde Garrison Level 1", -- [2]
      },
      [97219] = {
        "Solsten", -- [1]
        "Halls of Valor", -- [2]
      },
      [157275] = {
        "Darkwhisper Disciple", -- [1]
        "Blackwing Descent Scenario", -- [2]
      },
      [134005] = {
        "Shalebiter", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [129471] = {
        "Deepsea Sandcrawler", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [134012] = {
        "Taskmaster Askari", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [69834] = {
        "Lightning Guardian", -- [1]
        "Throne of Thunder", -- [2]
      },
      [140155] = {
        "Rabid Rotclaw", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [144755] = {
        "Zaxasj the Speaker", -- [1]
        "Crucible of Storms", -- [2]
      },
      [119742] = {
        "Felguard Invader", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [160112] = {
        "Stone Legion Nightblade", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [33134] = {
        "Sara", -- [1]
        "Ulduar", -- [2]
      },
      [147828] = {
        "7th Legion Cavalier", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [15550] = {
        "Attumen the Huntsman", -- [1]
        "Karazhan", -- [2]
      },
      [147827] = {
        "7th Legion Marine", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [113088] = {
        "Corrupted Feeler", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [24761] = {
        "Brightscale Wyrm", -- [1]
        "Magister's Terrace", -- [2]
      },
      [121790] = {
        "Fleetlord Dominator", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [61928] = {
        "Sik'thik Guardian", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [113089] = {
        "Defiled Keeper", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [14302] = {
        "Chromatic Drakonid", -- [1]
        "Blackwing Lair", -- [2]
      },
      [114624] = {
        "Arcane Warden", -- [1]
        "Return to Karazhan", -- [2]
      },
      [32878] = {
        "Dark Rune Evoker", -- [1]
        "Ulduar", -- [2]
      },
      [24697] = {
        "Sister of Torment", -- [1]
        "Magister's Terrace", -- [2]
      },
      [37229] = {
        "Frostwarden Sorceress", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [28920] = {
        "Stormforged Giant", -- [1]
        "Halls of Lightning", -- [2]
      },
      [137591] = {
        "Healing Tide Totem", -- [1]
        "Kings' Rest", -- [2]
      },
      [124350] = {
        "Kunzen Crusher", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [140154] = {
        "Rotclaw Patriarch", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [171887] = {
        "Slimy Smorgasbord", -- [1]
        "Plaguefall", -- [2]
      },
      [29240] = {
        "Stormforged Lieutenant", -- [1]
        "Halls of Lightning", -- [2]
      },
      [29304] = {
        "Slad'ran", -- [1]
        "Gundrak", -- [2]
      },
      [99804] = {
        "Valarjar Falconer", -- [1]
        "Halls of Valor", -- [2]
      },
      [58856] = {
        "Haunting Sha", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [157419] = {
        "Void-Twisted Whelp", -- [1]
        "Blackwing Descent Scenario", -- [2]
      },
      [147825] = {
        "7th Legion Medic", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [171376] = {
        "Head Custodian Javlin", -- [1]
        "Sanguine Depths", -- [2]
      },
      [114625] = {
        "Phantom Guest", -- [1]
        "Return to Karazhan", -- [2]
      },
      [111554] = {
        "Felblaze Trickster", -- [1]
        "The Nighthold", -- [2]
      },
      [140152] = {
        "Rotclaw Mauler", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [144759] = {
        "Keeper Dagda", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [107459] = {
        "Venomous Spiderling", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [115905] = {
        "Fel Soul", -- [1]
        "The Nighthold", -- [2]
      },
      [11583] = {
        "Nefarian", -- [1]
        "Blackwing Lair", -- [2]
      },
      [144248] = {
        "Head Machinist Sparkflux", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [161140] = {
        "Bwemba", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [129214] = {
        "Coin-Operated Crowd Pummeler", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [113090] = {
        "Corrupted Gatewarden", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [169330] = {
        "Mucky Grunt", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [129470] = {
        "Deepsea Crab", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [140153] = {
        "Rotclaw Bear", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [69069] = {
        "Living Fluid", -- [1]
        "Throne of Thunder", -- [2]
      },
      [71529] = {
        "Thok the Bloodthirsty", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [114626] = {
        "Forlorn Spirit", -- [1]
        "Return to Karazhan", -- [2]
      },
      [38125] = {
        "Ymirjar Deathbringer", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [144249] = {
        "Omega Buster", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [37230] = {
        "Spire Frostwyrm", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [145273] = {
        "The Hand of In'zashi", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [140662] = {
        "Elder Greatfur", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [124352] = {
        "Kunzen Stalker", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [129469] = {
        "Deepsea Crawler", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [144244] = {
        "The Platinum Pummeler", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [156023] = {
        "Miniature Soulmass", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [113091] = {
        "Tainted Plainstrider", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [144246] = {
        "K.U.-J.0.", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [145274] = {
        "Yalat's Bulwark", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [173280] = {
        "Stone Legion Skirmisher", -- [1]
        "Castle Nathria", -- [2]
      },
      [69070] = {
        "Viscous Horror", -- [1]
        "Throne of Thunder", -- [2]
      },
      [131445] = {
        "Block Warden", -- [1]
        "Tol Dagor", -- [2]
      },
      [152816] = {
        "Stormling", -- [1]
        "The Eternal Palace", -- [2]
      },
      [127233] = {
        "Flameweaver", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [36811] = {
        "Deathspeaker Attendant", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [118460] = {
        "Engine of Souls", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [163559] = {
        "Royal Servant", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [60009] = {
        "Feng the Accursed", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [416] = {
        "Zilkin", -- [1]
        "Crucible of Storms", -- [2]
      },
      [158565] = {
        "Naros", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [16126] = {
        "Unrelenting Rider", -- [1]
        "Naxxramas", -- [2]
      },
      [168310] = {
        "Plagueroc", -- [1]
        "Plaguefall", -- [2]
      },
      [113092] = {
        "Swarming Dread", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [140669] = {
        "Rockmane Howler", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [52076] = {
        "Gurubashi Cauldron-Mixer", -- [1]
        "Zul'Gurub", -- [2]
      },
      [169696] = {
        "Mire Soldier", -- [1]
        "Plaguefall", -- [2]
      },
      [29305] = {
        "Moorabi", -- [1]
        "Gundrak", -- [2]
      },
      [153451] = {
        "Kosarus the Fallen", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [114628] = {
        "Skeletal Waiter", -- [1]
        "Return to Karazhan", -- [2]
      },
      [155226] = {
        "Verdant Keeper", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [24698] = {
        "Ethereum Smuggler", -- [1]
        "Magister's Terrace", -- [2]
      },
      [24762] = {
        "Sunblade Keeper", -- [1]
        "Magister's Terrace", -- [2]
      },
      [61929] = {
        "Sik'thik Amber-Weaver", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [166264] = {
        "Spare Parts", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [150396] = {
        "Aerial Unit R-21/X", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [146813] = {
        "Gunther the Gray", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [33776] = {
        "Kissemurran", -- [1]
        "Crucible of Storms", -- [2]
      },
      [135552] = {
        "Deathtouched Slaver", -- [1]
        "Waycrest Manor", -- [2]
      },
      [113093] = {
        "Infected Gazelle", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [132481] = {
        "Kul Tiran Vanguard", -- [1]
        "Siege of Boralus", -- [2]
      },
      [34288] = {
        "Salvagebot Sawblade", -- [1]
        "Ulduar", -- [2]
      },
      [73091] = {
        "Blackfuse Sellsword", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [150397] = {
        "King Mechagon", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [171384] = {
        "Research Scribe", -- [1]
        "Sanguine Depths", -- [2]
      },
      [131009] = {
        "Spirit of Gold", -- [1]
        "Atal'Dazar", -- [2]
      },
      [164218] = {
        "Lord Chamberlain", -- [1]
        "Halls of Atonement", -- [2]
      },
      [53222] = {
        "Flamewaker Centurion", -- [1]
        "Firelands", -- [2]
      },
      [55659] = {
        "Wild Imp", -- [1]
        "Waycrest Manor", -- [2]
      },
      [36969] = {
        "Skybreaker Rifleman", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [166266] = {
        "Spare Parts", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [158588] = {
        "Gamon", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [120516] = {
        "Razorjaw Swiftfin", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [175992] = {
        "Dutiful Attendant", -- [1]
        "Castle Nathria", -- [2]
      },
      [40935] = {
        "Gilgoblin Hunter", -- [1]
        "Throne of the Tides", -- [2]
      },
      [68036] = {
        "Durumu the Forgotten", -- [1]
        "Throne of Thunder", -- [2]
      },
      [44897] = {
        "Pygmy Scout", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [139110] = {
        "Spark Channeler", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [164578] = {
        "Stitchflesh's Creation", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [148582] = {
        "Stormbound Guardian", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [138626] = {
        "Amathet Zealot", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [163708] = {
        "Umbral Gatekeeper", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [147968] = {
        "Agitated Azerite", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [53484] = {
        "Icebound Sentinel", -- [1]
        "Nexus Legendary", -- [2]
      },
      [111303] = {
        "Nightborne Sage", -- [1]
        "The Nighthold", -- [2]
      },
      [111225] = {
        "Chaos Mage Beleron", -- [1]
        "The Nighthold", -- [2]
      },
      [138470] = {
        "Obsidian Drake", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [131431] = {
        "Safety Inspection Bot", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [120697] = {
        "Worshiper of Elune", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [135044] = {
        "Shredmaw the Voracious", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [139651] = {
        "Coldlight Deepseer", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [173276] = {
        "Stone Legion Commando", -- [1]
        "Castle Nathria", -- [2]
      },
      [34161] = {
        "Mechanostriker 54-A", -- [1]
        "Ulduar", -- [2]
      },
      [166276] = {
        "Mistveil Guardian", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [155919] = {
        "Stormling", -- [1]
        "The Eternal Palace", -- [2]
      },
      [16471] = {
        "Skeletal Usher", -- [1]
        "Karazhan", -- [2]
      },
      [138628] = {
        "Amathet Priest", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [135931] = {
        "Ashstone", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [139652] = {
        "Coldlight Coastrunner", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [102194] = {
        "Dread Crewman", -- [1]
        "Azsuna", -- [2]
      },
      [134905] = {
        "Shadeweb Huntress", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [135406] = {
        "Animated Gold", -- [1]
        "Kings' Rest", -- [2]
      },
      [33113] = {
        "Flame Leviathan", -- [1]
        "Ulduar", -- [2]
      },
      [3636] = {
        "Deviate Ravager", -- [1]
        "Wailing Caverns", -- [2]
      },
      [138629] = {
        "Vicar Djosa", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [167806] = {
        "Animated Sin", -- [1]
        "Halls of Atonement", -- [2]
      },
      [121030] = {
        "Fan'verg the Vicious", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [146657] = {
        "Veteran Sentinel", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [144772] = {
        "Lady Tamakeen", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [72658] = {
        "Amalgamated Hubris", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [69518] = {
        "Zeb'tula Spearanger", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [112260] = {
        "Dreadsoul Defiler", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [138630] = {
        "Cleric Izzad", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [114632] = {
        "Spectral Attendant", -- [1]
        "Return to Karazhan", -- [2]
      },
      [139654] = {
        "Dampscale Mudskipper", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [61634] = {
        "Commander Vo'jak", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [140678] = {
        "Frostbeard Howler", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [60047] = {
        "Amethyst Guardian", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [126918] = {
        "Irontide Crackshot", -- [1]
        "Freehold", -- [2]
      },
      [134024] = {
        "Devouring Maggot", -- [1]
        "Waycrest Manor", -- [2]
      },
      [24554] = {
        "Eramas Brightblaze", -- [1]
        "Magister's Terrace", -- [2]
      },
      [135048] = {
        "Gorestained Piglet", -- [1]
        "Waycrest Manor", -- [2]
      },
      [139655] = {
        "Coldlight Seer", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [34034] = {
        "Swarming Guardian", -- [1]
        "Ulduar", -- [2]
      },
      [140679] = {
        "Frostbeard Wendigo", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [157571] = {
        "Mawsworn Flametender", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [16028] = {
        "Patchwerk", -- [1]
        "Naxxramas", -- [2]
      },
      [136541] = {
        "Bile Oozeling", -- [1]
        "Waycrest Manor", -- [2]
      },
      [72350] = {
        "Dragonmaw Elite Grunt", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [135049] = {
        "Dreadwing Raven", -- [1]
        "Waycrest Manor", -- [2]
      },
      [139656] = {
        "Coldlight Oracle", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [17533] = {
        "Romulo", -- [1]
        "Karazhan", -- [2]
      },
      [5761] = {
        "Deviate Shambler", -- [1]
        "Wailing Caverns", -- [2]
      },
      [165762] = {
        "Soul Infuser", -- [1]
        "Castle Nathria", -- [2]
      },
      [56929] = {
        "Krik'thik Protectorate", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [162691] = {
        "Blightbone", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [71380] = {
        "Animated Stone Mogu", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [59684] = {
        "Hozen Party Animal", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [139657] = {
        "Coldlight Shorestriker", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [22952] = {
        "Veras Darkshadow", -- [1]
        "Black Temple", -- [2]
      },
      [165251] = {
        "Illusionary Vulpin", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [137098] = {
        "Liskorath", -- [1]
        "Tol Dagor", -- [2]
      },
      [166275] = {
        "Mistveil Shaper", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [162692] = {
        "Amarth", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [114804] = {
        "Spectral Charger", -- [1]
        "Return to Karazhan", -- [2]
      },
      [126919] = {
        "Irontide Stormcaller", -- [1]
        "Freehold", -- [2]
      },
      [139658] = {
        "Coldlight Murkdweller", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [53486] = {
        "Twilight Invader", -- [1]
        "Nexus Legendary", -- [2]
      },
      [53614] = {
        "Ceredos", -- [1]
        "Nexus Legendary", -- [2]
      },
      [169859] = {
        "Observer Zelgar", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [22844] = {
        "Ashtongue Battlelord", -- [1]
        "Black Temple", -- [2]
      },
      [162693] = {
        "Nalthor the Rimebinder", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [33651] = {
        "VX-001", -- [1]
        "Ulduar", -- [2]
      },
      [128967] = {
        "Ashvane Sniper", -- [1]
        "Siege of Boralus", -- [2]
      },
      [139659] = {
        "Dampscale Oracle", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [136076] = {
        "Agitated Nimbus", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [22955] = {
        "Charming Courtesan", -- [1]
        "Black Temple", -- [2]
      },
      [72661] = {
        "Zeal", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [120188] = {
        "Wailing Soul", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [69078] = {
        "Sul the Sandcrawler", -- [1]
        "Throne of Thunder", -- [2]
      },
      [138642] = {
        "Kvaldir Reaver", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [28923] = {
        "Loken", -- [1]
        "Halls of Lightning", -- [2]
      },
      [139660] = {
        "Dampscale Murloc", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [168837] = {
        "Stealthling", -- [1]
        "Plaguefall", -- [2]
      },
      [173444] = {
        "Caramain", -- [1]
        "Castle Nathria", -- [2]
      },
      [169861] = {
        "Ickor Bileflesh", -- [1]
        "Plaguefall", -- [2]
      },
      [139012] = {
        "Feral Guardian", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [16063] = {
        "Sir Zeliek", -- [1]
        "Naxxramas", -- [2]
      },
      [52079] = {
        "Gurubashi Bloodrager", -- [1]
        "Zul'Gurub", -- [2]
      },
      [16127] = {
        "Spectral Trainee", -- [1]
        "Naxxramas", -- [2]
      },
      [168326] = {
        "Shattered Visage", -- [1]
        "De Other Side", -- [2]
      },
      [72150] = {
        "Kor'kron Shadowmage", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [173445] = {
        "Sindrel", -- [1]
        "Castle Nathria", -- [2]
      },
      [133007] = {
        "Unbound Abomination", -- [1]
        "The Underrot", -- [2]
      },
      [137614] = {
        "Demolishing Terror", -- [1]
        "Siege of Boralus", -- [2]
      },
      [60381] = {
        "Zandalari Infiltrator", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [146828] = {
        "Feral Pup", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [114636] = {
        "Phantom Guardsman", -- [1]
        "Return to Karazhan", -- [2]
      },
      [139662] = {
        "Dampscale Raincaller", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [147787] = {
        "7th Legion Battlemage", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [173446] = {
        "Hargitas", -- [1]
        "Castle Nathria", -- [2]
      },
      [137103] = {
        "Blood Visage", -- [1]
        "The Underrot", -- [2]
      },
      [37813] = {
        "Deathbringer Saurfang", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [136592] = {
        "Flynn Fairwind", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [146829] = {
        "Undying Guardian", -- [1]
        "Crucible of Storms", -- [2]
      },
      [128969] = {
        "Ashvane Commander", -- [1]
        "Siege of Boralus", -- [2]
      },
      [139663] = {
        "Dampscale Reedweaver", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [29307] = {
        "Drakkari Colossus", -- [1]
        "Gundrak", -- [2]
      },
      [144782] = {
        "Brother Bruen", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [140620] = {
        "South Sea Stinger", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [69427] = {
        "Dark Animus", -- [1]
        "Throne of Thunder", -- [2]
      },
      [37026] = {
        "Skybreaker Sorcerer", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [105299] = {
        "Recursive Elemental", -- [1]
        "The Nighthold", -- [2]
      },
      [114637] = {
        "Spectral Sentry", -- [1]
        "Return to Karazhan", -- [2]
      },
      [139664] = {
        "Dampscale Terrorfin", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [17534] = {
        "Julianne", -- [1]
        "Karazhan", -- [2]
      },
      [173448] = {
        "Dragost", -- [1]
        "Castle Nathria", -- [2]
      },
      [157253] = {
        "Ka'zir", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [158092] = {
        "Fallen Heartpiercer", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [56395] = {
        "Shado-Pan Novice", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [138641] = {
        "Kvaldir Dreadbringer", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [71858] = {
        "Wavebinder Kardris", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [33344] = {
        "XM-024 Pummeller", -- [1]
        "Ulduar", -- [2]
      },
      [29768] = {
        "Unyielding Constrictor", -- [1]
        "Gundrak", -- [2]
      },
      [68313] = {
        "Roaming Fog", -- [1]
        "Throne of Thunder", -- [2]
      },
      [137478] = {
        "Queen Wasi", -- [1]
        "Kings' Rest", -- [2]
      },
      [44658] = {
        "Deep Murloc Invader", -- [1]
        "Throne of the Tides", -- [2]
      },
      [146320] = {
        "Prelate Za'lan", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [146832] = {
        "Necromancer Disciple", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [33432] = {
        "Leviathan Mk II", -- [1]
        "Ulduar", -- [2]
      },
      [32885] = {
        "Captured Mercenary Soldier", -- [1]
        "Ulduar", -- [2]
      },
      [168843] = {
        "Klotos", -- [1]
        "Spires of Ascension", -- [2]
      },
      [140690] = {
        "Dreadfang Viper", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [3671] = {
        "Lady Anacondra", -- [1]
        "Wailing Caverns", -- [2]
      },
      [22845] = {
        "Ashtongue Mystic", -- [1]
        "Black Temple", -- [2]
      },
      [33525] = {
        "Mangrove Ent", -- [1]
        "Ulduar", -- [2]
      },
      [71385] = {
        "Sri'thik Bombardier", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [133835] = {
        "Feral Bloodswarmer", -- [1]
        "The Underrot", -- [2]
      },
      [129227] = {
        "Azerokk", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [168844] = {
        "Lakesis", -- [1]
        "Spires of Ascension", -- [2]
      },
      [140691] = {
        "Giant Dreadfang", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [157583] = {
        "Forge Keeper", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [22963] = {
        "Bonechewer Worker", -- [1]
        "Black Temple", -- [2]
      },
      [146322] = {
        "Siegebreaker Roka", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [146834] = {
        "Necromancer Master", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [163077] = {
        "Azules", -- [1]
        "Spires of Ascension", -- [2]
      },
      [139668] = {
        "Wavebinder Gorgl", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [168845] = {
        "Astronos", -- [1]
        "Spires of Ascension", -- [2]
      },
      [77231] = {
        "Enforcer Sorka", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [157584] = {
        "Flameforge Master", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [59551] = {
        "Bopper", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [60143] = {
        "Gara'jal the Spiritbinder", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [146835] = {
        "Ghoul", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [159632] = {
        "Cultist Shadowblade", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [132879] = {
        "Crystalline Giant", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [136976] = {
        "T'zala", -- [1]
        "Kings' Rest", -- [2]
      },
      [155873] = {
        "Darkcast Annihilator", -- [1]
        "The Eternal Palace", -- [2]
      },
      [37571] = {
        "Darkfallen Advisor", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [122984] = {
        "Dazar'ai Colossus", -- [1]
        "Atal'Dazar", -- [2]
      },
      [36597] = {
        "The Lich King", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [138646] = {
        "Kvaldir Mistcaller", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [159633] = {
        "Cultist Executioner", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [32886] = {
        "Dark Rune Acolyte", -- [1]
        "Ulduar", -- [2]
      },
      [140182] = {
        "Trampleleaf the Jungle Quake", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [53617] = {
        "Molten Erupter", -- [1]
        "Firelands", -- [2]
      },
      [111721] = {
        "Venomous Spiderling", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [139530] = {
        "Earth-Wrought Siegebreaker", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [33526] = {
        "Ironroot Lasher", -- [1]
        "Ulduar", -- [2]
      },
      [138647] = {
        "Hjana Fogbringer", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [69756] = {
        "Anima Orb", -- [1]
        "Throne of Thunder", -- [2]
      },
      [139671] = {
        "Sharkslayer Mugluk", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [29308] = {
        "Prince Taldaram", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [72411] = {
        "Kor'kron Provisioner", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [21246] = {
        "Serpentshrine Sporebat", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [159301] = {
        "General Kaal", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [146326] = {
        "Headhunter Gal'wana", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [146838] = {
        "Brittle Skeleton", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [114542] = {
        "Ghostly Philanthropist", -- [1]
        "Return to Karazhan", -- [2]
      },
      [168337] = {
        "Moldovaak", -- [1]
        "Castle Nathria", -- [2]
      },
      [29820] = {
        "Drakkari God Hunter", -- [1]
        "Gundrak", -- [2]
      },
      [117154] = {
        "Razorjaw Acolyte", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [145303] = {
        "Kaldorei Glaive Thrower", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [137625] = {
        "Demolishing Terror", -- [1]
        "Siege of Boralus", -- [2]
      },
      [173360] = {
        "Plaguebelcher", -- [1]
        "Plaguefall", -- [2]
      },
      [71388] = {
        "Amber-Encased Kunchong", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [116689] = {
        "Atrigan", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [139673] = {
        "Many-Teeth", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [113106] = {
        "Sickly Cougar", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [44404] = {
        "Naz'jar Tempest Witch", -- [1]
        "Throne of the Tides", -- [2]
      },
      [145304] = {
        "Feral Strangler", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [137626] = {
        "Demolishing Terror", -- [1]
        "Siege of Boralus", -- [2]
      },
      [169265] = {
        "Creepy Crawler", -- [1]
        "Plaguefall", -- [2]
      },
      [146840] = {
        "Skeleton Guardian", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [133943] = {
        "Minion of Zul", -- [1]
        "Kings' Rest", -- [2]
      },
      [49267] = {
        "Crystal Shard", -- [1]
        "The Stonecore", -- [2]
      },
      [14023] = {
        "Corrupted Green Whelp", -- [1]
        "Blackwing Lair", -- [2]
      },
      [161173] = {
        "Abyssal Watcher", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [169875] = {
        "Shackled Soul", -- [1]
        "Theater of Pain", -- [2]
      },
      [137627] = {
        "Constricting Terror", -- [1]
        "Siege of Boralus", -- [2]
      },
      [33527] = {
        "Nature's Blade", -- [1]
        "Ulduar", -- [2]
      },
      [61399] = {
        "Glintrok Scout", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [112595] = {
        "Shal'dorei Archmage", -- [1]
        "The Nighthold", -- [2]
      },
      [139675] = {
        "Fathom-Seeker", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [33355] = {
        "Misguided Nymph", -- [1]
        "Ulduar", -- [2]
      },
      [133389] = {
        "Galvazzt", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [138828] = {
        "Berhild the Fierce", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [155215] = {
        "Faeleaf Lasher", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [156237] = {
        "Imperator Dara", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [28587] = {
        "Volkhan", -- [1]
        "Halls of Lightning", -- [2]
      },
      [126928] = {
        "Irontide Corsair", -- [1]
        "Freehold", -- [2]
      },
      [73949] = {
        "Commander Na'kaz", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [160663] = {
        "Essence of Nightmare", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [102305] = {
        "Dreadguard", -- [1]
        "Azsuna", -- [2]
      },
      [122266] = {
        "Spineshell Turtle", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [79068] = {
        "Iron Grunt", -- [1]
        "Highmaul", -- [2]
      },
      [16064] = {
        "Thane Korth'azz", -- [1]
        "Naxxramas", -- [2]
      },
      [146843] = {
        "Spiked Ghoul", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [116691] = {
        "Belac", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [129232] = {
        "Mogul Razdunk", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [100497] = {
        "Ursoc", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [144796] = {
        "High Tinker Mekkatorque", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [173973] = {
        "Nathrian Tracker", -- [1]
        "Castle Nathria", -- [2]
      },
      [28581] = {
        "Stormforged Tactician", -- [1]
        "Halls of Lightning", -- [2]
      },
      [58965] = {
        "Zig-amal", -- [1]
        "Waycrest Manor", -- [2]
      },
      [146844] = {
        "Olfkrig the Indentured", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [36855] = {
        "Lady Deathwhisper", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [131670] = {
        "Heartsbane Vinetwister", -- [1]
        "Waycrest Manor", -- [2]
      },
      [140983] = {
        "Frostbore Burster", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [53619] = {
        "Druid of the Flame", -- [1]
        "Firelands", -- [2]
      },
      [157594] = {
        "Lesser Void Elemental", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [120019] = {
        "Ryul the Fading", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [33528] = {
        "Guardian of Life", -- [1]
        "Ulduar", -- [2]
      },
      [146845] = {
        "Jared the Jagged", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [59605] = {
        "Sodden Hozen Brawler", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [139679] = {
        "Argl", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [29309] = {
        "Elder Nadox", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [152988] = {
        "Faceless Shadowcaller", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [123289] = {
        "Sparkleshell Deathclaw", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [72927] = {
        "Kovok", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [154524] = {
        "K'thir Mindcarver", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [30625] = {
        "Vurox", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [33715] = {
        "Charged Sphere", -- [1]
        "Ulduar", -- [2]
      },
      [73951] = {
        "Commander Tik", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [65414] = {
        "Ethereal Sha", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [148894] = {
        "Lost Soul", -- [1]
        "Siege of Boralus", -- [2]
      },
      [154015] = {
        "Escaped Ritualist", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [152866] = {
        "Hardened Azerite", -- [1]
        "The Maelstrom - Heart of Azeroth", -- [2]
      },
      [103896] = {
        "Felfire Imp", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [71392] = {
        "Shadow Ritualist Phylactery", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [60402] = {
        "Zandalari Fire-Dancer", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [52340] = {
        "Tiki Lord Mu'Loa", -- [1]
        "Zul'Gurub", -- [2]
      },
      [36564] = {
        "Soulguard Bonecaster", -- [1]
        "The Forge of Souls", -- [2]
      },
      [24687] = {
        "Sunblade Physician", -- [1]
        "Magister's Terrace", -- [2]
      },
      [34137] = {
        "Winter Jormungar", -- [1]
        "Ulduar", -- [2]
      },
      [154014] = {
        "Imprisoned Cabalist", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [162716] = {
        "Spellbound Ritualist", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [68220] = {
        "Gastropod", -- [1]
        "Throne of Thunder", -- [2]
      },
      [71504] = {
        "Siegecrafter Blackfuse", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [131492] = {
        "Devout Blood Priest", -- [1]
        "The Underrot", -- [2]
      },
      [152479] = {
        "Void-Twisted Whelp", -- [1]
        "Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
      },
      [173466] = {
        "Fara", -- [1]
        "Castle Nathria", -- [2]
      },
      [134949] = {
        "Slateskitter", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [95451] = {
        "Genn Greymane", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [162717] = {
        "Sinister Soulcarver", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [138659] = {
        "Risen Hound", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [176026] = {
        "Dancing Fools", -- [1]
        "Castle Nathria", -- [2]
      },
      [22949] = {
        "Gathios the Shatterer", -- [1]
        "Black Temple", -- [2]
      },
      [136100] = {
        "Sunken Denizen", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [22951] = {
        "Lady Malande", -- [1]
        "Black Temple", -- [2]
      },
      [148243] = {
        "Fallen Disciple", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [166301] = {
        "Mistveil Stalker", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [162718] = {
        "Iron-Willed Enforcer", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [146850] = {
        "Grand Master Ulrich", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [102191] = {
        "Dreadhound", -- [1]
        "Azsuna", -- [2]
      },
      [149556] = {
        "Eternal Enforcer", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [165597] = {
        "Patchwerk Soldier", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [134331] = {
        "King Rahu'ai", -- [1]
        "Kings' Rest", -- [2]
      },
      [36805] = {
        "Deathspeaker Servant", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [166302] = {
        "Corpse Harvester", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [103898] = {
        "Sickly Imp", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [104154] = {
        "Gul'dan", -- [1]
        "The Nighthold", -- [2]
      },
      [125547] = {
        "Feltouched Skitterer", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [164255] = {
        "Globgrog", -- [1]
        "Plaguefall", -- [2]
      },
      [156577] = {
        "Therum Deepforge", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [173469] = {
        "Kullan", -- [1]
        "Castle Nathria", -- [2]
      },
      [120721] = {
        "Lunar Archer", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [154018] = {
        "Prisonbreak Mauler", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [170910] = {
        "Shimmering Wader", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [171422] = {
        "Arch-Suppressor Laguas", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [16385] = {
        "Lightning Totem", -- [1]
        "Naxxramas", -- [2]
      },
      [31260] = {
        "Ymirjar Skycaller", -- [1]
        "Pit of Saron", -- [2]
      },
      [14401] = {
        "Master Elemental Shaper Krixix", -- [1]
        "Blackwing Lair", -- [2]
      },
      [163089] = {
        "Disgusting Refuse", -- [1]
        "Theater of Pain", -- [2]
      },
      [157602] = {
        "Drest'agath", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [166304] = {
        "Mistveil Stinger", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [103899] = {
        "Shadowflame Imp", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [71395] = {
        "Modified Anima Golem", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [36950] = {
        "Skybreaker Marine", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [61392] = {
        "Harthak Flameseeker", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [54517] = {
        "Time-Twisted Shadowtalon", -- [1]
        "End Time", -- [2]
      },
      [34134] = {
        "Winter Revenant", -- [1]
        "Ulduar", -- [2]
      },
      [157603] = {
        "Void Globule", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [154020] = {
        "Prisonbreak Cursewalker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [126422] = {
        "Coralback Scuttler", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [146854] = {
        "Stella Darkpaw", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [163746] = {
        "Walkie Shockie X1", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [119000] = {
        "Dreadbeard", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [144295] = {
        "Mechagon Mechanic", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [59764] = {
        "Healing Tide Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [157604] = {
        "Crawling Corruption", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [155917] = {
        "Azsh'ari Stormcaller", -- [1]
        "The Eternal Palace", -- [2]
      },
      [134058] = {
        "Galecaller Faye", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [159417] = {
        "Demented Knife-Twister", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [152333] = {
        "Dark Ranger Lenara", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [141495] = {
        "Kul Tiran Footman", -- [1]
        "Siege of Boralus", -- [2]
      },
      [144296] = {
        "Spider Tank", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [52598] = {
        "Gurubashi Soul-Eater", -- [1]
        "Zul'Gurub", -- [2]
      },
      [157605] = {
        "Burrowing Appendage", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [37666] = {
        "Darkfallen Tactician", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [126423] = {
        "Coralback Crab", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [32908] = {
        "Captured Mercenary Captain", -- [1]
        "Ulduar", -- [2]
      },
      [151818] = {
        "Deadsoul Miscreation", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [139690] = {
        "Brineshell Seacaller", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [53494] = {
        "Baleroc", -- [1]
        "Firelands", -- [2]
      },
      [157094] = {
        "Imperial Curator", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [37025] = {
        "Stinky", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [22848] = {
        "Storm Fury", -- [1]
        "Black Temple", -- [2]
      },
      [87521] = {
        "Iron Slag-Shaper", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [71397] = {
        "Zar'thik Amber Priest", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [5762] = {
        "Deviate Moccasin", -- [1]
        "Wailing Caverns", -- [2]
      },
      [164261] = {
        "Hungering Destroyer", -- [1]
        "Castle Nathria", -- [2]
      },
      [144298] = {
        "Defense Bot Mk III", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [72421] = {
        "Kor'kron Overseer", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [157607] = {
        "Faceless Shadowcaller", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [37148] = {
        "Skybreaker Summoner", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [126424] = {
        "Coralback Surfcrawler", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [28835] = {
        "Stormforged Construct", -- [1]
        "Halls of Lightning", -- [2]
      },
      [147370] = {
        "Bladeguard Kaja", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [127192] = {
        "Constellar Designate", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [144299] = {
        "Workshop Defender", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [137474] = {
        "King Timalji", -- [1]
        "Kings' Rest", -- [2]
      },
      [169893] = {
        "Nefarious Darkspeaker", -- [1]
        "Theater of Pain", -- [2]
      },
      [147205] = {
        "Warden Amical", -- [1]
        "Tol Dagor Scenario", -- [2]
      },
      [16065] = {
        "Lady Blaumeux", -- [1]
        "Naxxramas", -- [2]
      },
      [71398] = {
        "Zar'thik Swarmer", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [28586] = {
        "General Bjarngrim", -- [1]
        "Halls of Lightning", -- [2]
      },
      [151978] = {
        "Waterstrider", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [144300] = {
        "Mechagon Citizen", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [148907] = {
        "Prismatic Image", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [157609] = {
        "K'thir Mindcarver", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [37712] = {
        "Deathwhisper Shadowcaster", -- [1]
        "Pit of Saron", -- [2]
      },
      [134063] = {
        "Brother Ironhull", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [69351] = {
        "Greater Cave Bat", -- [1]
        "Throne of Thunder", -- [2]
      },
      [150254] = {
        "Scraphound", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [139694] = {
        "Mordshell", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [144301] = {
        "Living Waste", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [153003] = {
        "Soul Fragment", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [157610] = {
        "K'thir Dominator", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [146863] = {
        "Mistscorn Ravager", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [162729] = {
        "Patchwerk Soldier", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [171431] = {
        "Suppressor Vellon", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [104415] = {
        "Chronomatic Anomaly", -- [1]
        "The Nighthold", -- [2]
      },
      [90506] = {
        "Felfire Imp", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [29311] = {
        "Herald Volazj", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [157099] = {
        "Imperial Censor", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [162039] = {
        "Wicked Oppressor", -- [1]
        "Sanguine Depths", -- [2]
      },
      [135935] = {
        "Lord Magmarr", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [73191] = {
        "Aqueous Defender", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [146862] = {
        "Mistscorn Subjugator", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [148716] = {
        "Risen Soul", -- [1]
        "Siege of Boralus", -- [2]
      },
      [164266] = {
        "Domina Venomblade", -- [1]
        "Plaguefall", -- [2]
      },
      [144303] = {
        "G.U.A.R.D.", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [132530] = {
        "Kul Tiran Vanguard", -- [1]
        "Siege of Boralus", -- [2]
      },
      [157612] = {
        "Eye of Drest'agath", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [116549] = {
        "Backup Singer", -- [1]
        "Return to Karazhan", -- [2]
      },
      [122968] = {
        "Yazma", -- [1]
        "Atal'Dazar", -- [2]
      },
      [150958] = {
        "Mawsworn Guard", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [52088] = {
        "Gurubashi Cauldron-Mixer", -- [1]
        "Zul'Gurub", -- [2]
      },
      [164267] = {
        "Margrave Stradama", -- [1]
        "Plaguefall", -- [2]
      },
      [163058] = {
        "Mistveil Defender", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [69236] = {
        "Shan'ze Soulripper", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [157613] = {
        "Maw of Drest'agath", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [122076] = {
        "Snow Orb", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [130522] = {
        "Freehold Shipmate", -- [1]
        "Freehold", -- [2]
      },
      [44922] = {
        "Oathsworn Axemaster", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [147376] = {
        "Barrier", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [139698] = {
        "Clattercraw the Oracle", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [111071] = {
        "Pulsauron", -- [1]
        "The Nighthold", -- [2]
      },
      [132532] = {
        "Kul Tiran Marksman", -- [1]
        "Siege of Boralus", -- [2]
      },
      [157614] = {
        "Tentacle of Drest'agath", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [22849] = {
        "Ashtongue Feral Spirit", -- [1]
        "Black Temple", -- [2]
      },
      [126845] = {
        "Captain Jolly", -- [1]
        "Freehold", -- [2]
      },
      [43014] = {
        "Imp", -- [1]
        "The Stonecore", -- [2]
      },
      [99868] = {
        "Fenryr", -- [1]
        "Halls of Valor", -- [2]
      },
      [134807] = {
        "Ancient Spineshell", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [160420] = {
        "Angry Book Spirit", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [161198] = {
        "Warpweaver Dushar", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [130011] = {
        "Irontide Buccaneer", -- [1]
        "Freehold", -- [2]
      },
      [73095] = {
        "Blackfuse Engineer", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [134069] = {
        "Vol'zith the Whisperer", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [146866] = {
        "Enslaved Frost Elemental", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [139188] = {
        "Ironfur", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [168365] = {
        "Fungret Shroomtender", -- [1]
        "Plaguefall", -- [2]
      },
      [48906] = {
        "Blaze of the Heavens", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [173484] = {
        "Conjured Manifestation", -- [1]
        "Castle Nathria", -- [2]
      },
      [54015] = {
        "Majordomo Staghelm", -- [1]
        "Firelands", -- [2]
      },
      [145934] = {
        "Ivan the Mad", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [70232] = {
        "Muckbat", -- [1]
        "Throne of Thunder", -- [2]
      },
      [52089] = {
        "Gurubashi Worker", -- [1]
        "Zul'Gurub", -- [2]
      },
      [122467] = {
        "Asara, Mother of Night", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [52345] = {
        "Pride of Bethekk", -- [1]
        "Zul'Gurub", -- [2]
      },
      [152498] = {
        "Dark Ranger", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [126429] = {
        "Encrusted Coralback", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [130012] = {
        "Irontide Ravager", -- [1]
        "Freehold", -- [2]
      },
      [170414] = {
        "Howling Spectre", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [73194] = {
        "Kor'kron Iron Scorpion", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [131311] = {
        "Unleashed Azerite", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [44976] = {
        "Neferset Plaguebringer", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [147892] = {
        "Proudmoore Defender", -- [1]
        "Tol Dagor Scenario", -- [2]
      },
      [150249] = {
        "Pistonhead Scrapper", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [153011] = {
        "Binder Baritas", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [138475] = {
        "Tyrantion", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [37501] = {
        "Nerub'ar Champion", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [170927] = {
        "Erupting Ooze", -- [1]
        "Plaguefall", -- [2]
      },
      [134797] = {
        "Ocean Recluse", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [151476] = {
        "Blastatron X-80", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [147893] = {
        "Proudmoore Sentry", -- [1]
        "Tol Dagor Scenario", -- [2]
      },
      [165010] = {
        "Congealed Slime", -- [1]
        "Plaguefall", -- [2]
      },
      [72427] = {
        "Orgrimmar Peon", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [130655] = {
        "Bobby Howlis", -- [1]
        "Tol Dagor", -- [2]
      },
      [146872] = {
        "Kachota the Exiled", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [73195] = {
        "Kor'kron Jailer", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [150965] = {
        "Mawsworn Shackler", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [122847] = {
        "Umbral Priestess", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [70227] = {
        "Skittering Spiderling", -- [1]
        "Throne of Thunder", -- [2]
      },
      [144311] = {
        "Orb Guardian", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [140989] = {
        "Bonescale Worm", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [169905] = {
        "Risen Warlord", -- [1]
        "De Other Side", -- [2]
      },
      [36788] = {
        "Deathwhisper Necrolyte", -- [1]
        "Pit of Saron", -- [2]
      },
      [51962] = {
        "ImPetIGo", -- [1]
        "Isle of Conquest", -- [2]
      },
      [146871] = {
        "Matriarch Nas'naya", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [155793] = {
        "Skeletal Remains", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [104676] = {
        "Waning Time Particle", -- [1]
        "The Nighthold", -- [2]
      },
      [168882] = {
        "Fleeting Manifestation", -- [1]
        "Sanguine Depths", -- [2]
      },
      [129758] = {
        "Irontide Grenadier", -- [1]
        "Freehold", -- [2]
      },
      [153526] = {
        "Aqir Swarmer", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [97510] = {
        "Soulbound Destructor", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [168156] = {
        "Remornia", -- [1]
        "Castle Nathria", -- [2]
      },
      [44924] = {
        "Oathsworn Myrmidon", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [168886] = {
        "Virulax Blightweaver", -- [1]
        "Plaguefall", -- [2]
      },
      [160181] = {
        "Royal Arcanist", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [111075] = {
        "Chaotoid", -- [1]
        "The Nighthold", -- [2]
      },
      [111331] = {
        "Lurking Horror", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [145337] = {
        "Sandclaw Crab", -- [1]
        "The Eternal Palace", -- [2]
      },
      [37502] = {
        "Nerub'ar Webweaver", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [31104] = {
        "Ahn'kahar Watcher", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [71405] = {
        "Set'thik Wind Wielder", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [168153] = {
        "Plagueroc", -- [1]
        "Plaguefall", -- [2]
      },
      [160182] = {
        "Void Initiate", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [172979] = {
        "Honeydew Sporeflutterer", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [148921] = {
        "Kaldorei Glaive Thrower", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [166934] = {
        "Lor the Loyal", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [145850] = {
        "Gilnean Defuser", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [73197] = {
        "Lesser Sha Puddle", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [146874] = {
        "Windcaller Mariah", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [172094] = {
        "Dissectible Dessert", -- [1]
        "Plaguefall", -- [2]
      },
      [160183] = {
        "Void Fanatic", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [23682] = {
        "Headless Horseman", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [107237] = {
        "Icy Enchantment", -- [1]
        "The Nighthold", -- [2]
      },
      [127050] = {
        "Fel Portal", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [145851] = {
        "Kaldorei Hippogryph Rider", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [172981] = {
        "Kyrian Stitchwerk", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [96611] = {
        "Angerhoof Bull", -- [1]
        "Halls of Valor", -- [2]
      },
      [130575] = {
        "Wandering Axebeak", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [156089] = {
        "Aqir Venomweaver", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [16194] = {
        "Unholy Axe", -- [1]
        "Naxxramas", -- [2]
      },
      [160904] = {
        "Image of Absolution", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [37534] = {
        "Spinestalker", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [72942] = {
        "Dragonmaw Flagbearer", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [126433] = {
        "Bat", -- [1]
        "Deepwind Gorge", -- [2]
      },
      [53115] = {
        "Molten Lord", -- [1]
        "Firelands", -- [2]
      },
      [122850] = {
        "Umbral Guard", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [61240] = {
        "Glintrok Skulker", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [114801] = {
        "Spectral Apprentice", -- [1]
        "Return to Karazhan", -- [2]
      },
      [111333] = {
        "Taintheart Trickster", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [153531] = {
        "Aqir Bonecrusher", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [155859] = {
        "Vizja'ra", -- [1]
        "The Eternal Palace", -- [2]
      },
      [20867] = {
        "Death Watcher", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [169912] = {
        "Enraged Mask", -- [1]
        "De Other Side", -- [2]
      },
      [114544] = {
        "Skeletal Usher", -- [1]
        "Return to Karazhan", -- [2]
      },
      [169055] = {
        "Marrow Scraper", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [152508] = {
        "Dusky Tremorbeast", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [135329] = {
        "Matron Bryndle", -- [1]
        "Waycrest Manor", -- [2]
      },
      [21251] = {
        "Underbog Colossus", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [72943] = {
        "Dragonmaw Proto-Drake", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [146366] = {
        "Molten Hound", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [171448] = {
        "Dreadful Huntmaster", -- [1]
        "Sanguine Depths", -- [2]
      },
      [122851] = {
        "Umbral Archer", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [34944] = {
        "Keep Cannon", -- [1]
        "Isle of Conquest", -- [2]
      },
      [160699] = {
        "Angry Mailemental", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [33988] = {
        "Immortal Guardian", -- [1]
        "Ulduar", -- [2]
      },
      [145927] = {
        "Starcaller Ellana", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [158140] = {
        "Frenzied Rat", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [146367] = {
        "Char'golm", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [71408] = {
        "Kun-Da", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [60410] = {
        "Elegon", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [52348] = {
        "Berserking Boulder Roller", -- [1]
        "Zul'Gurub", -- [2]
      },
      [121400] = {
        "Accusator Gnazh", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [153022] = {
        "Snang", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [157349] = {
        "Void Boar", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [130644] = {
        "Daggertooth", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [16544] = {
        "Ethereal Thief", -- [1]
        "Karazhan", -- [2]
      },
      [44926] = {
        "Oathsworn Wanderer", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [53244] = {
        "Flamewaker Trainee", -- [1]
        "Firelands", -- [2]
      },
      [45377] = {
        "Augh", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [168891] = {
        "Rigged Plagueborer", -- [1]
        "Plaguefall", -- [2]
      },
      [136643] = {
        "Azerite Extractor", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [61946] = {
        "Harthak Stormcaller", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [129640] = {
        "Snarling Dockhound", -- [1]
        "Siege of Boralus", -- [2]
      },
      [71153] = {
        "Hisek the Swarmkeeper", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [71409] = {
        "Commander Zak'tar", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [167566] = {
        "Bleakwing Assassin", -- [1]
        "Castle Nathria", -- [2]
      },
      [71921] = {
        "Darkfang", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [152512] = {
        "Stormwraith", -- [1]
        "The Eternal Palace", -- [2]
      },
      [42428] = {
        "Devout Follower", -- [1]
        "The Stonecore", -- [2]
      },
      [149441] = {
        "Frozen Ballista", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [162238] = {
        "Darkwhisper Cultist", -- [1]
        "Blackwing Descent Scenario", -- [2]
      },
      [146370] = {
        "Dark Iron Vanguard", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [146882] = {
        "Gargantuan Blighthound", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [140444] = {
        "Muskflank Bull", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [86612] = {
        "Spore Shooter", -- [1]
        "Highmaul", -- [2]
      },
      [61947] = {
        "Kargesh Ribcrusher", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [59771] = {
        "Zombified Corpse", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [78832] = {
        "Grom'kar Man-at-Arms", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [21508] = {
        "Coilfang Frenzy", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [71154] = {
        "Ka'roz the Locust", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [146883] = {
        "Houndmaster Angvold", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [114792] = {
        "Virtuous Lady", -- [1]
        "Return to Karazhan", -- [2]
      },
      [131527] = {
        "Lord Waycrest", -- [1]
        "Waycrest Manor", -- [2]
      },
      [160704] = {
        "Letter Encrusted Void Globule", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [72434] = {
        "Treasury Guard", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [54701] = {
        "Time-Twisted Huntress", -- [1]
        "End Time", -- [2]
      },
      [126181] = {
        "Ramut the Black", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [28546] = {
        "Ionar", -- [1]
        "Halls of Lightning", -- [2]
      },
      [134599] = {
        "Imbued Stormcaller", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [16389] = {
        "Spectral Apprentice", -- [1]
        "Karazhan", -- [2]
      },
      [140293] = {
        "Snowfur Snarler", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [111081] = {
        "Fulminant", -- [1]
        "The Nighthold", -- [2]
      },
      [161217] = {
        "Aqir Skitterer", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [157634] = {
        "Flameforge Enforcer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [158146] = {
        "Fallen Riftwalker", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [71155] = {
        "Korven the Prime", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [171455] = {
        "Stonewall Gargon", -- [1]
        "Sanguine Depths", -- [2]
      },
      [21215] = {
        "Leotheras the Blind", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [71923] = {
        "Bloodclaw", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [172991] = {
        "Drust Soulcleaver", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [161218] = {
        "Aqir Crusher", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [105451] = {
        "Counterstrike Totem", -- [1]
        "Temple of Kotmogu", -- [2]
      },
      [72947] = {
        "Kor'kron Demolisher", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [152162] = {
        "Void-Twisted Skystriker", -- [1]
        "Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
      },
      [146886] = {
        "Hrolskald the Fetid", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [86000] = {
        "Gentle Clefthoof", -- [1]
        "FW Horde Garrison Level 1", -- [2]
      },
      [69133] = {
        "Unharnessed Power", -- [1]
        "Throne of Thunder", -- [2]
      },
      [29826] = {
        "Drakkari Medicine Man", -- [1]
        "Gundrak", -- [2]
      },
      [144839] = {
        "Whitetail Doe", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [153541] = {
        "Slavemaster Ul'rok", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [43430] = {
        "Stonecore Berserker", -- [1]
        "The Stonecore", -- [2]
      },
      [71156] = {
        "Kaz'tik the Manipulator", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [134602] = {
        "Shrouded Fang", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [120808] = {
        "Lylth the Silent", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [97083] = {
        "King Ranulf", -- [1]
        "Halls of Valor", -- [2]
      },
      [30338] = {
        "Ahn'kahar Swarmer", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [144840] = {
        "Mottled Fawn", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [157366] = {
        "Void Hunter", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [40577] = {
        "Naz'jar Sentinel", -- [1]
        "Throne of the Tides", -- [2]
      },
      [148618] = {
        "Archdruid Andrenius", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [70236] = {
        "Zandalari Storm-Caller", -- [1]
        "Throne of Thunder", -- [2]
      },
      [94191] = {
        "Burning Terrorhound", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [86611] = {
        "Mind Fungus", -- [1]
        "Highmaul", -- [2]
      },
      [136139] = {
        "Mechanized Peacekeeper", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [53630] = {
        "Unstable Pyrelord", -- [1]
        "Firelands", -- [2]
      },
      [136889] = {
        "Razorcaller Tuk", -- [1]
        "Un'gol Ruins (Islands 1)", -- [2]
      },
      [145865] = {
        "Gilnean Musketeer", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [138187] = {
        "Grotesque Horror", -- [1]
        "The Underrot", -- [2]
      },
      [146889] = {
        "Fleshrot Deathwalker", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [167876] = {
        "Inquisitor Sigar", -- [1]
        "Halls of Atonement", -- [2]
      },
      [90677] = {
        "Wrathguard Dreadblade", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [113131] = {
        "Living Felblaze", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [144842] = {
        "Tide Crawler", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [169924] = {
        "Veteran Stoneguard", -- [1]
        "Castle Nathria", -- [2]
      },
      [109804] = {
        "Plasma Sphere", -- [1]
        "The Nighthold", -- [2]
      },
      [146892] = {
        "Fleshrot Marauder", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [146890] = {
        "Fleshrot Runeweaver", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [53513] = {
        "Imprisoned Wraith", -- [1]
        "Nexus Legendary", -- [2]
      },
      [152009] = {
        "Malfunctioning Scrapbot", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [152521] = {
        "Gunaz", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [94960] = {
        "Hymdall", -- [1]
        "Halls of Valor", -- [2]
      },
      [169925] = {
        "Begrudging Waiter", -- [1]
        "Castle Nathria", -- [2]
      },
      [111852] = {
        "Rothos", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [71158] = {
        "Rik'kal the Dissector", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [171461] = {
        "Blighted Servitor", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [129000] = {
        "Southsea Brawler", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [16163] = {
        "Death Knight Cavalier", -- [1]
        "Naxxramas", -- [2]
      },
      [113132] = {
        "Burning Terrorhound", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [168102] = {
        "Empowered Deadsoul Echo", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [130024] = {
        "Soggy Shiprat", -- [1]
        "Freehold", -- [2]
      },
      [126185] = {
        "Zian-Ti Shadowcaster", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [28547] = {
        "Storming Vortex", -- [1]
        "Halls of Lightning", -- [2]
      },
      [77557] = {
        "Admiral Gar'an", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [16390] = {
        "Deathchill Servant", -- [1]
        "Naxxramas", -- [2]
      },
      [70247] = {
        "Venomous Head", -- [1]
        "Throne of Thunder", -- [2]
      },
      [152523] = {
        "Mukuta", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [148940] = {
        "Kaldorei Chimaera", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [12420] = {
        "Blackwing Mage", -- [1]
        "Blackwing Lair", -- [2]
      },
      [165515] = {
        "Depraved Darkblade", -- [1]
        "Halls of Atonement", -- [2]
      },
      [20869] = {
        "Arcatraz Sentinel", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [54143] = {
        "Molten Flamefather", -- [1]
        "Firelands", -- [2]
      },
      [159320] = {
        "Amahtet", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [54920] = {
        "Infinite Suppressor", -- [1]
        "End Time", -- [2]
      },
      [109038] = {
        "Solarist Tel'arn", -- [1]
        "The Nighthold", -- [2]
      },
      [132746] = {
        "Frostscale Broodmother", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [21253] = {
        "Tainted Water Elemental", -- [1]
        "Coilfang: Serpentshrine Cavern", -- [2]
      },
      [145064] = {
        "Blaze", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [138826] = {
        "Leikneir the Brave", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [85748] = {
        "Iron Mauler", -- [1]
        "Blackrock Foundry", -- [2]
      },
      [42808] = {
        "Stonecore Flayer", -- [1]
        "The Stonecore", -- [2]
      },
      [59518] = {
        "Bloated Brew Alemental", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [139342] = {
        "Icetusk Warrior", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [22869] = {
        "Illidari Boneslicer", -- [1]
        "Black Temple", -- [2]
      },
      [129602] = {
        "Irontide Enforcer", -- [1]
        "Freehold", -- [2]
      },
      [33716] = {
        "Ruby Consort", -- [1]
        "Ulduar", -- [2]
      },
      [162763] = {
        "Soulforged Bonereaver", -- [1]
        "Theater of Pain", -- [2]
      },
      [146895] = {
        "Fleshrot Vandal", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [72498] = {
        "Theramore Citizen", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [104688] = {
        "Voidling", -- [1]
        "The Nighthold", -- [2]
      },
      [132051] = {
        "Blood Tick", -- [1]
        "The Underrot", -- [2]
      },
      [28825] = {
        "Cyclone", -- [1]
        "Halls of Lightning", -- [2]
      },
      [130026] = {
        "Bilge Rat Seaspeaker", -- [1]
        "Tol Dagor", -- [2]
      },
      [158157] = {
        "Overlord Mathias Shaw", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [36612] = {
        "Lord Marrowgar", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [53120] = {
        "Flamewaker Pathfinder", -- [1]
        "Firelands", -- [2]
      },
      [126969] = {
        "Trothak", -- [1]
        "Freehold", -- [2]
      },
      [130622] = {
        "Squallshaper Auran", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [168907] = {
        "Slime Tentacle", -- [1]
        "Plaguefall", -- [2]
      },
      [144849] = {
        "Darkscale Scout", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [161229] = {
        "Aqir Venomweaver", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [22853] = {
        "Illidari Defiler", -- [1]
        "Black Temple", -- [2]
      },
      [71161] = {
        "Kil'ruk the Wind-Reaver", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [134612] = {
        "Grasping Tentacles", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [136353] = {
        "Colossal Tentacle", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [168396] = {
        "Plaguebelcher", -- [1]
        "Plaguefall", -- [2]
      },
      [109040] = {
        "Arcanist Tel'arn", -- [1]
        "The Nighthold", -- [2]
      },
      [144850] = {
        "Darkscale Siren", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [130027] = {
        "Ashvane Marine", -- [1]
        "Tol Dagor", -- [2]
      },
      [114260] = {
        "Mrrgria", -- [1]
        "Return to Karazhan", -- [2]
      },
      [102696] = {
        "Felslag Imp", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [98035] = {
        "Dreadstalker", -- [1]
        "Crucible of Storms", -- [2]
      },
      [168579] = {
        "Fen Hatchling", -- [1]
        "Plaguefall", -- [2]
      },
      [28826] = {
        "Stormfury Revenant", -- [1]
        "Halls of Lightning", -- [2]
      },
      [69465] = {
        "Jin'rokh the Breaker", -- [1]
        "Throne of Thunder", -- [2]
      },
      [127724] = {
        "Fanatical Pyromancer", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [32927] = {
        "Runemaster Molgeim", -- [1]
        "Ulduar", -- [2]
      },
      [111856] = {
        "Guardian Gorroc", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [14020] = {
        "Chromaggus", -- [1]
        "Blackwing Lair", -- [2]
      },
      [59547] = {
        "Jiang", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [166971] = {
        "Castellan Niklaus", -- [1]
        "Castle Nathria", -- [2]
      },
      [56448] = {
        "Wise Mari", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [109041] = {
        "Naturalist Tel'arn", -- [1]
        "The Nighthold", -- [2]
      },
      [157137] = {
        "Terror Tendril", -- [1]
        "Halls of Origination", -- [2]
      },
      [130028] = {
        "Ashvane Priest", -- [1]
        "Tol Dagor", -- [2]
      },
      [72954] = {
        "Kor'thik Honor Guard", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [72492] = {
        "Shimra", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [53121] = {
        "Flamewaker Cauterizer", -- [1]
        "Firelands", -- [2]
      },
      [60709] = {
        "Qiang the Merciless", -- [1]
        "Mogu'shan Vaults", -- [2]
      },
      [147924] = {
        "Geoshard", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [132056] = {
        "Venture Co. Skyscorcher", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [127725] = {
        "Felblade Shocktrooper", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [161745] = {
        "Hepthys", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [140345] = {
        "Stormscreech", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [99828] = {
        "Trained Hawk", -- [1]
        "Halls of Valor", -- [2]
      },
      [134616] = {
        "Krolusk Pup", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [56731] = {
        "Habanero Brew", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [131545] = {
        "Lady Waycrest", -- [1]
        "Waycrest Manor", -- [2]
      },
      [129517] = {
        "Reanimated Raptor", -- [1]
        "Atal'Dazar", -- [2]
      },
      [3674] = {
        "Skum", -- [1]
        "Wailing Caverns", -- [2]
      },
      [161746] = {
        "Ossirat", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [126190] = {
        "Zian-Ti Brutalizer", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [135254] = {
        "Irontide Raider", -- [1]
        "Tol Dagor", -- [2]
      },
      [134617] = {
        "Krolusk Hatchling", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [73723] = {
        "Jun-Wei", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [59520] = {
        "Fizzy Brew Alemental", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [140425] = {
        "Surefoot", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [21702] = {
        "Ethereum Life-Binder", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [16410] = {
        "Spectral Retainer", -- [1]
        "Karazhan", -- [2]
      },
      [111858] = {
        "Guardian Rurson", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [153141] = {
        "Endless Hunger Totem", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [71420] = {
        "Hungry Kunchong", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [165471] = {
        "Nathrian Duelist", -- [1]
        "Castle Nathria", -- [2]
      },
      [30276] = {
        "Ahn'kahar Web Winder", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [96574] = {
        "Stormforged Sentinel", -- [1]
        "Halls of Valor", -- [2]
      },
      [59426] = {
        "Bopper", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [173655] = {
        "Mistveil Matriarch", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [61056] = {
        "Primal Earth Elemental", -- [1]
        "Crucible of Storms", -- [2]
      },
      [155276] = {
        "Bursting Cragfish", -- [1]
        "The Eternal Palace", -- [2]
      },
      [155094] = {
        "Mechagon Trooper", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [72768] = {
        "Kor'kron War Wolf", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [36998] = {
        "Skybreaker Protector", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [37126] = {
        "Sister Svalna", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [16414] = {
        "Ghostly Steward", -- [1]
        "Karazhan", -- [2]
      },
      [53167] = {
        "Unbound Pyrelord", -- [1]
        "Firelands", -- [2]
      },
      [173189] = {
        "Nathrian Hawkeye", -- [1]
        "Castle Nathria", -- [2]
      },
      [100943] = {
        "Earthen Wall Totem", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [159190] = {
        "Synod", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [167892] = {
        "Tormented Soul", -- [1]
        "Halls of Atonement", -- [2]
      },
      [20886] = {
        "Wrath-Scryer Soccothrates", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [148441] = {
        "Gnomish Gyro-Engineer", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [101110] = {
        "Nether Ray", -- [1]
        "Crucible of Storms", -- [2]
      },
      [123146] = {
        "Torn Spirit", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [170452] = {
        "Essence Orb", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [158168] = {
        "Dark Disciple", -- [1]
        "Halls of Origination", -- [2]
      },
      [69374] = {
        "War-God Jalak", -- [1]
        "Throne of Thunder", -- [2]
      },
      [73725] = {
        "Xiang-Lin", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [56865] = {
        "Aqua Dancer", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [148442] = {
        "Gnomish Commando", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [152661] = {
        "Mawsworn Ward", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [145371] = {
        "Uu'nat", -- [1]
        "Crucible of Storms", -- [2]
      },
      [60033] = {
        "Frenzied Spirit", -- [1]
        "Scarlet Monastery", -- [2]
      },
      [138838] = {
        "Zara'thik Mantid", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [152703] = {
        "Walkie Shockie X1", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [151680] = {
        "Orangetooth", -- [1]
        "Snowblossom Village (Islands 3)", -- [2]
      },
      [16164] = {
        "Shade of Naxxramas", -- [1]
        "Naxxramas", -- [2]
      },
      [152538] = {
        "Dark Ranger Zanra", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [168058] = {
        "Infused Quill-feather", -- [1]
        "Sanguine Depths", -- [2]
      },
      [145372] = {
        "Wild Mooncaller", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [72958] = {
        "Dragonmaw Tidal Shaman", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [29774] = {
        "Spitting Cobra", -- [1]
        "Gundrak", -- [2]
      },
      [155098] = {
        "Rexxar", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [59552] = {
        "The Crybaby Hozen", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [32904] = {
        "Dark Rune Commoner", -- [1]
        "Ulduar", -- [2]
      },
      [152539] = {
        "Dark Ranger Thandel", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [53635] = {
        "Cinderweb Drone", -- [1]
        "Firelands", -- [2]
      },
      [33288] = {
        "Yogg-Saron", -- [1]
        "Ulduar", -- [2]
      },
      [174550] = {
        "Myskia", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [22874] = {
        "Coilskar Harpooner", -- [1]
        "Black Temple", -- [2]
      },
      [54688] = {
        "Time-Twisted Nightsaber", -- [1]
        "End Time", -- [2]
      },
      [173641] = {
        "Nathrian Gargon", -- [1]
        "Castle Nathria", -- [2]
      },
      [147933] = {
        "Geoactive Azershard", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [136160] = {
        "King Dazar", -- [1]
        "Kings' Rest", -- [2]
      },
      [34184] = {
        "Clockwork Mechanic", -- [1]
        "Ulduar", -- [2]
      },
      [173604] = {
        "Sinister Antiquarian", -- [1]
        "Castle Nathria", -- [2]
      },
      [158171] = {
        "Faceless Destroyer", -- [1]
        "Halls of Origination", -- [2]
      },
      [29573] = {
        "Drakkari Elemental", -- [1]
        "Gundrak", -- [2]
      },
      [146910] = {
        "Fleshrot Plaguetalon", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [102392] = {
        "Resonance Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [59522] = {
        "Sudsy Brew Alemental", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [29829] = {
        "Drakkari Earthshaker", -- [1]
        "Gundrak", -- [2]
      },
      [59778] = {
        "Krik'thik Striker", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [140326] = {
        "Stonehusk Swarmer", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [167964] = {
        "4.RF-4.RF", -- [1]
        "De Other Side", -- [2]
      },
      [112118] = {
        "Tainted Bloodpetal", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [146911] = {
        "Fleshrot Blighthound", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [167898] = {
        "Manifestation of Envy", -- [1]
        "Halls of Atonement", -- [2]
      },
      [147935] = {
        "Azergem Crawler", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [54432] = {
        "Murozond", -- [1]
        "End Time", -- [2]
      },
      [140769] = {
        "Goldenvein", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [152135] = {
        "Void-Twisted Spellweaver", -- [1]
        "Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
      },
      [155251] = {
        "Elder Longbranch", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [53545] = {
        "Molten Spewer", -- [1]
        "Firelands", -- [2]
      },
      [69927] = {
        "Zandalari Prelate", -- [1]
        "Throne of Thunder", -- [2]
      },
      [45062] = {
        "Oathsworn Scorpid Keeper", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [147936] = {
        "Azergem Shardback", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [34086] = {
        "Magma Rager", -- [1]
        "Ulduar", -- [2]
      },
      [134739] = {
        "Purification Construct", -- [1]
        "Kings' Rest", -- [2]
      },
      [141282] = {
        "Kul Tiran Footman", -- [1]
        "Siege of Boralus", -- [2]
      },
      [22855] = {
        "Illidari Nightlord", -- [1]
        "Black Temple", -- [2]
      },
      [146401] = {
        "Darkscale Dig-Slave", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [16168] = {
        "Stoneskin Gargoyle", -- [1]
        "Naxxramas", -- [2]
      },
      [32933] = {
        "Left Arm", -- [1]
        "Ulduar", -- [2]
      },
      [139337] = {
        "Icetusk Blood-Drinker", -- [1]
        "The Rotting Mire (Islands 9)", -- [2]
      },
      [34057] = {
        "Assault Bot", -- [1]
        "Ulduar", -- [2]
      },
      [159305] = {
        "Maddened Conscript", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [141283] = {
        "Kul Tiran Halberd", -- [1]
        "Siege of Boralus", -- [2]
      },
      [105721] = {
        "Nightmare Ichor", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [71475] = {
        "Rook Stonetoe", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [118518] = {
        "Priestess Lunaspyre", -- [1]
        "Tomb of Sargeras", -- [2]
      },
      [155616] = {
        "Zanj'ir Brute", -- [1]
        "The Eternal Palace", -- [2]
      },
      [152033] = {
        "Inconspicuous Plant", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [140260] = {
        "Runehoof Courser", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [127732] = {
        "Clobex", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [141284] = {
        "Kul Tiran Wavetender", -- [1]
        "Siege of Boralus", -- [2]
      },
      [135241] = {
        "Bilge Rat Pillager", -- [1]
        "Siege of Boralus", -- [2]
      },
      [165913] = {
        "Ghastly Parishioner", -- [1]
        "Halls of Atonement", -- [2]
      },
      [90686] = {
        "Felstalker Dreadhound", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [140262] = {
        "Runehoof Doe", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [32930] = {
        "Kologarn", -- [1]
        "Ulduar", -- [2]
      },
      [156641] = {
        "Enthralled Weaponsmith", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [174162] = {
        "Countess Gloomveil", -- [1]
        "Castle Nathria", -- [2]
      },
      [141285] = {
        "Kul Tiran Marksman", -- [1]
        "Siege of Boralus", -- [2]
      },
      [40584] = {
        "Naz'jar Invader", -- [1]
        "Throne of the Tides", -- [2]
      },
      [91970] = {
        "Felguard Invader", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [61699] = {
        "Sik'thik Amberwing", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [45063] = {
        "Bonesnapper Scorpid", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [156130] = {
        "Lesser Zoatroid", -- [1]
        "The Eternal Palace", -- [2]
      },
      [127477] = {
        "Saltwater Snapper", -- [1]
        "Tol Dagor", -- [2]
      },
      [153059] = {
        "Aethanel", -- [1]
        "The Eternal Palace", -- [2]
      },
      [166969] = {
        "Baroness Frieda", -- [1]
        "Castle Nathria", -- [2]
      },
      [154083] = {
        "Trained Wolf", -- [1]
        "Siege of Orgrimmar - Coup Scenario", -- [2]
      },
      [158690] = {
        "Cultist Tormenter", -- [1]
        "Horrific Vision of Stormwind", -- [2]
      },
      [59553] = {
        "The Songbird Queen", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [155619] = {
        "Zanj'ir Honor Guard", -- [1]
        "The Eternal Palace", -- [2]
      },
      [156131] = {
        "Zanj'ir Myrmidon", -- [1]
        "The Eternal Palace", -- [2]
      },
      [140263] = {
        "Runehoof Stag", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [153060] = {
        "Cyranus", -- [1]
        "The Eternal Palace", -- [2]
      },
      [37662] = {
        "Darkfallen Commander", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [139800] = {
        "Galecaller Apprentice", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [69701] = {
        "Anima Golem", -- [1]
        "Throne of Thunder", -- [2]
      },
      [45096] = {
        "Tamed Tol'vir Prowler", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [130334] = {
        "Gritplate Gazer", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [37012] = {
        "Ancient Skeletal Soldier", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [140264] = {
        "Runehoof Calf", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [111354] = {
        "Taintheart Befouler", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [71979] = {
        "Kor'kron Warbringer", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [52377] = {
        "Florawing Needler", -- [1]
        "Zul'Gurub", -- [2]
      },
      [33431] = {
        "Forest Swarmer", -- [1]
        "Ulduar", -- [2]
      },
      [164929] = {
        "Tirnenn Villager", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [162320] = {
        "Shaman", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [168418] = {
        "Forsworn Inquisitor", -- [1]
        "Spires of Ascension", -- [2]
      },
      [129526] = {
        "Bilge Rat Swabby", -- [1]
        "Freehold", -- [2]
      },
      [72452] = {
        "Kor'kron Dire Wolf", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [159764] = {
        "Jesh'ra", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [122104] = {
        "Portal Keeper Hasabel", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [30286] = {
        "Frostbringer", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [112655] = {
        "Celestial Acolyte", -- [1]
        "The Nighthold", -- [2]
      },
      [61444] = {
        "Ming the Cunning", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [16530] = {
        "Mana Warp", -- [1]
        "Karazhan", -- [2]
      },
      [140266] = {
        "Broken-Horn the Ancient", -- [1]
        "Skittering Hollow (Islands 5)", -- [2]
      },
      [111355] = {
        "Taintheart Tormenter", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [129559] = {
        "Cutwater Duelist", -- [1]
        "Freehold", -- [2]
      },
      [130325] = {
        "Deepsea Viseclaw", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [146409] = {
        "Lady Jaina Proudmoore", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [168968] = {
        "Plaguebound Fallen", -- [1]
        "Plaguefall", -- [2]
      },
      [129015] = {
        "Southsea Third Mate", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [168420] = {
        "Forsworn Champion", -- [1]
        "Spires of Ascension", -- [2]
      },
      [129527] = {
        "Bilge Rat Buccaneer", -- [1]
        "Freehold", -- [2]
      },
      [153064] = {
        "Overzealous Hulk", -- [1]
        "The Eternal Palace", -- [2]
      },
      [20880] = {
        "Eredar Deathbringer", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [145898] = {
        "Anointed Disciple", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [127497] = {
        "Ashvane Warden", -- [1]
        "Tol Dagor", -- [2]
      },
      [69382] = {
        "Malignant Ooze", -- [1]
        "Throne of Thunder", -- [2]
      },
      [164363] = {
        "Undying Stonefiend", -- [1]
        "Halls of Atonement", -- [2]
      },
      [172064] = {
        "Unstable Larva", -- [1]
        "Plaguefall", -- [2]
      },
      [127480] = {
        "Stinging Parasite", -- [1]
        "Tol Dagor", -- [2]
      },
      [153065] = {
        "Voidbound Ravager", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [53140] = {
        "Son of Flame", -- [1]
        "Firelands", -- [2]
      },
      [127488] = {
        "Ashvane Flamecaster", -- [1]
        "Tol Dagor", -- [2]
      },
      [134216] = {
        "Shadeweaver Zarra", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [168962] = {
        "Reborn Phoenix", -- [1]
        "Castle Nathria", -- [2]
      },
      [129016] = {
        "Southsea Musketeer", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [16165] = {
        "Necro Knight", -- [1]
        "Naxxramas", -- [2]
      },
      [168934] = {
        "Enraged Spirit", -- [1]
        "De Other Side", -- [2]
      },
      [144876] = {
        "Apetagonizer 3000", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [69383] = {
        "Quivering Blob", -- [1]
        "Throne of Thunder", -- [2]
      },
      [72966] = {
        "Resonating Amber", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [45065] = {
        "Tol'vir Merchant", -- [1]
        "Lost City of the Tol'vir", -- [2]
      },
      [53127] = {
        "Fire Scorpion", -- [1]
        "Firelands", -- [2]
      },
      [69639] = {
        "Humming Crystal", -- [1]
        "Throne of Thunder", -- [2]
      },
      [37003] = {
        "Skybreaker Vindicator", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [156650] = {
        "Dark Manifestation", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [53639] = {
        "Flamewaker Cauterizer", -- [1]
        "Firelands", -- [2]
      },
      [12422] = {
        "Death Talon Dragonspawn", -- [1]
        "Blackwing Lair", -- [2]
      },
      [16525] = {
        "Spell Shade", -- [1]
        "Karazhan", -- [2]
      },
      [20873] = {
        "Negaton Warp-Master", -- [1]
        "Tempest Keep: The Arcatraz", -- [2]
      },
      [70179] = {
        "Ritual Guard", -- [1]
        "Throne of Thunder", -- [2]
      },
      [108542] = {
        "Skittering Spiderling", -- [1]
        "The Emerald Nightmare", -- [2]
      },
      [163862] = {
        "Defender of Many Eyes", -- [1]
        "Plaguefall", -- [2]
      },
      [129529] = {
        "Blacktooth Scrapper", -- [1]
        "Freehold", -- [2]
      },
      [72455] = {
        "Overseer Komak", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [52498] = {
        "Beth'tilac", -- [1]
        "Firelands", -- [2]
      },
      [138842] = {
        "Ta'kil the Resonator", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [73223] = {
        "Pterrordax", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [146940] = {
        "Primordial Mindbender", -- [1]
        "Crucible of Storms", -- [2]
      },
      [155628] = {
        "Azsh'ari Oracle", -- [1]
        "The Eternal Palace", -- [2]
      },
      [110846] = {
        "Cove Raven", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [127482] = {
        "Sewer Vicejaw", -- [1]
        "Tol Dagor", -- [2]
      },
      [136214] = {
        "Windspeaker Heldis", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [150547] = {
        "Scrapbone Grunter", -- [1]
        "Operation: Mechagon", -- [2]
      },
      [145903] = {
        "Darkforged Crusader", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [135167] = {
        "Spectral Berserker", -- [1]
        "Kings' Rest", -- [2]
      },
      [36879] = {
        "Plagueborn Horror", -- [1]
        "Pit of Saron", -- [2]
      },
      [155629] = {
        "Azsh'ari Stormbinder", -- [1]
        "The Eternal Palace", -- [2]
      },
      [30279] = {
        "Deep Crawler", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [156653] = {
        "Coagulated Horror", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [129786] = {
        "Brineshell Makrura", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [69911] = {
        "Zandalari Warlord", -- [1]
        "Throne of Thunder", -- [2]
      },
      [170474] = {
        "Brood Assassin", -- [1]
        "Plaguefall", -- [2]
      },
      [36620] = {
        "Soulguard Adept", -- [1]
        "The Forge of Souls", -- [2]
      },
      [53128] = {
        "Giant Fire Scorpion", -- [1]
        "Firelands", -- [2]
      },
      [147440] = {
        "Blazing Fireguard", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [37004] = {
        "Skybreaker Dreadblade", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [37132] = {
        "Ymirjar Battle-Maiden", -- [1]
        "Icecrown Citadel", -- [2]
      },
      [53640] = {
        "Flamewaker Sentinel", -- [1]
        "Firelands", -- [2]
      },
      [33293] = {
        "XT-002 Deconstructor", -- [1]
        "Ulduar", -- [2]
      },
      [15975] = {
        "Carrion Spinner", -- [1]
        "Naxxramas", -- [2]
      },
      [122367] = {
        "Admiral Svirax", -- [1]
        "Antorus, the Burning Throne", -- [2]
      },
      [71433] = {
        "Spark of Life", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [135239] = {
        "Spectral Witch Doctor", -- [1]
        "Kings' Rest", -- [2]
      },
      [156143] = {
        "Voidcrazed Hulk", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [53901] = {
        "Unstable Magma", -- [1]
        "Firelands", -- [2]
      },
      [165357] = {
        "Pestilence Slime", -- [1]
        "Plaguefall", -- [2]
      },
      [137204] = {
        "Hoodoo Hexer", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [130299] = {
        "Droplet", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [169476] = {
        "Highway Serf", -- [1]
        "Halls of Atonement", -- [2]
      },
      [138740] = {
        "Musashitake", -- [1]
        "The Underrot", -- [2]
      },
      [159224] = {
        "Gryth'ax the Executioner", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [134144] = {
        "Living Current", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [136181] = {
        "Volcano", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [173044] = {
        "Stitching Assistant", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [159219] = {
        "Umbral Seer", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [69132] = {
        "High Priestess Mar'li", -- [1]
        "Throne of Thunder", -- [2]
      },
      [14022] = {
        "Corrupted Red Whelp", -- [1]
        "Blackwing Lair", -- [2]
      },
      [167406] = {
        "Sire Denathrius", -- [1]
        "Castle Nathria", -- [2]
      },
      [138822] = {
        "Bloodwake Harpooner", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [156145] = {
        "Burrowing Appendage", -- [1]
        "Horrific Vision of Orgrimmar", -- [2]
      },
      [168942] = {
        "Death Speaker", -- [1]
        "De Other Side", -- [2]
      },
      [129788] = {
        "Irontide Bonesaw", -- [1]
        "Freehold", -- [2]
      },
      [175652] = {
        "Lord of Woe", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [126205] = {
        "Profit-O-Matic", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [73226] = {
        "Lesser Sha Puddle", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [156158] = {
        "Adjutant Felipos", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
    },
    ["health_selection_overlay_alpha"] = 0,
    ["aura_stack_shadow_color"] = {
      nil, -- [1]
      nil, -- [2]
      nil, -- [3]
      0, -- [4]
    },
    ["minor_height_scale"] = 0.94999998807907,
    ["aura_width2"] = 20,
    ["aura_stack_size"] = 12,
    ["aura_border_colors"] = {
      ["steal_or_purge"] = {
        0.72941176470588, -- [1]
        0, -- [2]
        0.98039215686275, -- [3]
      },
    },
    ["hook_data_trash"] = {
      {
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
          ["Nameplate Updated"] = "\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    isInspired = Plater.NameplateHasAura (unitFrame, \"Inspiring Presence\")\n    \n    \n    if (isInspired) then\n        Plater.SetNameplateColor (unitFrame, \"orange\")\n    end\n    \nend",
        },
        ["Hooks"] = {
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    isInspired = Plater.NameplateHasAura (unitFrame, \"Inspiring Presence\")\n    \n    \n    if (isInspired) then\n        Plater.SetNameplateColor (unitFrame, \"orange\")\n    end\n    \nend",
          ["Nameplate Updated"] = "\n\n",
        },
        ["__TrashAt"] = 1609637792,
        ["Time"] = 1609619702,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["url"] = "",
        ["Icon"] = 135921,
        ["Enabled"] = false,
        ["Revision"] = 120,
        ["semver"] = "",
        ["Author"] = "Kastfall-Azralon",
        ["Desc"] = "Colors the Inspiring Presence mob",
        ["Prio"] = 99,
        ["version"] = -1,
        ["PlaterCore"] = 1,
        ["Name"] = "Inspiring Presence",
        ["LastHookEdited"] = "Constructor",
        ["Options"] = {
        },
      }, -- [1]
    },
    ["extra_icon_anchor"] = {
      ["x"] = -10,
    },
    ["range_check_alpha"] = 1,
    ["semver"] = "1.2.1",
    ["aura_frame2_anchor"] = {
      ["y"] = 0,
      ["x"] = -2,
      ["side"] = 2,
    },
    ["cast_statusbar_texture"] = "REEEE",
    ["auto_toggle_friendly"] = {
      ["cities"] = false,
      ["world"] = false,
    },
    ["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
    ["debuff_show_cc_border"] = {
      0, -- [1]
      0, -- [2]
      0, -- [3]
    },
    ["aura_consolidate"] = true,
    ["health_statusbar_texture"] = "REEEE",
    ["hook_auto_imported"] = {
      ["Aura Reorder"] = 3,
      ["Targetting Alpha"] = 3,
      ["Dont Have Aura"] = 1,
      ["Players Targetting Amount"] = 4,
      ["Color Automation"] = 1,
      ["Bwonsamdi Reaping"] = 1,
      ["Attacking Specific Unit"] = 1,
      ["Jaina Encounter"] = 6,
      ["Blockade Encounter"] = 1,
      ["Cast Bar Icon Config"] = 2,
      ["Extra Border"] = 2,
      ["Combo Points"] = 4,
      ["Hide Neutral Units"] = 1,
      ["Target Color"] = 3,
      ["Execute Range"] = 1,
      ["Reorder Nameplate"] = 4,
    },
    ["minor_width_scale"] = 0.89999997615814,
    ["castbar_target_text_size"] = 8,
    ["captured_spells"] = {
      [1543] = {
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [193475] = {
        ["type"] = "BUFF",
        ["source"] = "Darkibald",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [323878] = {
        ["type"] = "DEBUFF",
        ["source"] = "Oryphrion",
        ["encounterID"] = 2358,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 162060,
      },
      [324392] = {
        ["type"] = "BUFF",
        ["source"] = "Forsworn Goliath",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 168318,
      },
      [31661] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [118905] = {
        ["source"] = "Capacitor Totem",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 61245,
      },
      [50769] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [190411] = {
        ["source"] = "Yowshe",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [338731] = {
        ["type"] = "DEBUFF",
        ["source"] = "Oryphrion",
        ["encounterID"] = 2358,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 162060,
      },
      [45524] = {
        ["type"] = "DEBUFF",
        ["source"] = "Obliviôn-Zul'jin",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [221886] = {
        ["type"] = "BUFF",
        ["source"] = "Brittmarî",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [203975] = {
        ["type"] = "BUFF",
        ["source"] = "Lunarist",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [1715] = {
        ["type"] = "DEBUFF",
        ["source"] = "Bizerovich-Archimonde",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [316220] = {
        ["type"] = "DEBUFF",
        ["source"] = "Boinkstab-TarrenMill",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [290121] = {
        ["type"] = "BUFF",
        ["source"] = "Araine",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [323385] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [167898] = {
        ["type"] = "BUFF",
        ["source"] = "Kolvar-TwistingNether",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [327481] = {
        ["encounterID"] = 2357,
        ["source"] = "Kin-Tara",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 162059,
      },
      [235450] = {
        ["type"] = "BUFF",
        ["source"] = "Andybud",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [157153] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [245686] = {
        ["type"] = "BUFF",
        ["source"] = "Miyamizu-C'Thun",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [228287] = {
        ["type"] = "DEBUFF",
        ["source"] = "Jsun-Draenor",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [64844] = {
        ["type"] = "BUFF",
        ["source"] = "Brenel-Doomhammer",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [304971] = {
        ["source"] = "Damucless",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [219589] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [30831] = {
        ["type"] = "BUFF",
        ["source"] = "Forsworn Stealthclaw",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 163506,
      },
      [45334] = {
        ["type"] = "DEBUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [5225] = {
        ["type"] = "BUFF",
        ["source"] = "Naedrath",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [298836] = {
        ["type"] = "BUFF",
        ["source"] = "Vanishedww",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [465] = {
        ["type"] = "BUFF",
        ["source"] = "Aïlqk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [213708] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [324427] = {
        ["encounterID"] = 2358,
        ["source"] = "Oryphrion",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 162060,
      },
      [33757] = {
        ["source"] = "Smorior",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [102793] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [214222] = {
        ["type"] = "DEBUFF",
        ["source"] = "Bubik-BronzeDragonflight",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [212431] = {
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [251836] = {
        ["type"] = "BUFF",
        ["source"] = "Cheezydeath-Hyjal",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [114052] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [198103] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [288613] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [101643] = {
        ["type"] = "BUFF",
        ["source"] = "Ryzzen-Ragnaros",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [345419] = {
        ["type"] = "BUFF",
        ["source"] = "Nathrian Inquisitor",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 175513,
      },
      [330067] = {
        ["type"] = "BUFF",
        ["source"] = "Cupkavi",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [327510] = {
        ["type"] = "BUFF",
        ["source"] = "Steemx",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [82326] = {
        ["source"] = "Shuchi",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [324444] = {
        ["encounterID"] = 2358,
        ["source"] = "Oryphrion",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 162060,
      },
      [30449] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [188389] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [309613] = {
        ["source"] = "Djòwl",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [336736] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [336737] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [339298] = {
        ["type"] = "BUFF",
        ["source"] = "Snowhìte",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [546] = {
        ["type"] = "BUFF",
        ["source"] = "Blackly",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [321388] = {
        ["type"] = "BUFF",
        ["source"] = "Bonewallace",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [33697] = {
        ["type"] = "BUFF",
        ["source"] = "Ryzzen-Ragnaros",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [102417] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [224729] = {
        ["source"] = "Forsworn Champion",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 168420,
      },
      [6673] = {
        ["type"] = "BUFF",
        ["source"] = "Bravecrualty",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [236502] = {
        ["type"] = "BUFF",
        ["source"] = "Zénix",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [204262] = {
        ["type"] = "BUFF",
        ["source"] = "Fluuds",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [310143] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [77472] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [34914] = {
        ["type"] = "DEBUFF",
        ["source"] = "Cappilum",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [338804] = {
        ["type"] = "BUFF",
        ["source"] = "Terrorwing",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [321405] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [228318] = {
        ["type"] = "BUFF",
        ["source"] = "Forsworn Mender",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 163459,
      },
      [231390] = {
        ["type"] = "BUFF",
        ["source"] = "Headcolector",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [143625] = {
        ["type"] = "BUFF",
        ["source"] = "Mizzêr-TwistingNether",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [339324] = {
        ["type"] = "BUFF",
        ["source"] = "Damucless",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [131347] = {
        ["source"] = "Faylora",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [5394] = {
        ["source"] = "Shamanèn-Ragnaros",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [19801] = {
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [321422] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [691] = {
        ["source"] = "Xhool",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [2782] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [338825] = {
        ["type"] = "BUFF",
        ["source"] = "Soulofnature",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [61336] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [20473] = {
        ["source"] = "Damucless",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [271788] = {
        ["type"] = "DEBUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [50334] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [338321] = {
        ["type"] = "BUFF",
        ["source"] = "Ryzzen-Ragnaros",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [340880] = {
        ["type"] = "DEBUFF",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [27638] = {
        ["source"] = "Forsworn Stealthclaw",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 163506,
      },
      [187650] = {
        ["source"] = "Zigghunt",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [93985] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [117526] = {
        ["type"] = "DEBUFF",
        ["source"] = "Zigghunt",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [195072] = {
        ["source"] = "Jíne",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [768] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [196608] = {
        ["type"] = "BUFF",
        ["source"] = "Klexxi",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [314791] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [781] = {
        ["source"] = "Zigghunt",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [783] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [337824] = {
        ["type"] = "BUFF",
        ["source"] = "Damucless",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [196099] = {
        ["type"] = "BUFF",
        ["source"] = "Igwababa-Sanguino",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [8690] = {
        ["source"] = "Icypleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [21562] = {
        ["type"] = "BUFF",
        ["source"] = "Kyrania",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [338340] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [194310] = {
        ["type"] = "DEBUFF",
        ["source"] = "Fenemore-Stormscale",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [326059] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [85673] = {
        ["source"] = "Damucless",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [108446] = {
        ["type"] = "BUFF",
        ["source"] = "Arax-garath",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 58965,
      },
      [185358] = {
        ["source"] = "Zigghunt",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [22842] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [225788] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [160029] = {
        ["type"] = "DEBUFF",
        ["source"] = "Aldadrood",
        ["encounterID"] = 2358,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [232698] = {
        ["type"] = "BUFF",
        ["source"] = "Sibalica",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [117405] = {
        ["type"] = "DEBUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [186387] = {
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [203277] = {
        ["type"] = "BUFF",
        ["source"] = "Avisey",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [24858] = {
        ["type"] = "BUFF",
        ["source"] = "Hörje",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [5211] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [345530] = {
        ["type"] = "BUFF",
        ["source"] = "Zigghunt",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [116768] = {
        ["type"] = "BUFF",
        ["source"] = "Radioacvwolf",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [336832] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [213771] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [3714] = {
        ["type"] = "BUFF",
        ["source"] = "Frzzy",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [342466] = {
        ["type"] = "DEBUFF",
        ["source"] = "Manifestation of Pride",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 173729,
      },
      [101545] = {
        ["source"] = "Shayten",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [324046] = {
        ["type"] = "BUFF",
        ["source"] = "Oryphrion",
        ["encounterID"] = 2358,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 162060,
      },
      [307159] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["encounterID"] = 2358,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [188443] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [34477] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [307162] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [203285] = {
        ["type"] = "BUFF",
        ["source"] = "Luccifeer",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [345545] = {
        ["type"] = "BUFF",
        ["source"] = "Ichiryu",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [264689] = {
        ["type"] = "DEBUFF",
        ["source"] = "Hunterpart",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [307166] = {
        ["type"] = "BUFF",
        ["source"] = "Zigghunt",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [307682] = {
        ["source"] = "Skyggeland",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [317920] = {
        ["type"] = "BUFF",
        ["source"] = "Zamtøs",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [32216] = {
        ["type"] = "BUFF",
        ["source"] = "Tukerjerb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [188196] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [327648] = {
        ["source"] = "Forsworn Inquisitor",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 168418,
      },
      [108843] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [345561] = {
        ["type"] = "DEBUFF",
        ["source"] = "Azules",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 163077,
      },
      [66] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [323558] = {
        ["type"] = "BUFF",
        ["source"] = "Kidneydoctor",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [1064] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [323559] = {
        ["type"] = "BUFF",
        ["source"] = "Pavlo-Nathrezim",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [2139] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [257541] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [323560] = {
        ["type"] = "BUFF",
        ["source"] = "Pavlo-Nathrezim",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [254471] = {
        ["type"] = "BUFF",
        ["source"] = "Damaskar",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [327655] = {
        ["type"] = "BUFF",
        ["source"] = "Forsworn Champion",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 168420,
      },
      [53351] = {
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [307187] = {
        ["type"] = "BUFF",
        ["source"] = "Devilstatto-TwistingNether",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [289277] = {
        ["type"] = "BUFF",
        ["source"] = "Guksuk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [317936] = {
        ["source"] = "Forsworn Mender",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 163459,
      },
      [325101] = {
        ["type"] = "BUFF",
        ["source"] = "Steward",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 166663,
      },
      [321009] = {
        ["encounterID"] = 2357,
        ["source"] = "Kin-Tara",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 162059,
      },
      [307192] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [93622] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [77758] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [73920] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [317943] = {
        ["source"] = "Forsworn Vanguard",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 163457,
      },
      [331249] = {
        ["type"] = "DEBUFF",
        ["source"] = "Azules",
        ["encounterID"] = 2357,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 163077,
      },
      [334320] = {
        ["type"] = "BUFF",
        ["source"] = "Igwababa-Sanguino",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [48107] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [6795] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [2383] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [331251] = {
        ["type"] = "DEBUFF",
        ["source"] = "Azules",
        ["encounterID"] = 2357,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 163077,
      },
      [292360] = {
        ["type"] = "BUFF",
        ["source"] = "Mizzêr-TwistingNether",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [116014] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [292364] = {
        ["type"] = "BUFF",
        ["source"] = "Diégo",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [187698] = {
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [48108] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [119085] = {
        ["type"] = "BUFF",
        ["source"] = "Cupkavi",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [321536] = {
        ["source"] = "Zabalu",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [301578] = {
        ["source"] = "Hogger",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [324608] = {
        ["encounterID"] = 2358,
        ["source"] = "Oryphrion",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 162060,
      },
      [336891] = {
        ["type"] = "DEBUFF",
        ["source"] = "Jsun-Draenor",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [77762] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [317959] = {
        ["source"] = "Forsworn Castigator",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 163458,
      },
      [257044] = {
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [317963] = {
        ["source"] = "Forsworn Castigator",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 163458,
      },
      [77764] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [108853] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [325130] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [107574] = {
        ["type"] = "BUFF",
        ["source"] = "Gardenman",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [339461] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [328203] = {
        ["type"] = "BUFF",
        ["source"] = "Forsworn Helion",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 168681,
      },
      [330765] = {
        ["type"] = "BUFF",
        ["source"] = "Djfjunk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [192058] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [132951] = {
        ["type"] = "DEBUFF",
        ["source"] = "Forsworn Stealthclaw",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 163506,
      },
      [328210] = {
        ["type"] = "BUFF",
        ["source"] = "Shamnsoul",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [165961] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [197690] = {
        ["type"] = "BUFF",
        ["source"] = "Fittythent-DefiasBrotherhood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [36213] = {
        ["source"] = "Greater Earth Elemental",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 95072,
      },
      [324631] = {
        ["type"] = "BUFF",
        ["source"] = "Shamnsoul",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [1490] = {
        ["type"] = "DEBUFF",
        ["source"] = "Slyfe-Eredar",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [2983] = {
        ["type"] = "BUFF",
        ["source"] = "Asenn",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [190784] = {
        ["source"] = "Brittmarî",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [317985] = {
        ["source"] = "Forsworn Squad-Leader",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 163520,
      },
      [77130] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [341530] = {
        ["type"] = "BUFF",
        ["source"] = "Pavlo-Nathrezim",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [89158] = {
        ["source"] = "Huffledots",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [101568] = {
        ["type"] = "BUFF",
        ["source"] = "Reignor",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [160597] = {
        ["source"] = "Smorior",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [235313] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [225080] = {
        ["type"] = "DEBUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [127797] = {
        ["type"] = "DEBUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [324146] = {
        ["encounterID"] = 2356,
        ["source"] = "Ventunax",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 162058,
      },
      [3355] = {
        ["type"] = "DEBUFF",
        ["source"] = "Zigghunt",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [324148] = {
        ["encounterID"] = 2356,
        ["source"] = "Ventunax",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 162058,
      },
      [345130] = {
        ["encounterID"] = 2358,
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [6788] = {
        ["type"] = "DEBUFF",
        ["source"] = "Anison",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [324662] = {
        ["type"] = "DEBUFF",
        ["source"] = "Kin-Tara",
        ["encounterID"] = 2357,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 162059,
      },
      [325174] = {
        ["source"] = "Spirit Link Totem",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 53006,
      },
      [109248] = {
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [206151] = {
        ["type"] = "DEBUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [324154] = {
        ["type"] = "DEBUFF",
        ["source"] = "Ventunax",
        ["encounterID"] = 2356,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 162058,
      },
      [119996] = {
        ["source"] = "Khetty",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [192081] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [297037] = {
        ["type"] = "BUFF",
        ["source"] = "Vanishedww",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [1784] = {
        ["type"] = "BUFF",
        ["source"] = "Dubdebdab",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [212552] = {
        ["type"] = "BUFF",
        ["source"] = "Grìshna",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [20484] = {
        ["encounterID"] = 2358,
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [115008] = {
        ["source"] = "Cupkavi",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [182104] = {
        ["type"] = "BUFF",
        ["source"] = "Varresa",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [260402] = {
        ["type"] = "BUFF",
        ["source"] = "Zigghunt",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [342076] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [5277] = {
        ["type"] = "BUFF",
        ["source"] = "Pavlo-Nathrezim",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [1850] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [8679] = {
        ["type"] = "BUFF",
        ["source"] = "Stúndr",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [340546] = {
        ["type"] = "BUFF",
        ["source"] = "Mooglued-Stormscale",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [32223] = {
        ["type"] = "BUFF",
        ["source"] = "Karlssonpala",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [33917] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [223306] = {
        ["type"] = "BUFF",
        ["source"] = "Damucless",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [212048] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [192090] = {
        ["type"] = "DEBUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [325202] = {
        ["type"] = "BUFF",
        ["source"] = "Ryzzen-Ragnaros",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [318038] = {
        ["source"] = "Smorior",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [330323] = {
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [8004] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [324701] = {
        ["source"] = "Zigghunt",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [331866] = {
        ["source"] = "Elrmrs",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [197214] = {
        ["source"] = "Fluuds",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [331868] = {
        ["type"] = "BUFF",
        ["source"] = "Andybud",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [323682] = {
        ["source"] = "Forsworn Skirmisher",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 163501,
      },
      [328288] = {
        ["type"] = "BUFF",
        ["source"] = "Forsworn Warden",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 168718,
      },
      [207707] = {
        ["type"] = "BUFF",
        ["source"] = "Forsworn Vanguard",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 163457,
      },
      [281209] = {
        ["type"] = "BUFF",
        ["source"] = "Galiath-Dragonmaw",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [2120] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [133] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [109132] = {
        ["source"] = "Ssmonk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [328295] = {
        ["source"] = "Forsworn Warden",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 168718,
      },
      [345696] = {
        ["type"] = "BUFF",
        ["source"] = "Lunarist",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [135299] = {
        ["type"] = "DEBUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [139] = {
        ["type"] = "BUFF",
        ["source"] = "Inducira",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [324205] = {
        ["encounterID"] = 2356,
        ["source"] = "Ventunax",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 162058,
      },
      [108366] = {
        ["type"] = "BUFF",
        ["source"] = "Gnorcs",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [316531] = {
        ["source"] = "Icebby",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [335467] = {
        ["type"] = "DEBUFF",
        ["source"] = "Cappilum",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [192106] = {
        ["type"] = "BUFF",
        ["source"] = "Snottebel",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [90328] = {
        ["type"] = "BUFF",
        ["source"] = "Unknown",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 165189,
      },
      [329840] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [334448] = {
        ["type"] = "BUFF",
        ["source"] = "Lausac",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [336496] = {
        ["type"] = "BUFF",
        ["source"] = "Klotos",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 168843,
      },
      [190319] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [59638] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 31216,
      },
      [329849] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [2484] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [98008] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [327808] = {
        ["type"] = "BUFF",
        ["source"] = "Forsworn Squad-Leader",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 163520,
      },
      [324226] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [330368] = {
        ["type"] = "BUFF",
        ["source"] = "Jeft",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [345209] = {
        ["type"] = "DEBUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [345211] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [340094] = {
        ["type"] = "BUFF",
        ["source"] = "Belrain",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [80354] = {
        ["type"] = "DEBUFF",
        ["source"] = "Harmik",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [328837] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [113746] = {
        ["type"] = "DEBUFF",
        ["source"] = "Kennyføx-Ysondre",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [209261] = {
        ["type"] = "DEBUFF",
        ["source"] = "Däny-Zul'jin",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [257622] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [196980] = {
        ["type"] = "BUFF",
        ["source"] = "Dubdebdab",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [324748] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [8921] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [328331] = {
        ["source"] = "Forsworn Justicar",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 168717,
      },
      [137619] = {
        ["type"] = "DEBUFF",
        ["source"] = "Boinkstab-TarrenMill",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [343173] = {
        ["type"] = "BUFF",
        ["source"] = "Pavlo-Nathrezim",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [330380] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [332430] = {
        ["type"] = "DEBUFF",
        ["source"] = "Crucible Soulseeker",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 171179,
      },
      [871] = {
        ["type"] = "BUFF",
        ["source"] = "Gardenman",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [341291] = {
        ["type"] = "DEBUFF",
        ["source"] = "Amoxicilin-Draenor",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [310522] = {
        ["source"] = "Servicer",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [156779] = {
        ["type"] = "BUFF",
        ["source"] = "Succmytotem",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [79206] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["encounterID"] = 2358,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [280746] = {
        ["type"] = "BUFF",
        ["source"] = "Syver",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [118922] = {
        ["type"] = "BUFF",
        ["source"] = "Zigghunt",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [1953] = {
        ["type"] = "BUFF",
        ["source"] = "Cottonelius-Draenor",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [309534] = {
        ["source"] = "Mastah",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [345228] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [323802] = {
        ["type"] = "DEBUFF",
        ["source"] = "Slyfe-Eredar",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [192225] = {
        ["type"] = "BUFF",
        ["source"] = "Cispo-Stormscale",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [2908] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [240446] = {
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [257420] = {
        ["type"] = "BUFF",
        ["source"] = "Grìshna",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [323195] = {
        ["type"] = "DEBUFF",
        ["source"] = "Oryphrion",
        ["encounterID"] = 2358,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 162060,
      },
      [345230] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [340873] = {
        ["type"] = "BUFF",
        ["source"] = "Manifestation of Pride",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 173729,
      },
      [61305] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [345231] = {
        ["type"] = "BUFF",
        ["source"] = "Mspxx",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [2948] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [77761] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [321527] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [236060] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [323739] = {
        ["type"] = "DEBUFF",
        ["source"] = "Forsworn Squad-Leader",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 163520,
      },
      [57723] = {
        ["type"] = "DEBUFF",
        ["source"] = "Duttyxd",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [190336] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [323740] = {
        ["source"] = "Forsworn Squad-Leader",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 163520,
      },
      [51505] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [260242] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311459] = {
        ["type"] = "BUFF",
        ["source"] = "Targetdown",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [322101] = {
        ["source"] = "Shayten",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [116841] = {
        ["type"] = "BUFF",
        ["source"] = "Shayten",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [58875] = {
        ["type"] = "BUFF",
        ["source"] = "Fluuds",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [323744] = {
        ["type"] = "DEBUFF",
        ["source"] = "Forsworn Stealthclaw",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 163506,
      },
      [32612] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [257620] = {
        ["source"] = "Zigghunt",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [311464] = {
        ["type"] = "BUFF",
        ["source"] = "Snottebel",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [22812] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [35079] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311465] = {
        ["type"] = "BUFF",
        ["source"] = "Ogpurp",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [57724] = {
        ["type"] = "DEBUFF",
        ["source"] = "Bobmcpleb",
        ["encounterID"] = 2357,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [324260] = {
        ["type"] = "DEBUFF",
        ["source"] = "Arctusgodx-TwistingNether",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311467] = {
        ["type"] = "BUFF",
        ["source"] = "Thedeathsumn",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [327332] = {
        ["type"] = "BUFF",
        ["source"] = "Forsworn Mender",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 163459,
      },
      [11426] = {
        ["type"] = "BUFF",
        ["source"] = "Andybud",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [65081] = {
        ["type"] = "BUFF",
        ["source"] = "Anison",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311475] = {
        ["type"] = "BUFF",
        ["source"] = "Shuchi",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311471] = {
        ["type"] = "BUFF",
        ["source"] = "Léxx",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [77489] = {
        ["type"] = "BUFF",
        ["source"] = "Erindrin",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [287280] = {
        ["type"] = "BUFF",
        ["source"] = "Phyonex",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [53390] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311486] = {
        ["type"] = "BUFF",
        ["source"] = "Artìx",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311474] = {
        ["type"] = "BUFF",
        ["source"] = "Atomicmonk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [974] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [300728] = {
        ["source"] = "Elrmrs",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [10060] = {
        ["type"] = "BUFF",
        ["source"] = "Juaqo-Sanguino",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [345251] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [8936] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [248473] = {
        ["type"] = "BUFF",
        ["source"] = "Frostivy",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [774] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [321712] = {
        ["type"] = "DEBUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [308488] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [310454] = {
        ["type"] = "BUFF",
        ["source"] = "Klexxi",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [72968] = {
        ["type"] = "BUFF",
        ["source"] = "Smorior",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311478] = {
        ["type"] = "BUFF",
        ["source"] = "Ochá",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311479] = {
        ["type"] = "BUFF",
        ["source"] = "Ochá",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [342814] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [20572] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311480] = {
        ["type"] = "BUFF",
        ["source"] = "Soulofnature",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [334485] = {
        ["type"] = "BUFF",
        ["source"] = "Ventunax",
        ["encounterID"] = 2356,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 162058,
      },
      [311481] = {
        ["type"] = "BUFF",
        ["source"] = "Phyonex",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [320966] = {
        ["encounterID"] = 2357,
        ["source"] = "Kin-Tara",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 162059,
      },
      [327812] = {
        ["type"] = "BUFF",
        ["source"] = "Forsworn Squad-Leader",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 163520,
      },
      [323764] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [186257] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [330038] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311483] = {
        ["type"] = "BUFF",
        ["source"] = "Monaliza",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [41425] = {
        ["type"] = "DEBUFF",
        ["source"] = "Razzberri",
        ["encounterID"] = 2358,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311484] = {
        ["type"] = "BUFF",
        ["source"] = "Artìx",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [3408] = {
        ["type"] = "BUFF",
        ["source"] = "Stúndr",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [45438] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["encounterID"] = 2358,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311487] = {
        ["type"] = "BUFF",
        ["source"] = "Ssmonk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311488] = {
        ["type"] = "BUFF",
        ["source"] = "Baerik",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [51714] = {
        ["type"] = "DEBUFF",
        ["source"] = "Obliviôn-Zul'jin",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [315584] = {
        ["type"] = "BUFF",
        ["source"] = "Trippstar",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311492] = {
        ["type"] = "BUFF",
        ["source"] = "Cupkavi",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [290512] = {
        ["type"] = "DEBUFF",
        ["source"] = "Kennyføx-Ysondre",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311494] = {
        ["type"] = "BUFF",
        ["source"] = "Grìshna",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311495] = {
        ["type"] = "BUFF",
        ["source"] = "Jdaar",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [3600] = {
        ["type"] = "DEBUFF",
        ["source"] = "Earthbind Totem",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 2630,
      },
      [311497] = {
        ["type"] = "BUFF",
        ["source"] = "Headcolector",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [252216] = {
        ["type"] = "BUFF",
        ["source"] = "Suturer",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [323760] = {
        ["source"] = "Zabalu",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [341550] = {
        ["type"] = "BUFF",
        ["source"] = "Belrain",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [311498] = {
        ["type"] = "BUFF",
        ["source"] = "Jíne",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [5215] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [155722] = {
        ["type"] = "DEBUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [203407] = {
        ["type"] = "BUFF",
        ["source"] = "Dcass",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [56641] = {
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [87023] = {
        ["type"] = "DEBUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [186258] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [186265] = {
        ["type"] = "BUFF",
        ["source"] = "Zigghunt",
        ["encounterID"] = 2358,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [323786] = {
        ["source"] = "Kyrian Dark-Praetor",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 163524,
      },
      [308434] = {
        ["type"] = "BUFF",
        ["source"] = "Zigghunt",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [207400] = {
        ["type"] = "BUFF",
        ["source"] = "Shamnsoul",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [288477] = {
        ["type"] = "BUFF",
        ["source"] = "Wingbelf-Draenor",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [5487] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [324031] = {
        ["source"] = "Doronjo-TwistingNether",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [106839] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [328908] = {
        ["type"] = "BUFF",
        ["source"] = "Damucless",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [270058] = {
        ["type"] = "BUFF",
        ["source"] = "Lupalupa",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [323792] = {
        ["type"] = "DEBUFF",
        ["source"] = "Coalesced Anima",
        ["encounterID"] = 2358,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 165807,
      },
      [130] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [342309] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [330943] = {
        ["type"] = "BUFF",
        ["source"] = "Pavlo-Nathrezim",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [324739] = {
        ["source"] = "Brackitard",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [1044] = {
        ["type"] = "BUFF",
        ["source"] = "Maloumnik-Stormscale",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [154797] = {
        ["type"] = "BUFF",
        ["source"] = "Slydh",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [16591] = {
        ["type"] = "BUFF",
        ["source"] = "Gnorcs",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [55342] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [227723] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [196742] = {
        ["type"] = "BUFF",
        ["source"] = "Klexxi",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [17] = {
        ["type"] = "BUFF",
        ["source"] = "Anison",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [121557] = {
        ["type"] = "BUFF",
        ["source"] = "Goodscent",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [317661] = {
        ["source"] = "Etherdiver",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 163503,
      },
      [25771] = {
        ["type"] = "DEBUFF",
        ["source"] = "Zamtøs",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [147833] = {
        ["source"] = "Icebby",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [323804] = {
        ["source"] = "Kyrian Dark-Praetor",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 163524,
      },
      [87024] = {
        ["type"] = "DEBUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [347600] = {
        ["type"] = "BUFF",
        ["source"] = "Ntlsummon",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [54149] = {
        ["type"] = "BUFF",
        ["source"] = "Zamtøs",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [113942] = {
        ["type"] = "DEBUFF",
        ["source"] = "Méricless",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [121536] = {
        ["source"] = "Bigospriest-Draenor",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [337113] = {
        ["type"] = "DEBUFF",
        ["source"] = "Miamifukboi-TarrenMill",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [2823] = {
        ["type"] = "BUFF",
        ["source"] = "Maluria",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [331997] = {
        ["type"] = "DEBUFF",
        ["source"] = "Oryphrion",
        ["encounterID"] = 2358,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 162060,
      },
      [216251] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [8220] = {
        ["type"] = "BUFF",
        ["source"] = "Araine",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [307185] = {
        ["type"] = "BUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [147362] = {
        ["source"] = "Zigghunt",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [164273] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [260881] = {
        ["type"] = "BUFF",
        ["source"] = "Snottebel",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [11366] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [5761] = {
        ["type"] = "BUFF",
        ["source"] = "Johncooper",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [48265] = {
        ["type"] = "BUFF",
        ["source"] = "Jackogg",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [294133] = {
        ["type"] = "BUFF",
        ["source"] = "Kruistocht",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [292361] = {
        ["type"] = "BUFF",
        ["source"] = "Smorior",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [332514] = {
        ["type"] = "BUFF",
        ["source"] = "Valerrdk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [269571] = {
        ["type"] = "BUFF",
        ["source"] = "Woodzy",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [201633] = {
        ["type"] = "BUFF",
        ["source"] = "Earthen Wall Totem",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 100943,
      },
      [3411] = {
        ["source"] = "Icebby",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [334053] = {
        ["encounterID"] = 2358,
        ["source"] = "Oryphrion",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 162060,
      },
      [26297] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [342494] = {
        ["type"] = "DEBUFF",
        ["source"] = "Manifestation of Pride",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 173729,
      },
      [331497] = {
        ["type"] = "DEBUFF",
        ["source"] = "Slydh",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [269576] = {
        ["type"] = "DEBUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [19750] = {
        ["source"] = "Shuchi",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [308742] = {
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [115804] = {
        ["type"] = "DEBUFF",
        ["source"] = "Kennyføx-Ysondre",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [48778] = {
        ["type"] = "BUFF",
        ["source"] = "Grimjool",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [108271] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [34769] = {
        ["type"] = "BUFF",
        ["source"] = "Quelina",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [327164] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [261769] = {
        ["type"] = "BUFF",
        ["source"] = "Mokney",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [209746] = {
        ["type"] = "BUFF",
        ["source"] = "Frèddynqkken",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [2580] = {
        ["type"] = "BUFF",
        ["source"] = "Pakblueband",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [328435] = {
        ["type"] = "BUFF",
        ["source"] = "Klotos",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 168843,
      },
      [124009] = {
        ["type"] = "BUFF",
        ["source"] = "Xuen",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 63508,
      },
      [12654] = {
        ["type"] = "DEBUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [327416] = {
        ["type"] = "BUFF",
        ["source"] = "Forsworn Goliath",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 168318,
      },
      [339187] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [196840] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [322301] = {
        ["source"] = "Lombrak",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [333049] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [61295] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [287504] = {
        ["type"] = "BUFF",
        ["source"] = "Mokney",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [187827] = {
        ["type"] = "BUFF",
        ["source"] = "Géodiash-Archimonde",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [52127] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [210053] = {
        ["type"] = "BUFF",
        ["source"] = "Anme",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [202602] = {
        ["type"] = "BUFF",
        ["source"] = "Ieet",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [280398] = {
        ["type"] = "BUFF",
        ["source"] = "Goodscent",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [43308] = {
        ["type"] = "BUFF",
        ["source"] = "Zamtøs",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [328275] = {
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [324867] = {
        ["type"] = "BUFF",
        ["source"] = "Shamnsoul",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [281195] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [328231] = {
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [260243] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [2645] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [327942] = {
        ["type"] = "BUFF",
        ["source"] = "Windfury Totem",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 6112,
      },
      [347901] = {
        ["type"] = "BUFF",
        ["source"] = "Colnas",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [298837] = {
        ["type"] = "BUFF",
        ["source"] = "Atomicmonk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [157128] = {
        ["type"] = "BUFF",
        ["source"] = "Zamtøs",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [212653] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [198837] = {
        ["source"] = "Risen Skulker",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 99541,
      },
      [315496] = {
        ["type"] = "BUFF",
        ["source"] = "Johncooper",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [253595] = {
        ["type"] = "BUFF",
        ["source"] = "Valerrdk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [198838] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [324368] = {
        ["encounterID"] = 2357,
        ["source"] = "Azules",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 163077,
      },
      [157131] = {
        ["type"] = "DEBUFF",
        ["source"] = "Zamtøs",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [345863] = {
        ["type"] = "BUFF",
        ["source"] = "Servicer",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [2825] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["encounterID"] = 2357,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [308506] = {
        ["type"] = "BUFF",
        ["source"] = "Vorpk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [5672] = {
        ["type"] = "BUFF",
        ["source"] = "Healing Stream Totem",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 3527,
      },
      [157644] = {
        ["type"] = "BUFF",
        ["source"] = "Razzberri",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [57994] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [108280] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [16979] = {
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [31884] = {
        ["type"] = "BUFF",
        ["source"] = "Damucless",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [202636] = {
        ["type"] = "BUFF",
        ["source"] = "Pakovo",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [21169] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [109304] = {
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [1459] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [116011] = {
        ["source"] = "Razzberri",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [196741] = {
        ["type"] = "BUFF",
        ["source"] = "Shayten",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [343312] = {
        ["type"] = "BUFF",
        ["source"] = "Slydh",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [370] = {
        ["source"] = "Bobmcpleb",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [308514] = {
        ["type"] = "BUFF",
        ["source"] = "Faylora",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [164812] = {
        ["type"] = "DEBUFF",
        ["source"] = "Aldadrood",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [330366] = {
        ["type"] = "BUFF",
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [52174] = {
        ["source"] = "Icebby",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [198839] = {
        ["type"] = "BUFF",
        ["source"] = "Earthen Wall Totem",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 100943,
      },
      [19434] = {
        ["source"] = "Snipetuzk",
        ["event"] = "SPELL_CAST_SUCCESS",
        ["npcID"] = 0,
      },
      [115191] = {
        ["type"] = "BUFF",
        ["source"] = "Belrain",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [307495] = {
        ["type"] = "BUFF",
        ["source"] = "Bobmcpleb",
        ["encounterID"] = 2357,
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
      [290608] = {
        ["type"] = "BUFF",
        ["source"] = "Harmik",
        ["event"] = "SPELL_AURA_APPLIED",
        ["npcID"] = 0,
      },
    },
    ["aura_frame1_anchor"] = {
      ["y"] = 16,
      ["side"] = 9,
    },
    ["aura_timer_text_font"] = "Gilroy Bold",
    ["aura_show_important"] = false,
    ["extra_icon_stack_font"] = "Gilroy Bold",
    ["aura_height"] = 15,
    ["cast_statusbar_bgtexture"] = "REEEE",
    ["aura2_x_offset"] = -2,
    ["target_indicator"] = "NONE",
    ["aura_show_buff_by_the_unit"] = false,
    ["saved_cvars"] = {
      ["ShowClassColorInNameplate"] = "1",
      ["nameplateOverlapV"] = "0.79999995231628",
      ["ShowNamePlateLoseAggroFlash"] = "1",
      ["nameplateShowEnemyMinus"] = "1",
      ["NamePlateClassificationScale"] = "1",
      ["nameplateShowFriendlyTotems"] = "0",
      ["nameplatePersonalHideDelaySeconds"] = "0.2",
      ["nameplateShowFriendlyPets"] = "0",
      ["nameplatePersonalShowInCombat"] = "1",
      ["nameplatePersonalShowWithTarget"] = "0",
      ["nameplateResourceOnTarget"] = "0",
      ["nameplateShowAll"] = "1",
      ["nameplateMaxDistance"] = "100",
      ["nameplateShowFriendlyMinions"] = "0",
      ["nameplateSelfScale"] = "1",
      ["nameplateShowEnemies"] = "1",
      ["NamePlateVerticalScale"] = "1",
      ["nameplateShowSelf"] = "0",
      ["nameplatePersonalShowAlways"] = "0",
      ["nameplateMotionSpeed"] = "0.025",
      ["nameplateGlobalScale"] = "1",
      ["nameplateShowEnemyMinions"] = "0",
      ["nameplateShowFriendlyNPCs"] = "1",
      ["nameplateSelectedScale"] = "1",
      ["nameplateShowFriends"] = "0",
      ["nameplateMotion"] = "1",
      ["nameplateMinScale"] = "1",
      ["nameplateOtherTopInset"] = "0.08",
      ["nameplateSelfBottomInset"] = "0.2",
      ["nameplateShowFriendlyGuardians"] = "0",
      ["NamePlateHorizontalScale"] = "1",
      ["nameplateOccludedAlphaMult"] = "0.40281981229782",
      ["nameplateSelfTopInset"] = "0.5",
      ["nameplateSelfAlpha"] = "1",
    },
    ["login_counter"] = 7979,
    ["extra_icon_caster_name"] = false,
    ["aura_cooldown_show_swipe"] = false,
    ["aura_stack_font"] = "Gilroy Bold",
    ["hide_friendly_castbars"] = true,
    ["OptionsPanelDB"] = {
      ["PlaterOptionsPanelFrame"] = {
        ["scale"] = 1,
      },
    },
    ["aura_timer_text_shadow_color"] = {
      nil, -- [1]
      nil, -- [2]
      nil, -- [3]
      0, -- [4]
    },
    ["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator6",
    ["aura_stack_anchor"] = {
      ["y"] = -5,
    },
    ["plate_config"] = {
      ["global_health_height"] = 13,
      ["friendlyplayer"] = {
        ["spellpercent_text_font"] = "Gilroy Bold",
        ["show_guild_name"] = true,
        ["only_thename"] = true,
        ["only_damaged"] = false,
        ["cast"] = {
          120, -- [1]
        },
        ["percent_text_show_decimals"] = false,
        ["actorname_text_font"] = "Gilroy Bold",
        ["cast_incombat"] = {
          120, -- [1]
        },
        ["level_text_font"] = "Gilroy Bold",
        ["spellname_text_font"] = "Gilroy Bold",
        ["actorname_text_size"] = 8,
        ["actorname_use_guild_color"] = false,
        ["level_text_alpha"] = 0.29999998211861,
        ["actorname_text_spacing"] = 7,
        ["percent_text_font"] = "Gilroy Bold",
        ["percent_show_percent"] = false,
        ["health_incombat"] = {
          120, -- [1]
          13, -- [2]
        },
        ["health"] = {
          120, -- [1]
          13, -- [2]
        },
        ["actorname_use_friends_color"] = false,
        ["actorname_use_class_color"] = true,
      },
      ["friendlynpc"] = {
        ["spellpercent_text_font"] = "Gilroy Bold",
        ["cast"] = {
          120, -- [1]
        },
        ["level_text_font"] = "Gilroy Bold",
        ["actorname_text_font"] = "Gilroy Bold",
        ["actorname_text_spacing"] = 9,
        ["big_actortitle_text_font"] = "Gilroy Bold",
        ["spellname_text_font"] = "Gilroy Bold",
        ["level_text_alpha"] = 0.29999998211861,
        ["percent_text_font"] = "Gilroy Bold",
        ["health_incombat"] = {
          nil, -- [1]
          13, -- [2]
        },
        ["health"] = {
          120, -- [1]
          13, -- [2]
        },
        ["big_actorname_text_font"] = "Gilroy Bold",
      },
      ["global_health_width"] = 120,
      ["enemyplayer"] = {
        ["big_actorname_text_size"] = 10,
        ["spellpercent_text_font"] = "Gilroy Bold",
        ["level_text_size"] = 8,
        ["cast"] = {
          120, -- [1]
          13, -- [2]
        },
        ["percent_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["spellpercent_text_anchor"] = {
          ["x"] = -1,
        },
        ["percent_text_show_decimals"] = false,
        ["spellname_text_outline"] = "OUTLINE",
        ["big_actorname_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["level_text_font"] = "Gilroy Bold",
        ["percent_text_color"] = {
          1, -- [1]
          1, -- [2]
          1, -- [3]
        },
        ["actorname_text_font"] = "Gilroy Bold",
        ["all_names"] = true,
        ["actorname_text_outline"] = "OUTLINE",
        ["actorname_text_spacing"] = 7,
        ["quest_color_enemy"] = {
          1, -- [1]
          0.369, -- [2]
          0, -- [3]
        },
        ["big_actortitle_text_font"] = "Gilroy Bold",
        ["spellpercent_text_size"] = 8,
        ["level_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["level_text_anchor"] = {
          ["y"] = -5,
          ["x"] = 2,
        },
        ["cast_incombat"] = {
          nil, -- [1]
          13, -- [2]
        },
        ["actorname_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["spellname_text_anchor"] = {
          ["x"] = 2,
          ["side"] = 10,
        },
        ["percent_text_anchor"] = {
          ["side"] = 11,
        },
        ["spellname_text_font"] = "Gilroy Bold",
        ["quest_color_neutral"] = {
          1, -- [1]
          0.65, -- [2]
          0, -- [3]
        },
        ["actorname_text_size"] = 8,
        ["big_actorname_text_font"] = "Gilroy Bold",
        ["level_text_outline"] = "OUTLINE",
        ["castbar_offset"] = -1,
        ["actorname_text_anchor"] = {
          ["x"] = 2,
          ["side"] = 10,
        },
        ["big_actortitle_text_size"] = 10,
        ["percent_text_font"] = "Gilroy Bold",
        ["quest_enabled"] = true,
        ["spellname_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0.75424699485302, -- [4]
        },
        ["health_incombat"] = {
          nil, -- [1]
          13, -- [2]
        },
        ["health"] = {
          120, -- [1]
          13, -- [2]
        },
        ["level_text_alpha"] = 1,
        ["spellname_text_size"] = 8,
        ["spellpercent_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0.75969998538494, -- [4]
        },
        ["percent_show_health"] = false,
        ["level_text_enabled"] = false,
      },
      ["enemynpc"] = {
        ["spellpercent_text_font"] = "Gilroy Bold",
        ["cast"] = {
          120, -- [1]
          13, -- [2]
        },
        ["spellpercent_text_anchor"] = {
          ["x"] = -1,
        },
        ["big_actorname_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["level_text_font"] = "Gilroy Bold",
        ["percent_text_color"] = {
          1, -- [1]
          1, -- [2]
          1, -- [3]
        },
        ["actorname_text_font"] = "Gilroy Bold",
        ["actorname_text_outline"] = "OUTLINE",
        ["actorname_text_spacing"] = 7,
        ["big_actortitle_text_font"] = "Gilroy Bold",
        ["spellpercent_text_size"] = 8,
        ["level_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["level_text_anchor"] = {
          ["y"] = -5,
          ["x"] = 2,
        },
        ["cast_incombat"] = {
          nil, -- [1]
          13, -- [2]
        },
        ["actorname_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["spellname_text_anchor"] = {
          ["x"] = 2,
          ["side"] = 10,
        },
        ["percent_text_anchor"] = {
          ["side"] = 11,
        },
        ["spellname_text_font"] = "Gilroy Bold",
        ["actorname_text_size"] = 8,
        ["castbar_offset"] = -1,
        ["big_actorname_text_font"] = "Gilroy Bold",
        ["level_text_outline"] = "OUTLINE",
        ["percent_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["percent_text_show_decimals"] = false,
        ["level_text_alpha"] = 1,
        ["percent_text_size"] = 8,
        ["percent_text_font"] = "Gilroy Bold",
        ["percent_show_percent"] = false,
        ["spellname_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0.75424699485302, -- [4]
        },
        ["health_incombat"] = {
          nil, -- [1]
          13, -- [2]
        },
        ["health"] = {
          120, -- [1]
          13, -- [2]
        },
        ["percent_show_health"] = false,
        ["actorname_text_anchor"] = {
          ["x"] = 2,
          ["side"] = 10,
        },
        ["spellname_text_size"] = 8,
        ["spellpercent_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0.75969998538494, -- [4]
        },
        ["level_text_enabled"] = false,
      },
    },
    ["aura_y_offset"] = 16,
    ["focus_texture"] = "REEEE",
    ["cast_statusbar_bgcolor"] = {
      nil, -- [1]
      nil, -- [2]
      nil, -- [3]
      1, -- [4]
    },
    ["cast_statusbar_use_fade_effects"] = false,
    ["border_thickness"] = 0.49999997019768,
    ["indicator_scale"] = 0.99999994039536,
    ["npc_colors"] = {
      [133944] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [130635] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [150169] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [167965] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [127111] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [131818] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [165251] = {
        true, -- [1]
        false, -- [2]
        "blue", -- [3]
      },
      [170490] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [136470] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [133835] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [134232] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [163458] = {
        false, -- [1]
        false, -- [2]
        "white", -- [3]
      },
      [134137] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [164506] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [165919] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [134058] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [131677] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [150251] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [136297] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [173016] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [163126] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [150712] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [139425] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [165222] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [170572] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [166524] = {
        true, -- [1]
        false, -- [2]
        "white", -- [3]
      },
      [168318] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [166302] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [164921] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [129788] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [134251] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [141284] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [135204] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [139284] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [134629] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [130025] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [136186] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [134284] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [168572] = {
        true, -- [1]
        false, -- [2]
        "blue", -- [3]
      },
      [135474] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [174210] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [131850] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [134364] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [131586] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [164414] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [133870] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [168718] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [165414] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [131666] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [135365] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [167111] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [131587] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [127488] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [131492] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [130655] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [130028] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [171799] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [150146] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [131318] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [168942] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [166275] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [165529] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [122972] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [134990] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [127486] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [122969] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [169927] = {
        true, -- [1]
        false, -- [2]
        "blue", -- [3]
      },
      [130661] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [166276] = {
        true, -- [1]
        false, -- [2]
        "blue", -- [3]
      },
      [168578] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [168594] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [131812] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [164562] = {
        true, -- [1]
        false, -- [2]
        "blue", -- [3]
      },
      [164451] = {
        true, -- [1]
        false, -- [2]
        "white", -- [3]
      },
      [137478] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [171341] = {
        true, -- [1]
        false, -- [2]
        "white", -- [3]
      },
      [167967] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [136076] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [122973] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [133432] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [168627] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [162039] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [165872] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [151657] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [150276] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [134417] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [170882] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [168420] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [167612] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [138187] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [131670] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [128434] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [139949] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [134418] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [171772] = {
        true, -- [1]
        false, -- [2]
        "white", -- [3]
      },
      [126919] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [139800] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [133593] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [162057] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [134514] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [165137] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [134174] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [144295] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [163459] = {
        true, -- [1]
        false, -- [2]
        "lightskyblue", -- [3]
      },
      [150297] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [130026] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [129547] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [144294] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [166299] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [133912] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
      [129367] = {
        true, -- [1]
        false, -- [2]
        "violet", -- [3]
      },
    },
    ["hook_data"] = {
      {
        ["Enabled"] = false,
        ["Revision"] = 56,
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Author"] = "Kastfall-Azralon",
        ["Options"] = {
        },
        ["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
        ["Hooks"] = {
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
        },
        ["Prio"] = 99,
        ["Name"] = "Color Automation [Plater]",
        ["PlaterCore"] = 1,
        ["LastHookEdited"] = "Constructor",
        ["Time"] = 1609606751,
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
      }, -- [1]
      {
        ["Enabled"] = false,
        ["Revision"] = 45,
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "",
        ["Author"] = "Izimode-Azralon",
        ["PlaterCore"] = 1,
        ["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
        ["Hooks"] = {
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
        },
        ["Time"] = 1549937733,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["Options"] = {
        },
        ["Name"] = "Don't Have Aura [Plater]",
        ["Icon"] = 136207,
        ["HooksTemp"] = {
        },
      }, -- [2]
      {
        ["Enabled"] = false,
        ["Revision"] = 180,
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Author"] = "Tecno-Azralon",
        ["Options"] = {
        },
        ["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
        ["Hooks"] = {
          ["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
          ["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
          ["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
        },
        ["Name"] = "Extra Border [Plater]",
        ["PlaterCore"] = 1,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["Time"] = 1558091544,
        ["Icon"] = 133689,
        ["LastHookEdited"] = "Constructor",
      }, -- [3]
      {
        ["Enabled"] = false,
        ["Revision"] = 56,
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Author"] = "Kastfall-Azralon",
        ["Options"] = {
        },
        ["Desc"] = "Script for Stormwall Blockade encounter on Battle for Dazzar'alor",
        ["Hooks"] = {
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
        },
        ["Name"] = "Stormwall Encounter [Plater]",
        ["PlaterCore"] = 1,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
            ["1"] = 2280,
            ["Enabled"] = true,
          },
          ["spec"] = {
          },
        },
        ["Time"] = 1558030400,
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_stormwall_blockade",
        ["LastHookEdited"] = "Constructor",
      }, -- [4]
      {
        ["Enabled"] = false,
        ["Revision"] = 73,
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "",
        ["Author"] = "Izimode-Azralon",
        ["PlaterCore"] = 1,
        ["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
        ["Hooks"] = {
          ["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
          ["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
          ["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
          ["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
        },
        ["Time"] = 1541606242,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["Options"] = {
        },
        ["Name"] = "Hide Neutral Units [Plater]",
        ["Icon"] = 1990989,
        ["HooksTemp"] = {
        },
      }, -- [5]
      {
        ["Enabled"] = false,
        ["Revision"] = 474,
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Author"] = "Kastfall-Azralon",
        ["Options"] = {
        },
        ["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
        ["Hooks"] = {
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
          ["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\n    if(envTable.HowlingWindsCast and envTable._SpellID == envTable.HowlingWindsSpellID) then\n        unitFrame.healthBar.unitName:SetPoint(\"BOTTOM\", unitFrame.healthBar, \"TOP\", 0 , 18)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n",
          ["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --move Jaina's name out from under her castbar durring winds\n    envTable.HowlingWindsCast = false\n    envTable.HowlingWindsSpellID = 288199 --12058-- (debug)\n    envTable.HowlingWindsNameYOffset = 10\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
          ["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\n    if(envTable.HowlingWindsCast and envTable._SpellID == envTable.HowlingWindsSpellID) then\n        unitFrame.healthBar.unitName:SetPoint(\"TOP\", unitFrame.healthBar, \"BOTTOM\", 0 , -36)\n    end\nend\n\n\n\n\n",
        },
        ["Prio"] = 99,
        ["Name"] = "Jaina Encounter [Plater]",
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["LastHookEdited"] = "Constructor",
        ["Time"] = 1582894443,
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
        ["PlaterCore"] = 1,
      }, -- [6]
      {
        ["Enabled"] = false,
        ["Revision"] = 89,
        ["Options"] = {
        },
        ["LastHookEdited"] = "Constructor",
        ["Author"] = "Ahwa-Azralon",
        ["OptionsValues"] = {
        },
        ["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
        ["Hooks"] = {
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
        },
        ["Prio"] = 99,
        ["Time"] = 1582894699,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["HooksTemp"] = {
        },
        ["Name"] = "Execute Range [Plater]",
        ["Icon"] = 135358,
        ["PlaterCore"] = 1,
      }, -- [7]
      {
        ["Enabled"] = false,
        ["Revision"] = 223,
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "Constructor",
        ["Author"] = "Kastfall-Azralon",
        ["PlaterCore"] = 1,
        ["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
        ["Hooks"] = {
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        },
        ["Time"] = 1553102867,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["Options"] = {
        },
        ["Name"] = "Attacking Specific Unit [Plater]",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
        ["HooksTemp"] = {
        },
      }, -- [8]
      {
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "",
        ["Hooks"] = {
          ["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
        },
        ["Time"] = 1596791840,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["url"] = "",
        ["Icon"] = 574574,
        ["Enabled"] = false,
        ["Revision"] = 93,
        ["semver"] = "",
        ["Author"] = "Kastfall-Azralon",
        ["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
        ["version"] = -1,
        ["PlaterCore"] = 1,
        ["Name"] = "Reorder Nameplate [Plater]",
        ["HooksTemp"] = {
        },
        ["Options"] = {
        },
      }, -- [9]
      {
        ["Enabled"] = false,
        ["Revision"] = 38,
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Author"] = "Izimode-Azralon",
        ["Options"] = {
        },
        ["Desc"] = "Tint nameplates of Reaping Soul units (Mythic Dungeon Affix) depending on its target and role of the player",
        ["Hooks"] = {
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
        },
        ["Name"] = "M+ Bwonsamdi Reaping",
        ["PlaterCore"] = 1,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
            ["Enabled"] = true,
            ["party"] = true,
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
            ["Enabled"] = true,
            ["117"] = true,
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["Time"] = 1558030389,
        ["Icon"] = 2446016,
        ["LastHookEdited"] = "Constructor",
      }, -- [10]
      {
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "",
        ["Hooks"] = {
          ["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
          ["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
          ["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
          ["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
          ["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
          ["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
        },
        ["Time"] = 1603567332,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
            ["Enabled"] = true,
            ["DRUID"] = true,
            ["ROGUE"] = true,
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
            ["103"] = true,
            ["Enabled"] = true,
          },
        },
        ["url"] = "",
        ["Icon"] = 135426,
        ["Enabled"] = false,
        ["Revision"] = 254,
        ["semver"] = "",
        ["Author"] = "Izimode-Azralon",
        ["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
        ["version"] = -1,
        ["PlaterCore"] = 1,
        ["Name"] = "Combo Points [Plater]",
        ["HooksTemp"] = {
        },
        ["Options"] = {
        },
      }, -- [11]
      {
        ["Enabled"] = false,
        ["Revision"] = 182,
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Author"] = "Izimode-Azralon",
        ["Options"] = {
        },
        ["Desc"] = "Show how many raid members are targeting the unit",
        ["Hooks"] = {
          ["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
          ["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
          ["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
          ["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
        },
        ["Name"] = "Players Targeting a Target [Plater]",
        ["PlaterCore"] = 1,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["Time"] = 1548278227,
        ["Icon"] = 1966587,
        ["LastHookEdited"] = "",
      }, -- [12]
      {
        ["Enabled"] = false,
        ["Revision"] = 101,
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "Constructor",
        ["Author"] = "Izimode-Azralon",
        ["PlaterCore"] = 1,
        ["Desc"] = "Changes the target color to the color set in the constructor script.",
        ["Hooks"] = {
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
          ["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)--rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
        },
        ["Time"] = 1558097070,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["Options"] = {
        },
        ["Name"] = "Current Target Color [Plater]",
        ["Icon"] = 878211,
        ["HooksTemp"] = {
        },
      }, -- [13]
      {
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "",
        ["Hooks"] = {
          ["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        },
        ["Time"] = 1608663128,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
        ["Enabled"] = false,
        ["Revision"] = 356,
        ["semver"] = "",
        ["Author"] = "Ditador-Azralon",
        ["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
        ["version"] = -1,
        ["PlaterCore"] = 1,
        ["Name"] = "Aura Reorder [Plater]",
        ["HooksTemp"] = {
        },
        ["Options"] = {
        },
      }, -- [14]
      {
        ["Enabled"] = true,
        ["Revision"] = 173,
        ["Options"] = {
        },
        ["LastHookEdited"] = "",
        ["Author"] = "Izimode-Azralon",
        ["OptionsValues"] = {
        },
        ["Desc"] = "Adds a pixels perfect border around the cast bar.",
        ["Hooks"] = {
          ["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
          ["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
          ["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = .5\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        --castBar:SetPoint(unitFrame.healthBar, \"TOP\", 0, -10)\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \n    --create thee border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end\n    \nend\n\n\n\n\n\n\n",
        },
        ["Prio"] = 99,
        ["Time"] = 1609688813,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["HooksTemp"] = {
        },
        ["Name"] = "Cast Bar Border",
        ["Icon"] = 133004,
        ["PlaterCore"] = 1,
      }, -- [15]
      {
        ["Enabled"] = false,
        ["Revision"] = 106,
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Author"] = "Aldarana-Kazzak",
        ["Desc"] = "",
        ["Hooks"] = {
          ["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.BuffFrame:SetPoint(\"CENTER\",buffNoComat,0);\n    unitFrame.BuffFrame2:SetPoint(\"CENTER\",buff2NoComat,0);\nend",
          ["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.BuffFrame:SetPoint(\"CENTER\",buffNoComat,0);\n    unitFrame.BuffFrame2:SetPoint(\"CENTER\",buff2NoComat,0);\nend\n\n\n",
          ["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.BuffFrame:SetPoint(\"CENTER\",buffComat,0);\n    unitFrame.BuffFrame2:SetPoint(\"CENTER\",buff2Comat,0);\nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --X offsets for aura frames\n    buffNoCombat = 0;\n    buffCombat = 0;\n    \n    buff2NoCombat = 0;\n    buff2Combat = 0;\nend",
        },
        ["Time"] = 1558030403,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["Options"] = {
        },
        ["PlaterCore"] = 1,
        ["Name"] = "Aura Positioning",
        ["LastHookEdited"] = "Constructor",
      }, -- [16]
      {
        ["Enabled"] = true,
        ["Revision"] = 106,
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Author"] = "?????-Illidan",
        ["Options"] = {
        },
        ["Desc"] = "Format Buff Special icons like the regular aura icons.",
        ["Hooks"] = {
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --    if false then return end\n    \n    for _, iconFrame in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        \n        unitFrame.ExtraIconFrame.options.show_text = true\n        \n        local profile = Plater.db.profile\n        \n        Plater.SetAnchor (iconFrame.CountdownText, profile.aura_timer_text_anchor)\n        Plater:SetFontSize (iconFrame.CountdownText, 11)\n        Plater:SetFontFace (iconFrame.CountdownText, profile.aura_timer_text_font)\n        \n        Plater.SetFontOutlineAndShadow (iconFrame.CountdownText, profile.aura_timer_text_outline, profile.aura_timer_text_shadow_color, profile.aura_timer_text_shadow_color_offset[1], profile.aura_timer_text_shadow_color_offset[2])\n        \n        iconFrame.Cooldown:SetEdgeTexture (profile.aura_cooldown_edge_texture)\n        iconFrame.Cooldown:SetReverse (profile.aura_cooldown_reverse)\n        iconFrame.Cooldown:SetDrawSwipe (profile.aura_cooldown_show_swipe)        \n        \n    end\n    \nend",
        },
        ["Prio"] = 99,
        ["Name"] = "Buff Special Mod",
        ["PlaterCore"] = 1,
        ["LastHookEdited"] = "",
        ["Time"] = 1609688761,
        ["Icon"] = 136139,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
      }, -- [17]
      {
        ["Enabled"] = true,
        ["Revision"] = 163,
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Author"] = "Ditador-Azralon",
        ["Options"] = {
        },
        ["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
        ["Hooks"] = {
          ["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
          ["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"right\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 1\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset-.5)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, -1)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
        },
        ["Prio"] = 99,
        ["Name"] = "Cast Icon Anchor",
        ["PlaterCore"] = 1,
        ["LastHookEdited"] = "",
        ["Time"] = 1609613366,
        ["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
      }, -- [18]
      {
        ["Enabled"] = true,
        ["Revision"] = 36,
        ["Options"] = {
        },
        ["HooksTemp"] = {
        },
        ["Author"] = "Aldarana-Kazzak",
        ["Desc"] = "Because for some reason there's no setting for this.",
        ["Hooks"] = {
          ["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    levelTextColor(unitFrame)\nend",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.levelColor = {255,245,105} --rgb\n    \n    function levelTextColor(unitFrame)\n        local r,g,b = unpack(envTable.levelColor)\n        unitFrame.healthBar.actorLevel:SetTextColor(r/255, g/255, b/255)\n    end\nend",
        },
        ["Prio"] = 99,
        ["Time"] = 1609688813,
        ["PlaterCore"] = 1,
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "",
        ["Name"] = "Level Text Color",
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
      }, -- [19]
      {
        ["Enabled"] = false,
        ["Revision"] = 143,
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Author"] = "Ahwa-Azralon",
        ["Options"] = {
        },
        ["Desc"] = "Adds extra effects to execute range and allow to setup two execute ranges for classes with execute when the unit has almost full healh. See the constructor script for options.",
        ["Hooks"] = {
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = true\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --second execute range (UseCustomExecutePercent must be enabled)\n    envTable.SecondRangeStart = 0.999\n    envTable.SecondRangeEnd = 0.8\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"purple\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame, divisorPercent)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n        \n        if (percent <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame, envTable.ExecutePercent)\n            envTable.InExecuteRange = true\n            \n        elseif (percent < envTable.SecondRangeStart and percent >= envTable.SecondRangeEnd) then\n            envTable.UnitInExecuteRange (unitFrame, envTable.SecondRangeEnd)\n            envTable.InExecuteRange = true\n            \n        else\n            if (envTable.InExecuteRange) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                Plater.RefreshNameplateColor (unitFrame)\n                Plater.SetBorderColor (unitFrame)\n                envTable.InExecuteRange = false\n            end\n        end\n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        },
        ["Prio"] = 99,
        ["Name"] = "Advanced Execute Range",
        ["PlaterCore"] = 1,
        ["LastHookEdited"] = "",
        ["Time"] = 1609607008,
        ["Icon"] = 135358,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
      }, -- [20]
      {
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "",
        ["Hooks"] = {
          ["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
          ["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
        },
        ["Time"] = 1597097268,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
        ["Enabled"] = false,
        ["Revision"] = 348,
        ["semver"] = "",
        ["Author"] = "Ditador-Azralon",
        ["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
        ["version"] = -1,
        ["PlaterCore"] = 1,
        ["Name"] = "Cast Bar Icon Settings [P]",
        ["HooksTemp"] = {
        },
        ["Options"] = {
          {
            ["Type"] = 5,
            ["Key"] = "option4",
            ["Value"] = "Icon Settings:",
            ["Name"] = "Icon Settings",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 4,
            ["Key"] = "showIcon",
            ["Value"] = true,
            ["Name"] = "Show Icon",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Show the castbar icon when enabled",
          }, -- [2]
          {
            ["Type"] = 4,
            ["Key"] = "iconOnLeftSide",
            ["Value"] = true,
            ["Name"] = "Icon on Left Side",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Key"] = "useFullSize",
            ["Value"] = false,
            ["Name"] = "Use Big Icon",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
          }, -- [4]
          {
            ["Type"] = 2,
            ["Max"] = 5,
            ["Desc"] = "Fine tune the icon size",
            ["Min"] = 0,
            ["Key"] = "iconSizeOffset",
            ["Value"] = 0,
            ["Name"] = "Icon Size Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [5]
          {
            ["Type"] = 2,
            ["Max"] = 5,
            ["Desc"] = "Space between the icon and the cast bar",
            ["Min"] = -5,
            ["Key"] = "iconPadding",
            ["Value"] = 0,
            ["Name"] = "Icon Padding",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [6]
          {
            ["Type"] = 6,
            ["Key"] = "option6",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 5,
            ["Key"] = "option5",
            ["Value"] = "Can't Interrupt Texture:",
            ["Name"] = "Interrupt Texture",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 4,
            ["Key"] = "showTexture",
            ["Value"] = true,
            ["Name"] = "Show Texture",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
          }, -- [9]
          {
            ["Type"] = 3,
            ["Key"] = "iconTexturePath",
            ["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
            ["Name"] = "Texture Path",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
            ["Desc"] = "Insert the path for the texture",
          }, -- [10]
          {
            ["Type"] = 4,
            ["Key"] = "desaturatedTexture",
            ["Value"] = true,
            ["Name"] = "Texture Desaturated",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "If enbaled, texture is shown in black & white",
          }, -- [11]
          {
            ["Type"] = 1,
            ["Key"] = "textureColor",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              0.30567157268524, -- [4]
            },
            ["Name"] = "Texture Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Select the color of the texture",
          }, -- [12]
          {
            ["Type"] = 2,
            ["Max"] = 32,
            ["Desc"] = "Adjust the texture width",
            ["Min"] = 1,
            ["Key"] = "textureWidth",
            ["Value"] = 10,
            ["Name"] = "Texture Width",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [13]
          {
            ["Type"] = 2,
            ["Max"] = 16,
            ["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
            ["Min"] = -16,
            ["Key"] = "textureHeightMod",
            ["Value"] = 0,
            ["Name"] = "Texture Height Mod",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [14]
          {
            ["Type"] = 2,
            ["Max"] = 32,
            ["Desc"] = "Adjust the texture position",
            ["Min"] = -32,
            ["Key"] = "texturePosition",
            ["Value"] = 0,
            ["Name"] = "Texture Position",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [15]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Adjust the texture transparency",
            ["Min"] = 0,
            ["Key"] = "textureAlpha",
            ["Value"] = 1,
            ["Name"] = "Texture Alpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [16]
        },
      }, -- [21]
      {
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Hooks"] = {
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n",
        },
        ["Time"] = 1609688812,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["url"] = "https://wago.io/id_wRWfKp/2",
        ["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
        ["Enabled"] = true,
        ["Revision"] = 45,
        ["semver"] = "1.0.1",
        ["Author"] = "Kastfall-Azralon",
        ["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
        ["Prio"] = 98,
        ["version"] = 2,
        ["PlaterCore"] = 1,
        ["Name"] = "Force Threat Color",
        ["LastHookEdited"] = "",
        ["Options"] = {
        },
      }, -- [22]
      {
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Hooks"] = {
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
          ["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetDisabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"] -- use threat colors if you are tank without aggro or dps with aggro\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    \n    -- you can replace any color text line with 'nil' to skip this mark from being colored, e.g.:    nil, --star \n    modTable.ColorByMark = {\n        nil, --star\n        nil, --circle\n        nil, --diamond\n        nil, --triangle\n        nil, --moon\n        nil, --square\n        nil, --cross\n        nil, --skull\n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        --[\"elite\"] = \"darkgoldenrod\",\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    modTable.NpcColors = {\n        \n        --[126682] = modTable.config[\"t1Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t2Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t3Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = \"#ff8200\", --\"Saltfin Swimmer\"\n        --[126682] = \"hotpink\", --\"Saltfin Swimmer\"\n        --[126682] = \"deeppink\", --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Saltfin Swimmer\"\n        \n        --Affix NPCs:\n        --[161124] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Urg'roth, Breaker of Heroes\"\n        \n        -- t3 mobs - light red\n        [164506] = modTable.config[\"t3Mobs\"],\n        [162691] = modTable.config[\"t3Mobs\"],\n        [163524] = modTable.config[\"t3Mobs\"],\n        [165824] = modTable.config[\"t3Mobs\"],\n        [169893] = modTable.config[\"t3Mobs\"],\n        [169927] = modTable.config[\"t3Mobs\"],\n        [168446] = modTable.config[\"t3Mobs\"],\n        [165197] = modTable.config[\"t3Mobs\"],\n        [173447] = modTable.config[\"t3Mobs\"],\n        [163619] = modTable.config[\"t3Mobs\"],\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        -- explosives\n        [120651] = \"#ff8200\", --\"Fel Explosive\"\n        [120651] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Fel Explosive\"\n        [174773] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, -- \"Spideful Shade\"\n        \n        -- important - dark blue\n        [170490] = modTable.config[\"t1Mobs\"],\n        [170572] = modTable.config[\"t1Mobs\"],\n        [174197] = modTable.config[\"t1Mobs\"],\n        [174210] = modTable.config[\"t1Mobs\"],\n        [170882] = modTable.config[\"t1Mobs\"],\n        [163126] = modTable.config[\"t1Mobs\"],\n        [173016] = modTable.config[\"t1Mobs\"],\n        [166302] = modTable.config[\"t1Mobs\"],\n        [165529] = modTable.config[\"t1Mobs\"],\n        [165414] = modTable.config[\"t1Mobs\"],\n        [164921] = modTable.config[\"t1Mobs\"],\n        [163458] = modTable.config[\"t1Mobs\"],\n        [168420] = modTable.config[\"t1Mobs\"],\n        [168418] = modTable.config[\"t1Mobs\"],\n        [163459] = modTable.config[\"t1Mobs\"],\n        [168718] = modTable.config[\"t1Mobs\"],\n        [165076] = modTable.config[\"t1Mobs\"],\n        [167965] = modTable.config[\"t1Mobs\"],\n        [160495] = modTable.config[\"t1Mobs\"],\n        [166275] = modTable.config[\"t1Mobs\"],\n        [166299] = modTable.config[\"t1Mobs\"],\n        [166396] = modTable.config[\"t1Mobs\"],\n        [168627] = modTable.config[\"t1Mobs\"],\n        [164414] = modTable.config[\"t1Mobs\"],\n        [172265] = modTable.config[\"t1Mobs\"],\n        [168992] = modTable.config[\"t1Mobs\"],\n        [163891] = modTable.config[\"t1Mobs\"],\n        [173044] = modTable.config[\"t1Mobs\"],\n        [167612] = modTable.config[\"t1Mobs\"],\n        [167493] = modTable.config[\"t1Mobs\"],\n        [162049] = modTable.config[\"t1Mobs\"],\n        [162039] = modTable.config[\"t1Mobs\"],\n        [165222] = modTable.config[\"t1Mobs\"],\n        [163128] = modTable.config[\"t1Mobs\"],\n        [168357] = modTable.config[\"t1Mobs\"],\n        \n        \n        \n        \n        \n        \n        -- semi important - light blue\n        [166589] = modTable.config[\"t2Mobs\"],\n        [171343] = modTable.config[\"t2Mobs\"],\n        [163894] = modTable.config[\"t2Mobs\"],\n        [168942] = modTable.config[\"t2Mobs\"],\n        [163882] = modTable.config[\"t2Mobs\"],\n        [163862] = modTable.config[\"t2Mobs\"],\n        [164562] = modTable.config[\"t2Mobs\"],\n        [171799] = modTable.config[\"t2Mobs\"],\n        [170690] = modTable.config[\"t2Mobs\"],\n        [164266] = modTable.config[\"t2Mobs\"],\n        [164185] = modTable.config[\"t2Mobs\"],\n        [162103] = modTable.config[\"t2Mobs\"],\n        [165872] = modTable.config[\"t2Mobs\"],\n        [168658] = modTable.config[\"t2Mobs\"],\n        [168318] = modTable.config[\"t2Mobs\"],\n        [168717] = modTable.config[\"t2Mobs\"],\n        [163520] = modTable.config[\"t2Mobs\"],\n        [168572] = modTable.config[\"t2Mobs\"],\n        [162317] = modTable.config[\"t2Mobs\"],\n        [163621] = modTable.config[\"t2Mobs\"],\n        [162040] = modTable.config[\"t2Mobs\"],\n        [167536] = modTable.config[\"t2Mobs\"],\n        [171376] = modTable.config[\"t2Mobs\"],\n        [169861] = modTable.config[\"t2Mobs\"],\n        [167876] = modTable.config[\"t2Mobs\"],\n        [162047] = modTable.config[\"t2Mobs\"],\n        [172981] = modTable.config[\"t2Mobs\"],\n        [174175] = modTable.config[\"t2Mobs\"],\n        [165430] = modTable.config[\"t2Mobs\"],\n        [166276] = modTable.config[\"t2Mobs\"],\n        [165946] = modTable.config[\"t2Mobs\"],\n        [162744] = modTable.config[\"t2Mobs\"],\n        [168393] = modTable.config[\"t2Mobs\"],\n        [168396] = modTable.config[\"t2Mobs\"],\n        [167998] = modTable.config[\"t2Mobs\"],\n        [170850] = modTable.config[\"t2Mobs\"],\n        [163086] = modTable.config[\"t2Mobs\"],\n        [162038] = modTable.config[\"t2Mobs\"],\n        [169905] = modTable.config[\"t2Mobs\"],\n        [163620] = modTable.config[\"t2Mobs\"],\n        [164510] = modTable.config[\"t2Mobs\"],\n        [164557] = modTable.config[\"t2Mobs\"],\n        [165919] = modTable.config[\"t2Mobs\"],\n        [167111] = modTable.config[\"t2Mobs\"],\n        [163121] = modTable.config[\"t2Mobs\"],\n        [167607] = modTable.config[\"t2Mobs\"],\n        [162689] = modTable.config[\"t2Mobs\"],\n        [164292] = modTable.config[\"t2Mobs\"],\n        [168886] = modTable.config[\"t2Mobs\"],\n        [165137] = modTable.config[\"t2Mobs\"],\n        [163618] = modTable.config[\"t2Mobs\"],\n        [168443] = modTable.config[\"t2Mobs\"],\n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame then return end\n        \n        if modTable.useThreatColors then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    --Plater.UpdatePlateText (unitFrame.PlateFrame, Plater.db.profile.plate_config[unitFrame.ActorType], false)\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (plateFrame.unitFrame [MEMBER_UNITID])\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend",
          ["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n\n\n\n\n",
        },
        ["Time"] = 1609713840,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["url"] = "https://wago.io/UKpo0_GbE/25",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
        ["Enabled"] = true,
        ["Revision"] = 753,
        ["semver"] = "1.2.2",
        ["Author"] = "Viash-Thrall",
        ["Desc"] = "Color the nameplates of important m+ mobs",
        ["Prio"] = 98,
        ["version"] = 25,
        ["PlaterCore"] = 1,
        ["Name"] = "M+ Colored Mobs",
        ["LastHookEdited"] = "",
        ["Options"] = {
          {
            ["Type"] = 5,
            ["Key"] = "option1",
            ["Value"] = "NPC Colors:",
            ["Name"] = "Option 1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 1,
            ["Key"] = "t1Mobs",
            ["Value"] = {
              0, -- [1]
              0.086274509803922, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Most Important:",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Most important mobs, usually focus targets (regular interrupts / stuns needed, etc.)",
          }, -- [2]
          {
            ["Type"] = 1,
            ["Key"] = "t2Mobs",
            ["Value"] = {
              0, -- [1]
              0.81960784313725, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Semi Important",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Semi important mobs, interrupts / stuns necessary, keep an eye out!",
          }, -- [3]
          {
            ["Type"] = 1,
            ["Key"] = "t3Mobs",
            ["Value"] = {
              1, -- [1]
              0.59607843137255, -- [2]
              0.51372549019608, -- [3]
              1, -- [4]
            },
            ["Name"] = "Less Important:",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
          }, -- [4]
          {
            ["Type"] = 6,
            ["Key"] = "option6",
            ["Value"] = 0,
            ["Name"] = "Option 6",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 4,
            ["Key"] = "explosivesEnabled",
            ["Value"] = true,
            ["Name"] = "Color Explosives",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 1,
            ["Key"] = "explosivesColor",
            ["Value"] = {
              1, -- [1]
              0.4, -- [2]
              0.70196078431373, -- [3]
              1, -- [4]
            },
            ["Name"] = "Explosives Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 6,
            ["Key"] = "option9",
            ["Value"] = 0,
            ["Name"] = "Option 9",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 4,
            ["Key"] = "s4Enabled",
            ["Value"] = true,
            ["Name"] = "Color M+ Affix NPCs",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "\"M+ Affix NPCs\"",
          }, -- [9]
          {
            ["Type"] = 1,
            ["Key"] = "s4Color",
            ["Value"] = {
              1, -- [1]
              0.070588235294118, -- [2]
              0.56862745098039, -- [3]
              1, -- [4]
            },
            ["Name"] = "M+ Affix NPCs Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "\"M+ Affix NPCs\"",
          }, -- [10]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "Option 18",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [11]
          {
            ["Type"] = 4,
            ["Key"] = "targetEnabled",
            ["Value"] = true,
            ["Name"] = "Use Target Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [12]
          {
            ["Type"] = 1,
            ["Key"] = "targetColor",
            ["Value"] = {
              0.27058823529412, -- [1]
              0.50980392156863, -- [2]
              0.70196078431373, -- [3]
              1, -- [4]
            },
            ["Name"] = "Target Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [13]
          {
            ["Type"] = 4,
            ["Key"] = "ignoreTargetOnPlayers",
            ["Value"] = false,
            ["Name"] = "Ignore Target Color on Players",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [14]
          {
            ["Type"] = 6,
            ["Key"] = "option21",
            ["Value"] = 0,
            ["Name"] = "Option 21",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [15]
          {
            ["Type"] = 4,
            ["Key"] = "focusEnabled",
            ["Value"] = true,
            ["Name"] = "Use Focus Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [16]
          {
            ["Type"] = 1,
            ["Key"] = "focusColor",
            ["Value"] = {
              1, -- [1]
              0.49019607843137, -- [2]
              0.30980392156863, -- [3]
              1, -- [4]
            },
            ["Name"] = "Focus Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [17]
          {
            ["Type"] = 5,
            ["Key"] = "option26",
            ["Value"] = "Additional Options:",
            ["Name"] = "Additional Options:",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [18]
          {
            ["Type"] = 4,
            ["Key"] = "colorHealthbar",
            ["Value"] = true,
            ["Name"] = "Color Healthbar",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [19]
          {
            ["Type"] = 4,
            ["Key"] = "colorName",
            ["Value"] = false,
            ["Name"] = "Color Name",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [20]
          {
            ["Type"] = 4,
            ["Key"] = "raidMarkColors",
            ["Value"] = true,
            ["Name"] = "Raid Mark Colors",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [21]
          {
            ["Type"] = 4,
            ["Key"] = "threatColors",
            ["Value"] = false,
            ["Name"] = "Use Threat Colors",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
          }, -- [22]
          {
            ["Type"] = 4,
            ["Key"] = "rareEnabled",
            ["Value"] = true,
            ["Name"] = "Color Rares",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [23]
        },
      }, -- [23]
      {
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Hooks"] = {
          ["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)    \n    \nend\n\n\n",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)\n    \nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    envTable.ShowMaxHealth = false\n    envTable.ShowPercent = true\n    envTable.Separator = \" - \"\n    \n    --privite:\n    function envTable.UpdateHealth (unitFrame)\n        --get the health and health max current values\n        local currentHealth = unitFrame.healthBar.CurrentHealth or 0\n        local currentHealthMax = unitFrame.healthBar.CurrentHealthMax or 0\n        \n        --build the string text with current health\n        local healthString = Plater.FormatNumber (currentHealth) .. \"\"\n        \n        --if is showing max health, add it in the health string text\n        if (envTable.ShowMaxHealth) then\n            healthString = healthString .. envTable.Separator .. Plater.FormatNumber (currentHealthMax)\n        end\n        \n        --if is showing the percent text, add it into the string text\n        if (envTable.ShowPercent) then\n            local percent = currentHealth / currentHealthMax * 100\n            local fraction = \"%.0f\"\n            \n            if (percent <= 100) then\n                fraction = \"%.0f\"\n            end\n            \n            if (envTable.ShowMaxHealth) then\n                healthString = healthString .. \" (\" .. format (fraction, percent) \n            else\n                healthString = healthString .. envTable.Separator .. format (fraction, percent) \n            end\n        end\n        \n        --set the string text\n        unitFrame.healthBar.lifePercent:SetText (healthString)\n    end\n    \nend",
        },
        ["Time"] = 1609688801,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["url"] = "",
        ["Icon"] = 237031,
        ["Enabled"] = true,
        ["Revision"] = 125,
        ["semver"] = "",
        ["Author"] = "Izimode-Azralon",
        ["Desc"] = "Show the total health and percent in the health amount text. See the constructor code to change options.",
        ["Prio"] = 99,
        ["version"] = -1,
        ["PlaterCore"] = 1,
        ["Name"] = "Health / Max Health (%)",
        ["LastHookEdited"] = "",
        ["Options"] = {
        },
      }, -- [24]
      {
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Hooks"] = {
          ["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.healthBar.TargetBorder) then\n        unitFrame.healthBar.TargetBorder:Hide()\n    end\nend",
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
          ["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border options\n    local borderSize = 0.8\n    local borderColor = \"white\"\n    \n    if (not unitFrame.healthBar.TargetBorder) then\n        unitFrame.healthBar.TargetBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n    end\n    \n    function envTable.UpdateBorder (unitFrame)\n        if (UnitIsUnit (\"target\", unitFrame.unit)) then               \n            local r, g, b, a = DetailsFramework:ParseColors (borderColor)\n            unitFrame.healthBar.TargetBorder:SetVertexColor (r, g, b, a)\n            \n            unitFrame.healthBar.TargetBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n            unitFrame.healthBar.TargetBorder:UpdateSizes()            \n            \n            unitFrame.healthBar.TargetBorder:Show()\n        else\n            unitFrame.healthBar.TargetBorder:Hide()\n        end\n    end\nend",
        },
        ["Time"] = 1608585773,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["url"] = "https://wago.io/g3hpjQ_EX/1",
        ["Icon"] = 134400,
        ["Enabled"] = false,
        ["Revision"] = 142,
        ["semver"] = "1.0.0",
        ["Author"] = "Izimode-Azralon",
        ["Desc"] = "",
        ["Prio"] = 99,
        ["version"] = 1,
        ["PlaterCore"] = 1,
        ["Name"] = "Target Border",
        ["LastHookEdited"] = "Constructor",
        ["Options"] = {
        },
      }, -- [25]
      {
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Hooks"] = {
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local whitelist = {\n        [144747] = true, -- pakus-aspect\n        [144767] = true, -- gonks-aspect\n        [144963] = true, -- kimbuls-aspect\n        [144941] = true, -- akundas-aspect\n        [148894] = true, -- lost-soul\n        [148716] = true, -- risen-soul\n        [148893] = true, -- tormented-soul\n        [135989] = true, -- shieldbearer-of-zul\n        [127879] = true, -- shieldbearer-of-zul\n        [131527] = true, -- lord-waycrest\n        [131545] = true, -- lady-waycrest\n        [131863] = true, -- raal\n        [144324] = true, -- gorak-tul\n        [127484] = true, -- jes-howlis\n        [130655] = true, -- bobby-howlis\n        [155432] = true, -- enchanted-emissary\n        [155433] = true, -- void-touched-emissary\n        [135764] = true, -- explosive-totem\n        [135761] = true, -- thundering-totem\n        [135765] = true, -- torrent-totem\n        [135759] = true, -- earthwall-totem\n        [151658] = true, -- strider-tonk\n        [151657] = true, -- bomb-tonk\n        [151659] = true, -- rocket-tonk\n        [157614] = true, -- tentacle-of-drest-agath\n        [157613] = true, -- maw-of-drest-agath\n        [157612] = true, -- eye-of-drest-agath\n    }\n    \n    local plateFrame = C_NamePlate.GetNamePlateForUnit (unitId)\n    \n    if plateFrame and not whitelist[unitFrame.namePlateNpcId] then\n        local unitName = plateFrame.namePlateUnitName:gsub('(%S+) ', function (t) return t:sub(1, 1) .. ' ' end)\n        local nameTble = { strsplit(' ', unitName) }\n        \n        unitName = table.remove(nameTble)\n        if #nameTble then\n            unitName = table.concat(nameTble, '') .. ' ' .. unitName\n        end\n        \n        unitFrame.healthBar.unitName:SetText(unitName)  \n    end\nend",
        },
        ["Time"] = 1609688383,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["url"] = "https://wago.io/rqHMsURrq/2",
        ["Icon"] = 134331,
        ["Enabled"] = true,
        ["Revision"] = 209,
        ["semver"] = "1.0.1",
        ["Author"] = "Izimode-Azralon",
        ["Desc"] = "Show Last Name only.",
        ["Prio"] = 99,
        ["version"] = 2,
        ["PlaterCore"] = 1,
        ["Name"] = "Last Name Only",
        ["LastHookEdited"] = "",
        ["Options"] = {
        },
      }, -- [26]
      {
        ["OptionsValues"] = {
          ["showNpcId"] = false,
          ["showUnitId"] = false,
        },
        ["HooksTemp"] = {
        },
        ["Hooks"] = {
          ["Name Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- clear cached info so that it's recalculated\n    unitFrame.origName = nil\n    modTable.cache[unitId] = nil\n    \n    envTable.updateName(unitId, unitFrame, modTable, true)\n    \nend",
          ["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    unitFrame.origName = nil\n    modTable.cache[unitId] = nil\n    \nend\n\n\n",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.updateName(unitId, unitFrame, modTable, false)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
          ["Initialization"] = "function (modTable)\n    \n    -- override takes the highest priority; by default all council-style bosses are filled in\n    -- (this allows you to have shortened names for those fights but turn on full names for all other bosses)\n    modTable.override = {\n        -- Shadowlands Season 1\n        \n        -- De Other Side\n        [164556] = \"Millhouse\", -- Millhouse Manastorm\n        [164555] = \"Millificent\", -- Millificent Manastorm\n        \n        -- Halls of Atonement\n        \n        -- Mists of Tirna Scithe\n        \n        -- Plaguefall\n        \n        -- Sanguine Depths\n        \n        -- Spires of Ascension\n        \n        -- The Necrotic Wake\n        \n        -- Theater of Pain\n        [164451] = \"Dessia\", -- Dessia the Decapitator\n        [164463] = \"Paceran\", -- Paceran the Virulent\n        [164461] = \"Sathel\", -- Sathel the Accursed\n        [164464] = \"Xira\", -- Xira the Underhanded\n        [165946] = \"Mordretha\", -- Mordretha, the Endless Empress (name too damn long)\n    }\n    \n    -- manual is used for enemies where the final word of their name isn't the important one\n    modTable.manual = {\n        -- Shadowlands Season 1\n        \n        -- De Other Side\n        [167964] = \"Dog\", -- 4.RF-4.RF\n        [165905] = \"Son\", -- Son of Hakkar\n        [170488] = \"Son\", -- Son of Hakkar (boss add?)\n        [171184] = \"Mythresh\", -- Mythresh, Sky's Talons\n        [164556] = \"Millhouse\", -- Millhouse Manastorm\n        [164555] = \"Millificent\", -- Millificent Manastorm\n        [164558] = \"Hakkar\", -- Hakkar the Soulflayer\n        \n        -- Halls of Atonement\n        [164557] = \"Shard\", -- Shard of Halkias\n        \n        -- Mists of Tirna Scithe\n        \n        -- Plaguefall\n        [163862] = \"Defender\", -- Defender of Many Eyes\n        [173360] = \"Belcher\", -- Plaguebelcher\n        [168396] = \"Belcher\", -- Plaguebelcher\n        [168627] = \"Binder\", -- Plaguebinder\n        [168580] = \"Borer\", -- Plagueborer\n        [168878] = \"Rigged Borer\", -- Rigged Plagueborer\n        [168891] = \"Rigged Borer\", -- Rigged Plagueborer\n        [168153] = \"Roc\", -- Plagueroc\n        [168310] = \"Roc\", -- Plagueroc\n        [164707] = \"Congealed Slime\", -- Congealed Slime\n        [165010] = \"Congealed Slime\", -- Congealed Slime\n        [164705] = \"Pestilence Slime\", -- Pestilence Slime\n        [165357] = \"Pestilence Slime\", -- Pestilence Slime\n        [163891] = \"Rotmarrow Slime\", -- Rotmarrow Slime\n        [164552] = \"Rotmarrow Slime\", -- Rotmarrow Slime\n        [168969] = \"Gushing Slime\", -- Gushing Slime\n        [170927] = \"Erupting Ooze\", -- Erupting Ooze\n        [170021] = \"Gushing Ooze\", -- Gushing Ooze\n        [164550] = \"Slithering Ooze\", -- Slithering Ooze\n        [174856] = \"Slithering Ooze\", -- Slithering Ooze\n        [168886] = \"Virulax\", -- Virulax Blightweaver\n        [169861] = \"Ickor\", -- Ickor Bileflesh\n        \n        -- Sanguine Depths\n        [172265] = \"Remnant\", -- Remnant of Fury\n        [165076] = \"Gluttonous\", -- Gluttonous Tick (in contrast, Famished Ticks will be labelled \"Tick\")\n        [162100] = \"Kryxis\", -- Kryxis the Voracious\n        \n        -- Spires of Ascension\n        [163524] = \"Praetor\", -- Kyrian Dark-Praetor\n        \n        -- The Necrotic Wake\n        [165138] = \"Blight Bag\", -- Blight Bag\n        [166264] = \"Spare Parts\", -- Spare Parts\n        [166266] = \"Spare Parts\", -- Spare Parts\n        [167731] = \"Separation\", -- Separation Assistant\n        [173044] = \"Stitching\", -- Stitching Assistant\n        [162693] = \"Nalthor\", -- Nalthor the Rimebinder\n        \n        -- Theater of Pain\n        [162744] = \"Nekthara\", -- Nekthara the Mangler\n        [167538] = \"Dokigg\", -- Dokigg the Brutalizer\n        [167536] = \"Harugia\", -- Harugia the Bloodthirsty\n        [167532] = \"Heavin\", -- Heavin the Breaker\n        [167534] = \"Rek\", -- Rek the Hardened\n        [167533] = \"Advent\", -- Advent Nevermore\n        [164451] = \"Dessia\", -- Dessia the Decapitator\n        [164463] = \"Paceran\", -- Paceran the Virulent\n        [164461] = \"Sathel\", -- Sathel the Accursed\n        [165946] = \"Mordretha\", -- Mordretha, the Endless Empress\n    }\n    \n    local hide = 1\n    local lieutenant = 2\n    local miniboss = 3\n    local boss = 4\n    \n    modTable.hide = hide\n    modTable.lieutenant = lieutenant\n    modTable.miniboss = miniboss\n    modTable.boss = boss\n    \n    modTable.bosses = {\n        -- Shadowlands Season 1\n        [173729] = miniboss, -- Manifestation of Pride\n        \n        -- De Other Side\n        [167966] = hide, -- Frogger Slimes\n        [167964] = lieutenant, -- 4.RF-4.RF\n        [170572] = lieutenant, -- Atal'ai Hoodoo Hexxer (?)\n        [171343] = lieutenant, -- Bladebeak Matriarch (?)\n        [168942] = lieutenant, -- Death Speaker (?)\n        [167962] = lieutenant, -- Defunct Dental Drill\n        [168934] = lieutenant, -- Enraged Spirit\n        [169905] = lieutenant, -- Risen Warlord\n        [171184] = miniboss, -- Mythresh, Sky's Talons\n        [164558] = boss, -- Hakkar the Soulflayer\n        [164556] = boss, -- Millhouse Manastorm\n        [164555] = boss, -- Millificent Manastorm\n        [164450] = boss, -- Dealer Xy'exa\n        [166608] = boss, -- Mueh'zala\n        \n        -- Halls of Atonement\n        [164557] = lieutenant, -- Shard of Halkias\n        [174175] = lieutenant, -- Loyal Stoneborn\n        [167612] = lieutenant, -- Stoneborn Reaver\n        [167607] = lieutenant, -- Stoneborn Slasher\n        [167876] = miniboss, -- Inquisitor Sigar\n        [165408] = boss, -- Halkias, the Sin-Stained Goliath\n        [164185] = boss, -- Echelon\n        [165410] = boss, -- High Adjudicator Aleez\n        [164218] = boss, -- Lord Chamberlain\n        \n        -- Mists of Tirna Scithe\n        [164926] = lieutenant, -- Drust Boughbreaker\n        [167111] = lieutenant, -- Spinemaw Staghorn (?)\n        [164929] = lieutenant, -- Tirnenn Villager\n        [173655] = miniboss, -- Mistveil Matriarch\n        [173720] = miniboss, -- Mistveil Gorgegullet\n        [173714] = miniboss, -- Mistveil Nightblossom\n        [164567] = boss, -- Ingra Maloch\n        [164804] = boss, -- Droman Oulfarran\n        [164501] = boss, -- Mistcaller\n        [164517] = boss, -- Tred'ova\n        \n        -- Plaguefall\n        [163894] = lieutenant, -- Blighted Spinebreaker\n        [163882] = lieutenant, -- Decaying Flesh Giant\n        [168393] = lieutenant, -- Plaguebelcher\n        [168396] = lieutenant, -- Plaguebelcher\n        [168153] = lieutenant, -- Plagueroc\n        [168886] = miniboss, -- Virulax Blightweaver\n        [169861] = miniboss, -- Ickor Bileflesh\n        [164255] = boss, -- Globgrog\n        [164967] = boss, -- Doctor Ickus\n        [164266] = boss, -- Domina Venomblade\n        [164267] = boss, -- Margrave Stradama\n        \n        -- Sanguine Depths\n        [162057] = lieutenant, -- Chamber Sentinel\n        [171799] = lieutenant, -- Depths Warden\n        [162040] = lieutenant, -- Grand Overseer\n        [162047] = lieutenant, -- Insatiable Brute\n        [162038] = lieutenant, -- Regal Mistdancer\n        [171376] = miniboss, -- Head Custodian Javlin\n        [162100] = boss, -- Kryxis the Voracious\n        [162103] = boss, -- Executor Tarvold\n        [162102] = boss, -- Grand Proctor Beryllia\n        [162099] = boss, -- General Kaal (hallway)\n        [162133] = boss, -- General Kaal (boss)\n        \n        -- Spires of Ascension\n        [168425] = lieutenant, -- Forsworn Annihilator\n        [168658] = lieutenant, -- Forsworn Devastator\n        [168318] = lieutenant, -- Forsworn Goliath\n        [168681] = lieutenant, -- Forsworn Helion\n        [163520] = lieutenant, -- Forsworn Squad-Leader\n        [168845] = miniboss, -- Astronos\n        [168843] = miniboss, -- Klotos\n        [168844] = miniboss, -- Lakesis\n        [162059] = boss, -- Kin-Tara\n        [163077] = lieutenant, -- Azules (Kin-Tara's etherwyrm)\n        [162058] = boss, -- Ventunax\n        [162060] = boss, -- Oryphiron\n        [162061] = boss, -- Devos, Paragon of Doubt\n        \n        -- The Necrotic Wake\n        [165137] = lieutenant, -- Zolramus Gatekeeper\n        [167731] = lieutenant, -- Separation Assistant\n        [173044] = lieutenant, -- Stitching Assistant\n        [165919] = lieutenant, -- Skeletal Marauder\n        [172981] = lieutenant, -- Kyrian Stitchwerk\n        [164578] = lieutenant, -- Stitchflesh's Creation\n        [165824] = miniboss, -- Nar'zudah\n        [165197] = miniboss, -- Skeletal Monstrosity\n        [163621] = miniboss, -- Goregrind\n        [163620] = miniboss, -- Rotspew\n        [162691] = boss, -- Blightbone\n        [163157] = boss, -- Amarth, The Harvester\n        [162689] = boss, -- Surgeon Stitchflesh\n        [162693] = boss, -- Nalthor the Rimebinder\n        \n        -- Theater of Pain\n        [170850] = lieutenant, -- Raging Bloodhorn\n        [163086] = lieutenant, -- Rancid Gasbag\n        [167998] = lieutenant, -- Portal Guardian\n        [162763] = lieutenant, -- Soulforged Bonereaver\n        [169893] = lieutenant, -- Nefarious Darkspeaker\n        [162744] = miniboss, -- Nekthara the Mangler\n        [167538] = miniboss, -- Dokigg the Brutalizer\n        [167536] = miniboss, -- Harugia the Bloodthirsty\n        [167532] = miniboss, -- Heavin the Breaker\n        [167534] = miniboss, -- Rek the Hardened\n        [167533] = miniboss, -- Advent Nevermore\n        [164451] = boss, -- Dessia the Decapitator (An Affront of Challengers)\n        [164463] = boss, -- Paceran the Virulent (An Affront of Challengers)\n        [164461] = boss, -- Sathel the Accursed (An Affront of Challengers)\n        [164464] = boss, -- Xira the Underhanded (An Affront of Challengers)\n        [162317] = boss, -- Gorechop\n        [162329] = boss, -- Xav the Unfallen\n        [162309] = boss, -- Kul'Tharok\n        [165946] = boss, -- Mordretha, the Endless Empress\n        \n        -- Castle Nathria\n        [164406] = boss, -- Shriekwing\n        [165066] = boss, -- Huntsman Altimor\n        [165067] = lieutenant, -- Margore\n        [169457] = lieutenant, -- Bargast\n        [169458] = lieutenant, -- Hecutis\n        [164261] = boss, -- Hungering Destroyer\n        [165521] = boss, -- Lady Inerva Darkvein\n        [168973] = miniboss, -- High Torturer Darithos\n        [165805] = miniboss, -- Shade of Kael'Thas\n        [166644] = boss, -- Artificer Xy'mox\n        [166970] = boss, -- Lord Stavros\n        [166969] = boss, -- Baroness Frieda\n        [166971] = boss, -- Castellan Niklaus\n        [164407] = boss, -- Sludgefist\n        [168112] = boss, -- General Kaal\n        [168113] = boss, -- General Grashaal\n        [167406] = boss, -- Sire Denathrius\n        [168156] = miniboss, -- Remornia\n        \n        -- Testing (Kyrian training dummies)\n        [154585] = lieutenant, -- Valiant's Resolve\n        [154580] = lieutenant, -- Reinforced Guardian\n        [154583] = miniboss, -- Stalwart Guardian\n        [154586] = boss, -- Stalwart Phalanx\n    }\n    \n    function modTable.isBoss(id)\n        return modTable.bosses[id] == modTable.boss\n    end\n    \n    function modTable.isMiniboss(id)\n        return modTable.bosses[id] == modTable.miniboss\n    end\n    \n    function modTable.isLieutenant(id)\n        return modTable.bosses[id] == modTable.lieutenant\n    end\n    \n    -- cache to hold ID -> name mappings, to avoid fully recalculating on each update\n    modTable.cache = {}\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- extract the last word from a string\n    function envTable.lastWord(str)\n        if str == nil then\n            return str\n        end\n        \n        local space = string.byte(\" \")\n        for i=str:len()-1,0,-1 do\n            if str:byte(i) == space then\n                return string.sub(str, i+1, str:len())\n            end\n        end\n        \n        return str\n    end\n    \n    -- attempt to match a given NPC name to some common patterns\n    function envTable.matchPattern(str)\n        if str == nil then\n            return nil\n        end\n        \n        local firstWordPattern = \"^(%S+)\"\n        local lastWordPattern = \"(%S+)$\"\n        \n        -- check if name is of the format \"X, Y\"; extract X if true\n        -- eg. \"Illidan Stormrage, Really Evil Guy\" -> \"Illidan Stormrage\"\n        local mat = string.match(str, \"^([^,]+),[^,]+\")\n        if mat ~= nil then\n            -- use the first word of X\n            -- eg. \"Illidan Stormrage\" -> \"Illidan\"\n            return string.match(mat, firstWordPattern)\n        end\n        \n        -- check if name is of the format \"X of Y\"; extract X if true\n        -- eg. \"Evil Warlock of Doom and Terror\" -> \"Evil Warlock\"\n        local mat = string.match(str, \"^(.+)%s+of+%s+\")\n        if mat ~= nil then\n            -- use the last word of X\n            -- eg. \"Evil Warlock\" -> \"Warlock\"\n            return string.match(mat, lastWordPattern)\n        end\n        \n        -- check if name is of the format \"X the Y\"; extract X if true\n        -- eg. \"Kael'Thas Sunstrider the Big Boss Man\" -> \"Kael'Thas Sunstrider\"\n        local mat = string.match(str, \"^(.+)%s+the+%s+\")\n        if mat ~= nil then\n            -- use the first word of X\n            -- eg. \"Kael'Thas Sunstrider\" -> \"Kael'Thas\"\n            return string.match(mat, firstWordPattern)\n        end\n        \n        return nil\n    end\n    \n    -- main logic for shortening unit names\n    function envTable.updateName(unitId, unitFrame, modTable, forceUpdate)\n        if unitId == nil then\n            return\n        end\n        \n        local currId = unitFrame.namePlateNpcId\n        if currId == nil then\n            return\n        end\n        \n        if modTable.cache == nil then\n            modTable.cache = {}\n        end\n        local prevEntry = modTable.cache[unitId]\n        \n        local update = forceUpdate\n        \n        if prevEntry == nil then\n            -- if the cache was empty but origName is set, it means that an option was toggled\n            -- (re-running the init clears the cache)\n            -- the NPC's original name is already saved, so use it\n            if unitFrame.origName == nil then\n                unitFrame.origName = unitFrame.healthBar.unitName:GetText()\n            end\n            update = true\n            \n            -- the NPC ID doesn't match the cached value; this nameplate has been re-assigned\n        elseif currId ~= prevEntry.id then\n            unitFrame.origName = unitFrame.healthBar.unitName:GetText()\n            update = true            \n        end\n        \n        -- Some error happened, usually caused by adds spawning; don't set name or cache result\n        if unitFrame.origName == \"Unknown\" then\n            --print(\"UNKNOWN!\")\n            unitFrame.origName = nil\n            return\n        end\n        \n        local newName = unitFrame.origName\n        \n        if update then\n            if newName == nil then\n                --print(\"unitFrame.healthBar.unitName:GetText() returned nil!\")\n                return\n            end\n            \n            if modTable.override[currId] then\n                --print(\"Updating: override\")\n                newName = modTable.override[currId]\n                \n            elseif modTable.isBoss(currId) and modTable.config.fullBossNames then\n                --print(\"Updating: full name (boss)\")\n                \n            elseif modTable.isMiniboss(currId) and modTable.config.fullMinibossNames then\n                --print(\"Updating: full name (boss)\")\n                \n            elseif modTable.manual[currId] then\n                --print(\"Updating: manual\")\n                newName = modTable.manual[currId]\n                \n            else\n                local m = nil\n                if modTable.config.patternMatching then\n                    m = envTable.matchPattern(newName)\n                end\n                \n                if m == nil then\n                    --print(\"Updating: last word of name\")\n                    newName = envTable.lastWord(newName)\n                else\n                    --print(\"Updating: matched common pattern\")\n                    newName = m\n                end\n                \n            end\n            \n            -- handle debug options\n            if modTable.config.showNpcId then\n                newName = newName .. \" \" .. currId\n            end\n            if modTable.config.showUnitId then\n                newName = newName .. \" \" .. unitId\n            end\n            \n            modTable.cache[unitId] = {id=currId, name=newName}\n        else\n            --print(\"Not updating\")\n            newName = modTable.cache[unitId].name\n        end \n        \n        unitFrame.healthBar.unitName:SetText(newName)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        },
        ["Time"] = 1609688829,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["url"] = "https://wago.io/VsE4iJqTZ/8",
        ["Icon"] = 135768,
        ["Enabled"] = true,
        ["Revision"] = 255,
        ["semver"] = "1.0.7",
        ["Author"] = "Varthar-Torghast",
        ["Desc"] = "Shorten enemy names in Shadowlands Mythic+ dungeons (eg. \"Mist Dancer\" -> \"Dancer\"). Exceptions have been coded wherever it makes sense; you can edit these and add new enemies within the initialization hook.",
        ["Prio"] = 99,
        ["version"] = 8,
        ["PlaterCore"] = 1,
        ["Name"] = "SL M+ Short Names",
        ["LastHookEdited"] = "",
        ["Options"] = {
          {
            ["Type"] = 4,
            ["Key"] = "fullBossNames",
            ["Value"] = true,
            ["Name"] = "Full Boss Names",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Don't abbreviate boss names (eg. \"Hakkar the Soulflayer\" instead of \"Hakkar\").",
          }, -- [1]
          {
            ["Type"] = 4,
            ["Key"] = "fullMinibossNames",
            ["Value"] = true,
            ["Name"] = "Full Miniboss Names",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Don't abbreviate miniboss names (eg. \"Inquisitor Sigar\" instead of \"Sigar\").",
          }, -- [2]
          {
            ["Type"] = 4,
            ["Key"] = "patternMatching",
            ["Value"] = true,
            ["Name"] = "Attempt Pattern Matching",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Useful if you want to enable this mod outside of SL dungeons. Will try to match some common patterns (eg. \"X of Y\" -> \"X\") in order to use the correct shortened name.",
          }, -- [3]
          {
            ["Type"] = 5,
            ["Key"] = "",
            ["Value"] = "Debug:",
            ["Name"] = "Debug",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 4,
            ["Key"] = "showNpcId",
            ["Value"] = false,
            ["Name"] = "Show NPC ID",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Add NPC ID to the displayed name.",
          }, -- [5]
          {
            ["Type"] = 4,
            ["Key"] = "showUnitId",
            ["Value"] = false,
            ["Name"] = "Show Unit ID",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Add unit ID to the displayed name.",
          }, -- [6]
        },
      }, -- [27]
      {
        ["OptionsValues"] = {
          ["SPpixelth"] = 1.1999999284744,
          ["SPpixelborder"] = true,
        },
        ["HooksTemp"] = {
        },
        ["Hooks"] = {
          ["Initialization"] = "function (modTable)\n    \n    local options1 = {\n        glowType = \"button\",\n        frequency = modTable.config.SPglowfreq\n    }\n    \n    local options2 = {\n        glowType = \"pixel\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    local options3 = {\n        glowType = \"ants\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        scale = modTable.config.SPantsscale,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n    }\n    \n    modTable.options = (modTable.config.SPglownum == 1 and options1) or (modTable.config.SPglownum == 2 and options2) or (modTable.config.SPglownum == 3 and options3)\n    \nend\n\n\n",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    local color = modTable.config.SPglowcolor\n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do\n            if not Plater.StartGlow then\n                auraIcon.purgeGlowEffect = auraIcon.purgeGlowEffect or Plater.CreateIconGlow (auraIcon)\n                if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                    auraIcon.purgeGlowEffect:SetColor(color, color)\n                    auraIcon.purgeGlowEffect:Show()\n                else\n                    auraIcon.purgeGlowEffect:Hide()\n                end\n            else\n                if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                    Plater.StartGlow(auraIcon, color, modTable.options)\n                else\n                    Plater.StopGlow(auraIcon)\n                end                \n            end\n        end\n        \n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                local canStealOrPurge = auraIcon.canStealOrPurge\n                \n                if not Plater.StartGlow then\n                    auraIcon.purgeGlowEffect = auraIcon.purgeGlowEffect or Plater.CreateIconGlow (auraIcon)\n                    if (auraIcon:IsShown() and canStealOrPurge) then\n                        auraIcon.purgeGlowEffect:SetColor(color, color)\n                        auraIcon.purgeGlowEffect:Show()\n                    else\n                        auraIcon.purgeGlowEffect:Hide()\n                    end\n                else\n                    if (auraIcon:IsShown() and canStealOrPurge) then\n                        Plater.StartGlow(auraIcon, color, modTable.options)\n                    else\n                        Plater.StopGlow(auraIcon)\n                    end                \n                end\n            end\n        end\n    end\n    \nend",
        },
        ["Time"] = 1609688374,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["affix"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["url"] = "https://wago.io/uEnDIKvvP/1",
        ["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
        ["Enabled"] = true,
        ["Revision"] = 713,
        ["semver"] = "1.0.0",
        ["Author"] = "Viashi-Antonidas",
        ["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
        ["Prio"] = 99,
        ["version"] = 1,
        ["PlaterCore"] = 1,
        ["Name"] = "Steal/Purge Aura Glow",
        ["LastHookEdited"] = "",
        ["Options"] = {
          {
            ["Type"] = 5,
            ["Key"] = "",
            ["Value"] = "Common Options",
            ["Name"] = "Common Options",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 2,
            ["Max"] = 3,
            ["Desc"] = "1(Button) / 2(Pixel) / 3(Ants) ",
            ["Min"] = 1,
            ["Key"] = "SPglownum",
            ["Value"] = 2,
            ["Name"] = "Glow Type",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [2]
          {
            ["Type"] = 2,
            ["Max"] = 2,
            ["Desc"] = "Set to negative to inverse direction of rotation",
            ["Min"] = -2,
            ["Key"] = "SPglowfreq",
            ["Value"] = 0.5,
            ["Name"] = "Glow Frequency",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [3]
          {
            ["Type"] = 1,
            ["Key"] = "SPglowcolor",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              0.45490196078431, -- [3]
              1, -- [4]
            },
            ["Name"] = "Glow Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Set glow color",
          }, -- [4]
          {
            ["Type"] = 6,
            ["Key"] = "",
            ["Value"] = 0,
            ["Name"] = "Blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 5,
            ["Key"] = "",
            ["Value"] = "Options for Pixel & Ants Glow",
            ["Name"] = "Options for Pixel & Ants Glow",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 2,
            ["Max"] = 16,
            ["Desc"] = "Set number of lines",
            ["Min"] = 1,
            ["Key"] = "SPglowparticle",
            ["Value"] = 6,
            ["Name"] = "Number of Particles",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [7]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Offset of glow relative to region border",
            ["Min"] = -10,
            ["Key"] = "SPglowxoff",
            ["Value"] = 1.2,
            ["Name"] = "X-Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Offset of glow relative to region border",
            ["Min"] = -10,
            ["Key"] = "SPglowyoff",
            ["Value"] = 1.2,
            ["Name"] = "Y-Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [9]
          {
            ["Type"] = 6,
            ["Key"] = "",
            ["Value"] = 0,
            ["Name"] = "Blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [10]
          {
            ["Type"] = 5,
            ["Key"] = "",
            ["Value"] = "Options for Pixel Glow",
            ["Name"] = "Options for Pixel Glow",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [11]
          {
            ["Type"] = 4,
            ["Key"] = "SPpixelborder",
            ["Value"] = false,
            ["Name"] = "Pixel Add Border",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Enable to true to create border under lines",
          }, -- [12]
          {
            ["Type"] = 2,
            ["Max"] = 100,
            ["Desc"] = "Set pixel line length",
            ["Min"] = 0.01,
            ["Key"] = "SPpixellength",
            ["Value"] = 6,
            ["Name"] = "Pixel Line Length",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [13]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Set pixel line thickness",
            ["Min"] = 0.01,
            ["Key"] = "SPpixelth",
            ["Value"] = 2,
            ["Name"] = "Pixel Line Thickness",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [14]
          {
            ["Type"] = 6,
            ["Key"] = "",
            ["Value"] = 0,
            ["Name"] = "Blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [15]
          {
            ["Type"] = 5,
            ["Key"] = "",
            ["Value"] = "Options for Ants Glow",
            ["Name"] = "Options for Ants Glow",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [16]
          {
            ["Type"] = 2,
            ["Max"] = 2.5,
            ["Desc"] = "Set ants glow scale",
            ["Min"] = 0.01,
            ["Key"] = "SPantsscale",
            ["Value"] = 0.8,
            ["Name"] = "Ants Glow Scale",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [17]
        },
      }, -- [28]
      {
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "",
        ["Hooks"] = {
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    isInspired = Plater.UnitHasAura (unitFrame, \"Inspiring Presence\")\n    \n    \n    if (isInspired) then\n        Plater.SetNameplateColor (unitFrame, \"orange\")\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
        },
        ["Time"] = 1609713833,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["race"] = {
          },
          ["pvptalent"] = {
          },
          ["role"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
        ["Enabled"] = true,
        ["Revision"] = 108,
        ["semver"] = "",
        ["Author"] = "Kastfall-Azralon",
        ["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
        ["Prio"] = 99,
        ["Name"] = "Inspiring Presence",
        ["PlaterCore"] = 1,
        ["version"] = -1,
        ["HooksTemp"] = {
        },
        ["Options"] = {
        },
      }, -- [29]
    },
    ["disable_omnicc_on_auras"] = true,
    ["aura_width"] = 21,
    ["health_statusbar_bgcolor"] = {
      0.043137254901961, -- [1]
      0.043137254901961, -- [2]
      0.043137254901961, -- [3]
    },
    ["castbar_target_shadow_color"] = {
      nil, -- [1]
      nil, -- [2]
      nil, -- [3]
      0, -- [4]
    },
    ["target_highlight_color"] = {
      1, -- [1]
      1, -- [2]
    },
    ["resources"] = {
      ["scale"] = 0.79999995231628,
    },
    ["extra_icon_auras"] = {
      "Inspiring Presence", -- [1]
    },
    ["castbar_target_font"] = "Gilroy Bold",
    ["pet_height_scale"] = 0.94999998807907,
    ["aura_x_offset"] = 0,
    ["first_run3"] = true,
    ["aura_stack_color"] = {
      [3] = 0.36078431372549,
    },
    ["health_statusbar_bgtexture"] = "REEEE",
    ["indicator_raidmark_anchor"] = {
      ["x"] = 0,
      ["side"] = 9,
    },
    ["cast_statusbar_fadeout_time"] = 0.49999997019768,
    ["aura_show_enrage"] = true,
    ["aura_tracker"] = {
      ["buff_tracked"] = {
        ["209859"] = true,
      },
      ["debuff_banned"] = {
        ["284258"] = true,
      },
      ["buff_banned"] = {
        ["206150"] = true,
        ["333553"] = true,
        ["61574"] = true,
        ["61573"] = true,
      },
    },
    ["castbar_target_show"] = true,
    ["cast_statusbar_color"] = {
      nil, -- [1]
      0.70196078431373, -- [2]
      nil, -- [3]
      1, -- [4]
    },
    ["update_throttle"] = 0.24999998509884,
    ["focus_indicator_enabled"] = false,
    ["indicator_extra_raidmark"] = false,
    ["extra_icon_timer_font"] = "Gilroy Bold",
    ["not_affecting_combat_alpha"] = 0,
    ["health_selection_overlay"] = "REEEE",
    ["target_highlight_alpha"] = 1,
    ["hover_highlight_alpha"] = 0.29999998211861,
    ["indicator_raidmark_scale"] = 0.86999994516373,
    ["cast_statusbar_spark_alpha"] = 0,
    ["target_shady_alpha"] = 0.59999996423721,
    ["patch_version"] = 13,
    ["target_highlight_height"] = 24,
    ["indicator_elite"] = false,
    ["version"] = 4,
    ["color_override_colors"] = {
      [3] = {
        0.78039215686274, -- [1]
        0.25098039215686, -- [2]
        0.25098039215686, -- [3]
      },
      [4] = {
        0.85490196078431, -- [1]
        0.77254901960784, -- [2]
        0.36078431372549, -- [3]
      },
      [5] = {
        0.29411764705882, -- [1]
        0.68627450980392, -- [2]
        0.29803921568628, -- [3]
      },
    },
    ["health_animation_time_dilatation"] = 2.6199998855591,
    ["border_color"] = {
      nil, -- [1]
      nil, -- [2]
      nil, -- [3]
      1, -- [4]
    },
    ["cast_statusbar_color_interrupted"] = {
      nil, -- [1]
      0.10196078431373, -- [2]
      0.10196078431373, -- [3]
    },
    ["range_check_in_range_or_target_alpha"] = 1,
    ["aura_timer_text_size"] = 9,
    ["aura_height2"] = 14,
    ["number_region_first_run"] = true,
    ["script_data_trash"] = {
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    \nend\n\n\n",
        ["Time"] = 1609607408,
        ["NpcNames"] = {
        },
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option1",
            ["Value"] = 0,
            ["Name"] = "Option 1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Plays a special animation showing the explosion time.",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option3",
            ["Value"] = 0,
            ["Name"] = "Option 3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 2,
            ["Max"] = 6,
            ["Desc"] = "Increases the cast bar height by this value",
            ["Min"] = 0,
            ["Key"] = "castBarHeight",
            ["Value"] = 3,
            ["Name"] = "Cast Bar Height Mod",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [4]
          {
            ["Type"] = 1,
            ["Key"] = "castBarColor",
            ["Value"] = {
              1, -- [1]
              0.5843137254902, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Cast Bar Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Changes the cast bar color to this one.",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Key"] = "option7",
            ["Value"] = 0,
            ["Name"] = "Option 7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 5,
            ["Key"] = "option6",
            ["Value"] = "Arrow:",
            ["Name"] = "Arrow:",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 4,
            ["Key"] = "showArrow",
            ["Value"] = true,
            ["Name"] = "Show Arrow",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Arrow alpha.",
            ["Min"] = 0,
            ["Key"] = "arrowAlpha",
            ["Value"] = 0.5,
            ["Name"] = "Arrow Alpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 12,
            ["Desc"] = "Arrow Width.",
            ["Min"] = 4,
            ["Key"] = "arrowWidth",
            ["Value"] = 8,
            ["Name"] = "Arrow Width",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 12,
            ["Desc"] = "Arrow Height.",
            ["Min"] = 4,
            ["Key"] = "arrowHeight",
            ["Value"] = 8,
            ["Name"] = "Arrow Height",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [11]
          {
            ["Type"] = 6,
            ["Key"] = "option13",
            ["Value"] = 0,
            ["Name"] = "Option 13",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [12]
          {
            ["Type"] = 5,
            ["Key"] = "option12",
            ["Value"] = "Dot Animation:",
            ["Name"] = "Dot Animation:",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [13]
          {
            ["Type"] = 1,
            ["Key"] = "dotColor",
            ["Value"] = {
              1, -- [1]
              0.6156862745098, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Dot Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Adjust the color of the dot animation.",
          }, -- [14]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Dot X Offset",
            ["Min"] = -10,
            ["Key"] = "xOffset",
            ["Value"] = 4,
            ["Name"] = "Dot X Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [15]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Dot Y Offset",
            ["Min"] = -10,
            ["Key"] = "yOffset",
            ["Value"] = 3,
            ["Name"] = "Dot Y Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [16]
        },
        ["url"] = "",
        ["Icon"] = 135921,
        ["Desc"] = "Inspired Affix",
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
        ["Revision"] = 467,
        ["semver"] = "",
        ["version"] = -1,
        ["Prio"] = 99,
        ["Author"] = "Bombad�o-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
        ["Name"] = "Inspired",
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    \nend\n\n\n",
        ["SpellIds"] = {
          343503, -- [1]
        },
        ["PlaterCore"] = 1,
        ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Enabled"] = false,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
        ["__TrashAt"] = 1609688408,
      }, -- [1]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n    end\nend\n\n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n    end\nend\n\n\n\n\n\n",
        ["OptionsValues"] = {
          ["textColor"] = {
            1, -- [1]
            1, -- [2]
            1, -- [3]
            1, -- [4]
          },
          ["bgWidth"] = 30,
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
        ["ScriptType"] = 3,
        ["__TrashAt"] = 1610305788,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
        ["Time"] = 1609254915,
        ["Icon"] = 135945,
        ["semver"] = "",
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n    end\nend\n\n\n\n\n\n\n",
        ["NpcNames"] = {
          "174773", -- [1]
        },
        ["version"] = -1,
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n    end\nend\n\n\n\n\n\n",
        ["Revision"] = 68,
        ["Options"] = {
          {
            ["Type"] = 2,
            ["Max"] = 50,
            ["Desc"] = "",
            ["Min"] = 10,
            ["Key"] = "bgWidth",
            ["Value"] = 27,
            ["Name"] = "Width",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [1]
          {
            ["Type"] = 1,
            ["Key"] = "bgColor",
            ["Value"] = {
              0.50588235294118, -- [1]
              0.070588235294118, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Background Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option5",
            ["Value"] = 0,
            ["Name"] = "Option 5",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 2,
            ["Max"] = 24,
            ["Desc"] = "",
            ["Min"] = 7,
            ["Key"] = "textSize",
            ["Value"] = 8,
            ["Name"] = "Text Size",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [4]
          {
            ["Type"] = 1,
            ["Key"] = "textColor",
            ["Value"] = {
              1, -- [1]
              0.5843137254902, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Text Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [5]
        },
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
        ["Name"] = "M+ Spiteful",
        ["Author"] = "Symantec-Azralon",
        ["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
        ["Desc"] = "Time to die Spiteful affix",
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
        ["Prio"] = 99,
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Enabled"] = true,
        ["url"] = "",
        ["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
        ["scriptId"] = "table: 0000012DB2F3D8D0",
      }, -- [2]
    },
    ["pet_width_scale"] = 0.94999998807907,
    ["castbar_target_anchor"] = {
      ["x"] = 2,
    },
    ["script_auto_imported"] = {
      ["Unit - Important"] = 11,
      ["Aura - Buff Alert"] = 13,
      ["Cast - Very Important"] = 11,
      ["Explosion Affix M+"] = 11,
      ["Aura - Debuff Alert"] = 11,
      ["Cast - Ultra Important"] = 11,
      ["Cast - Big Alert"] = 11,
      ["Cast - Small Alert"] = 11,
      ["Fixate On You"] = 11,
      ["Aura - Invalidate Unit"] = 1,
      ["Auto Set Skull"] = 11,
      ["Unit Power"] = 1,
      ["Unit - Main Target"] = 11,
      ["Aura - Blink Time Left"] = 11,
      ["Aura Border Color"] = 1,
      ["Countdown"] = 11,
      ["Unit - Health Markers"] = 12,
      ["Cast - Frontal Cone"] = 11,
      ["Fixate"] = 11,
      ["Cast - Tank Interrupt"] = 11,
      ["Color Change"] = 1,
      ["Spiteful Affix"] = 2,
      ["Unit - Show Energy"] = 11,
    },
    ["aura2_grow_direction"] = 1,
    ["aura_alpha"] = 1,
    ["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark8",
    ["dps"] = {
      ["colors"] = {
        ["notontank"] = {
          0.29411764705882, -- [1]
          0.68627450980392, -- [2]
          0.29803921568628, -- [3]
        },
        ["aggro"] = {
          0.78039215686274, -- [1]
          0.25098039215686, -- [2]
          0.25098039215686, -- [3]
        },
        ["noaggro"] = {
          0.29411764705882, -- [1]
          0.68627450980392, -- [2]
          0.29803921568628, -- [3]
        },
        ["pulling"] = {
          nil, -- [1]
          0.45882352941177, -- [2]
          0.10196078431373, -- [3]
        },
      },
    },
    ["tank"] = {
      ["colors"] = {
        ["anothertank"] = {
          1, -- [1]
          0.9843137254902, -- [2]
          0.93333333333333, -- [3]
        },
        ["aggro"] = {
          0.29411764705882, -- [1]
          0.68627450980392, -- [2]
          0.29803921568628, -- [3]
        },
        ["noaggro"] = {
          0.9843137254902, -- [1]
          0.086274509803922, -- [2]
          0.17647058823529, -- [3]
        },
        ["nocombat"] = {
          0.78039215686274, -- [1]
          0.25098039215686, -- [2]
          0.25098039215686, -- [3]
        },
        ["pulling"] = {
          nil, -- [1]
          0.45882352941177, -- [2]
          0.10196078431373, -- [3]
        },
      },
    },
    ["cast_statusbar_spark_width"] = 4,
  }
end

function RUI:PlaterAldarana()
  PlaterDB["profiles"]["RUI ALdarana's Edit"] = {
    ["target_shady_combat_only"] = false,
    ["script_data"] = {
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
        ["Time"] = 1604599472,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
        ["Enabled"] = false,
        ["Revision"] = 355,
        ["semver"] = "",
        ["Author"] = "Izimode-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option4",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "Option 6",
            ["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
            ["Key"] = "option6",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Name"] = "Change Nameplate Color",
            ["Value"] = true,
            ["Key"] = "changeNameplateColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "change to true to change the color",
          }, -- [4]
          {
            ["Type"] = 1,
            ["Name"] = "Nameplate Color",
            ["Value"] = {
              1, -- [1]
              0, -- [2]
              0.5254901960784314, -- [3]
              1, -- [4]
            },
            ["Key"] = "nameplateColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 2,
            ["Max"] = 6,
            ["Desc"] = "increase the nameplate height by this value",
            ["Min"] = 0,
            ["Key"] = "nameplateSizeOffset",
            ["Value"] = 3,
            ["Name"] = "Nameplate Size Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [6]
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 1,
            ["Name"] = "Dot Color",
            ["Value"] = {
              1, -- [1]
              0.7137254901960784, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "dotsColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option4",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [9]
          {
            ["Type"] = 5,
            ["Name"] = "Skull Texture",
            ["Value"] = "Skull Texture",
            ["Key"] = "option10",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [10]
          {
            ["Type"] = 1,
            ["Name"] = "Skull Color",
            ["Value"] = {
              1, -- [1]
              0.4627450980392157, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "skullColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [11]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "",
            ["Min"] = 0,
            ["Key"] = "skullAlpha",
            ["Value"] = 0.2,
            ["Fraction"] = true,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Alpha",
          }, -- [12]
          {
            ["Type"] = 2,
            ["Max"] = 2,
            ["Desc"] = "",
            ["Min"] = 0.4,
            ["Fraction"] = true,
            ["Value"] = 0.6,
            ["Name"] = "Scale",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "skullScale",
          }, -- [13]
        },
        ["version"] = -1,
        ["Name"] = "Unit - Important [Plater]",
        ["NpcNames"] = {
          "164362", -- [1]
          "168882", -- [2]
          "168988", -- [3]
          "170234", -- [4]
          "165905", -- [5]
          "170452", -- [6]
        },
      }, -- [1]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
        ["ScriptType"] = 1,
        ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Time"] = 1607270511,
        ["semver"] = "",
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
        ["Desc"] = "Add the buff name in the trigger box.",
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
        ["Revision"] = 608,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option1",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option3",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Key"] = "glowEnabled",
            ["Value"] = false,
            ["Name"] = "Glow Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 1,
            ["Key"] = "glowColor",
            ["Value"] = {
              0.403921568627451, -- [1]
              0.00392156862745098, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Glow Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 4,
            ["Key"] = "dotsEnabled",
            ["Value"] = true,
            ["Name"] = "Dots Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 1,
            ["Name"] = "Dots Color",
            ["Value"] = {
              1, -- [1]
              0.3215686274509804, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "dotsColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [8]
        },
        ["Name"] = "Aura - Buff Alert [Plater]",
        ["Prio"] = 99,
        ["Author"] = "Tercioo-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
        ["version"] = -1,
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
        ["SpellIds"] = {
          323149, -- [1]
          324392, -- [2]
          340544, -- [3]
          342189, -- [4]
          333227, -- [5]
        },
        ["PlaterCore"] = 1,
        ["NpcNames"] = {
        },
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
        ["Enabled"] = false,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
      }, -- [2]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
        ["Time"] = 1618996917,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
        ["Enabled"] = true,
        ["Revision"] = 717,
        ["semver"] = "",
        ["Author"] = "Bombad�o-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
        ["SpellIds"] = {
          321247, -- [1]
          334522, -- [2]
          320232, -- [3]
          319962, -- [4]
          325879, -- [5]
          324427, -- [6]
          322999, -- [7]
          325360, -- [8]
          322903, -- [9]
          324103, -- [10]
          333294, -- [11]
          333540, -- [12]
          319521, -- [13]
          326021, -- [14]
          326450, -- [15]
          322711, -- [16]
          329104, -- [17]
          295000, -- [18]
          242391, -- [19]
          320197, -- [20]
          329608, -- [21]
          350687, -- [22]
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Option 1",
            ["Value"] = 0,
            ["Key"] = "option1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "Option 2",
            ["Value"] = "Plays a big animation when the cast start.",
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Name"] = "Option 4",
            ["Value"] = 0,
            ["Key"] = "option4",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 5,
            ["Name"] = "Flash",
            ["Value"] = "Flash:",
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 2,
            ["Max"] = 1.2,
            ["Desc"] = "How long is the flash played when the cast starts.",
            ["Min"] = 0.1,
            ["Fraction"] = true,
            ["Value"] = 0.8,
            ["Key"] = "flashDuration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Flash Duration",
          }, -- [6]
          {
            ["Type"] = 1,
            ["Name"] = "Flash Color",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Key"] = "flashColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the Flash",
          }, -- [7]
          {
            ["Type"] = 6,
            ["Name"] = "Option 7",
            ["Value"] = 0,
            ["Key"] = "option7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Shake:",
            ["Name"] = "Shake",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 0.5,
            ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
            ["Min"] = 0.1,
            ["Fraction"] = true,
            ["Value"] = 0.2,
            ["Key"] = "shakeDuration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Duration",
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "How strong is the shake.",
            ["Min"] = 1,
            ["Fraction"] = false,
            ["Value"] = 5,
            ["Key"] = "shakeAmplitude",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Amplitude",
          }, -- [11]
          {
            ["Type"] = 2,
            ["Max"] = 80,
            ["Desc"] = "How fast the shake moves.",
            ["Min"] = 1,
            ["Fraction"] = false,
            ["Value"] = 40,
            ["Key"] = "shakeFrequency",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Frequency",
          }, -- [12]
          {
            ["Type"] = 6,
            ["Name"] = "Option 13",
            ["Value"] = 0,
            ["Key"] = "option13",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [13]
          {
            ["Type"] = 5,
            ["Name"] = "Dot Animation",
            ["Value"] = "Dot Animation:",
            ["Key"] = "option14",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [14]
          {
            ["Type"] = 1,
            ["Name"] = "Dot Color",
            ["Value"] = {
              0.5647058823529412, -- [1]
              0.5647058823529412, -- [2]
              0.5647058823529412, -- [3]
              1, -- [4]
            },
            ["Key"] = "dotColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Adjust the color of the dots around the nameplate",
          }, -- [15]
          {
            ["Type"] = 2,
            ["Max"] = 20,
            ["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
            ["Min"] = -10,
            ["Name"] = "Dot X Offset",
            ["Value"] = 8,
            ["Key"] = "xOffset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [16]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
            ["Min"] = -10,
            ["Key"] = "yOffset",
            ["Value"] = 3,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Dot Y Offset",
          }, -- [17]
          {
            ["Type"] = 6,
            ["Name"] = "blank",
            ["Value"] = 0,
            ["Key"] = "option18",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [18]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [19]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [20]
          {
            ["Type"] = 6,
            ["Name"] = "blank",
            ["Value"] = 0,
            ["Key"] = "option18",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [21]
          {
            ["Type"] = 6,
            ["Name"] = "blank",
            ["Value"] = 0,
            ["Key"] = "option18",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [22]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [23]
          {
            ["Type"] = 5,
            ["Name"] = "Option 19",
            ["Value"] = "Cast Bar",
            ["Key"] = "option19",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [24]
          {
            ["Type"] = 4,
            ["Name"] = "Use Cast Bar Color",
            ["Value"] = true,
            ["Key"] = "useCastbarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Use cast bar color.",
          }, -- [25]
          {
            ["Type"] = 1,
            ["Name"] = "Cast Bar Color",
            ["Value"] = {
              0.4117647058823529, -- [1]
              1, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "castBarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Cast bar color.",
          }, -- [26]
        },
        ["version"] = -1,
        ["Name"] = "Cast - Very Important [Plater]",
        ["NpcNames"] = {
        },
      }, -- [3]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
        ["Time"] = 1604698647,
        ["url"] = "",
        ["Icon"] = 2175503,
        ["Enabled"] = true,
        ["Revision"] = 462,
        ["semver"] = "",
        ["Author"] = "Bombad�o-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
        ["SpellIds"] = {
          240446, -- [1]
          273577, -- [2]
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Option 1",
            ["Value"] = 0,
            ["Key"] = "option1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "Option 2",
            ["Value"] = "Plays a special animation showing the explosion time.",
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Name"] = "Option 3",
            ["Value"] = 0,
            ["Key"] = "option3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 2,
            ["Max"] = 6,
            ["Desc"] = "Increases the cast bar height by this value",
            ["Min"] = 0,
            ["Key"] = "castBarHeight",
            ["Value"] = 3,
            ["Name"] = "Cast Bar Height Mod",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [4]
          {
            ["Type"] = 1,
            ["Name"] = "Cast Bar Color",
            ["Value"] = {
              1, -- [1]
              0.5843137254901961, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "castBarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Changes the cast bar color to this one.",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Name"] = "Option 7",
            ["Value"] = 0,
            ["Key"] = "option7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 5,
            ["Name"] = "Arrow:",
            ["Value"] = "Arrow:",
            ["Key"] = "option6",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 4,
            ["Name"] = "Show Arrow",
            ["Value"] = true,
            ["Key"] = "showArrow",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Arrow alpha.",
            ["Min"] = 0,
            ["Key"] = "arrowAlpha",
            ["Value"] = 0.5,
            ["Name"] = "Arrow Alpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 12,
            ["Desc"] = "Arrow Width.",
            ["Min"] = 4,
            ["Fraction"] = false,
            ["Value"] = 8,
            ["Key"] = "arrowWidth",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Arrow Width",
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 12,
            ["Desc"] = "Arrow Height.",
            ["Min"] = 4,
            ["Key"] = "arrowHeight",
            ["Value"] = 8,
            ["Name"] = "Arrow Height",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [11]
          {
            ["Type"] = 6,
            ["Name"] = "Option 13",
            ["Value"] = 0,
            ["Key"] = "option13",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [12]
          {
            ["Type"] = 5,
            ["Name"] = "Dot Animation:",
            ["Value"] = "Dot Animation:",
            ["Key"] = "option12",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [13]
          {
            ["Type"] = 1,
            ["Name"] = "Dot Color",
            ["Value"] = {
              1, -- [1]
              0.615686274509804, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "dotColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Adjust the color of the dot animation.",
          }, -- [14]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Dot X Offset",
            ["Min"] = -10,
            ["Key"] = "xOffset",
            ["Value"] = 4,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Dot X Offset",
          }, -- [15]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Dot Y Offset",
            ["Min"] = -10,
            ["Fraction"] = false,
            ["Value"] = 3,
            ["Name"] = "Dot Y Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "yOffset",
          }, -- [16]
        },
        ["version"] = -1,
        ["Name"] = "Explosion Affix M+ [Plater]",
        ["NpcNames"] = {
        },
      }, -- [4]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["Time"] = 1607270721,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
        ["Enabled"] = true,
        ["Revision"] = 353,
        ["semver"] = "",
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "Option 2",
            ["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Name"] = "Glow Enabled",
            ["Value"] = false,
            ["Key"] = "glowEnabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 1,
            ["Name"] = "Glow Color",
            ["Value"] = {
              0.403921568627451, -- [1]
              0.00392156862745098, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "glowColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Key"] = "option3",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 4,
            ["Name"] = "Dots Enabled",
            ["Value"] = true,
            ["Key"] = "dotsEnabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 1,
            ["Key"] = "dotsColor",
            ["Value"] = {
              1, -- [1]
              0.3215686274509804, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Dots Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [8]
        },
        ["Desc"] = "Add the debuff name in the trigger box.",
        ["Author"] = "Tercioo-Sylvanas",
        ["SpellIds"] = {
          337220, -- [1]
          337253, -- [2]
          337251, -- [3]
        },
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
        ["version"] = -1,
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["Name"] = "Aura - Debuff Alert [Plater]",
        ["PlaterCore"] = 1,
        ["Prio"] = 99,
        ["NpcNames"] = {
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
        ["url"] = "",
      }, -- [5]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
        ["Time"] = 1618996691,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
        ["Enabled"] = true,
        ["Revision"] = 1060,
        ["semver"] = "",
        ["Author"] = "Tercioo-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
        ["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
        ["SpellIds"] = {
          338353, -- [1]
          334748, -- [2]
          334749, -- [3]
          320784, -- [4]
          341352, -- [5]
          341520, -- [6]
          341522, -- [7]
          336005, -- [8]
          339777, -- [9]
          331933, -- [10]
          326617, -- [11]
          324914, -- [12]
          324776, -- [13]
          326046, -- [14]
          340634, -- [15]
          319070, -- [16]
          328295, -- [17]
          317936, -- [18]
          327413, -- [19]
          319654, -- [20]
          323821, -- [21]
          320772, -- [22]
          324293, -- [23]
          330562, -- [24]
          330868, -- [25]
          341902, -- [26]
          342139, -- [27]
          342675, -- [28]
          323190, -- [29]
          332836, -- [30]
          327648, -- [31]
          328217, -- [32]
          322938, -- [33]
          340544, -- [34]
          325876, -- [35]
          325700, -- [36]
          323552, -- [37]
          332666, -- [38]
          332612, -- [39]
          332706, -- [40]
          340026, -- [41]
          294171, -- [42]
          292910, -- [43]
          294165, -- [44]
          338871, -- [45]
          330813, -- [46]
          335694, -- [47]
          327461, -- [48]
          329787, -- [49]
          304946, -- [50]
          15245, -- [51]
          276754, -- [52]
          304831, -- [53]
          277036, -- [54]
          320657, -- [55]
          294362, -- [56]
          270248, -- [57]
          292926, -- [58]
          350421, -- [59]
          352158, -- [60]
          349985, -- [61]
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Blank Line",
            ["Value"] = 0,
            ["Key"] = "option1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "Option 2",
            ["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Name"] = "Option 3",
            ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
            ["Key"] = "option3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option4",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 4,
            ["Name"] = "Cast Bar Color Enabled",
            ["Value"] = true,
            ["Key"] = "useCastbarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "When enabled, changes the cast bar color,",
          }, -- [5]
          {
            ["Type"] = 1,
            ["Name"] = "Cast Bar Color",
            ["Value"] = {
              1, -- [1]
              0.4313725490196079, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "castbarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the cast bar.",
          }, -- [6]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Line",
            ["Value"] = 0,
            ["Key"] = "option7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
            ["Min"] = 0.05,
            ["Key"] = "flashDuration",
            ["Value"] = 0.4,
            ["Fraction"] = true,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Flash Duration",
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Increases the cast bar height by this value",
            ["Min"] = 0,
            ["Key"] = "castBarHeight",
            ["Value"] = 5,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Cast Bar Height Mod",
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
            ["Min"] = 0.1,
            ["Key"] = "shakeDuration",
            ["Value"] = 0.2,
            ["Fraction"] = true,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Duration",
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 100,
            ["Desc"] = "How strong is the shake.",
            ["Min"] = 2,
            ["Key"] = "shakeAmplitude",
            ["Value"] = 8,
            ["Name"] = "Shake Amplitude",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [11]
          {
            ["Type"] = 2,
            ["Max"] = 80,
            ["Desc"] = "How fast the shake moves.",
            ["Min"] = 1,
            ["Key"] = "shakeFrequency",
            ["Value"] = 40,
            ["Name"] = "Shake Frequency",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [12]
        },
        ["version"] = -1,
        ["Name"] = "Cast - Big Alert [Plater]",
        ["NpcNames"] = {
        },
      }, -- [6]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
        ["Time"] = 1604617585,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
        ["Enabled"] = true,
        ["Revision"] = 595,
        ["semver"] = "",
        ["Author"] = "Tercioo-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
        ["SpellIds"] = {
          320170, -- [1]
          320171, -- [2]
          320462, -- [3]
          330712, -- [4]
          332170, -- [5]
          333875, -- [6]
          326836, -- [7]
          342135, -- [8]
          333861, -- [9]
          341969, -- [10]
          317963, -- [11]
          327481, -- [12]
          328331, -- [13]
          322614, -- [14]
          325701, -- [15]
          326438, -- [16]
          323538, -- [17]
          321764, -- [18]
          296523, -- [19]
          330755, -- [20]
          295929, -- [21]
          296019, -- [22]
          335685, -- [23]
          170751, -- [24]
          342207, -- [25]
          350554, -- [26]
          348513, -- [27]
          351779, -- [28]
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Option 1",
            ["Value"] = 0,
            ["Key"] = "option1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "Option 2",
            ["Value"] = "Plays a small animation when the cast start.",
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Name"] = "Option 3",
            ["Value"] = 0,
            ["Key"] = "option3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 2,
            ["Max"] = 1.2,
            ["Desc"] = "How long is the flash played when the cast starts.",
            ["Min"] = 0.1,
            ["Key"] = "flashDuration",
            ["Value"] = 0.6,
            ["Name"] = "Flash Duration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [5]
          {
            ["Type"] = 1,
            ["Name"] = "Flash Color",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Key"] = "flashColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the Flash",
          }, -- [6]
        },
        ["version"] = -1,
        ["Name"] = "Cast - Small Alert [Plater]",
        ["NpcNames"] = {
        },
      }, -- [7]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
        ["Time"] = 1558091648,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
        ["NpcNames"] = {
        },
        ["Enabled"] = true,
        ["Revision"] = 108,
        ["Author"] = "Izimode-Azralon",
        ["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
        ["SpellIds"] = {
          261265, -- [1]
          261266, -- [2]
          271590, -- [3]
        },
        ["PlaterCore"] = 1,
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["Name"] = "Aura - Invalidate Unit [Plater]",
      }, -- [8]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
        ["Time"] = 1607270505,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
        ["Icon"] = 135024,
        ["Enabled"] = false,
        ["Revision"] = 68,
        ["Options"] = {
        },
        ["Author"] = "Izimode-Azralon",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
        ["Name"] = "Color Change [Plater]",
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
        ["NpcNames"] = {
          "141851", -- [1]
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
        ["Prio"] = 99,
      }, -- [9]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
        ["Time"] = 1626382829,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
        ["Enabled"] = true,
        ["Revision"] = 375,
        ["semver"] = "",
        ["Author"] = "Izimode-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
        ["NpcNames"] = {
        },
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Name"] = "Aura - Blink by Time Left [Plater]",
        ["version"] = -1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option10",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option17",
            ["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
            ["Name"] = "Option 17",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option10",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Key"] = "blinkEnabled",
            ["Value"] = true,
            ["Name"] = "Blink Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'false' to disable blink",
          }, -- [4]
          {
            ["Type"] = 4,
            ["Key"] = "glowEnabled",
            ["Value"] = true,
            ["Name"] = "Glow Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'false' to disable glows",
          }, -- [5]
          {
            ["Type"] = 4,
            ["Key"] = "changeNameplateColor",
            ["Value"] = false,
            ["Name"] = "Change NamePlate Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'true' to enable nameplate color change",
          }, -- [6]
          {
            ["Type"] = 2,
            ["Max"] = 20,
            ["Desc"] = "in seconds, affects the blink effect only",
            ["Min"] = 1,
            ["Fraction"] = true,
            ["Value"] = 3,
            ["Key"] = "timeleftToBlink",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Timeleft to Blink",
          }, -- [7]
          {
            ["Type"] = 2,
            ["Max"] = 3,
            ["Desc"] = "time to complete a blink loop",
            ["Min"] = 0.5,
            ["Fraction"] = true,
            ["Value"] = 1,
            ["Key"] = "blinkSpeed",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Blink Speed",
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
            ["Min"] = 0.1,
            ["Fraction"] = true,
            ["Value"] = 0.6,
            ["Key"] = "blinkMaxAlpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Blink Max Alpha",
          }, -- [9]
          {
            ["Type"] = 1,
            ["Key"] = "blinkColor",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Blink Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "color of the blink",
          }, -- [10]
          {
            ["Type"] = 1,
            ["Key"] = "nameplateColor",
            ["Value"] = {
              0.2862745098039216, -- [1]
              0.00392156862745098, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Nameplate Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "nameplate color if ChangeNameplateColor is true",
          }, -- [11]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option10",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [12]
          {
            ["Type"] = 4,
            ["Key"] = "timerColorEnabled",
            ["Value"] = true,
            ["Name"] = "Timer Color Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'false' to disable changes in the color of the time left text",
          }, -- [13]
          {
            ["Type"] = 2,
            ["Max"] = 20,
            ["Desc"] = "in seconds, affects the color of the text",
            ["Min"] = 1,
            ["Name"] = "Time Left Warning",
            ["Value"] = 8,
            ["Key"] = "timeLeftWarning",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [14]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "in seconds, affects the color of the text",
            ["Min"] = 1,
            ["Name"] = "Time Left Critical",
            ["Value"] = 3,
            ["Key"] = "timeLeftCritical",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [15]
          {
            ["Type"] = 1,
            ["Key"] = "warningColor",
            ["Value"] = {
              1, -- [1]
              0.8705882352941177, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Warning Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "color when the time left entered in a warning zone",
          }, -- [16]
          {
            ["Type"] = 1,
            ["Key"] = "criticalColor",
            ["Value"] = {
              1, -- [1]
              0.07450980392156863, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Critical Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "color when the time left is critical",
          }, -- [17]
        },
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
      }, -- [10]
      {
        ["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
        ["Time"] = 1558091601,
        ["Temp_ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
        ["NpcNames"] = {
        },
        ["Enabled"] = false,
        ["Revision"] = 47,
        ["Author"] = "Izimode-Azralon",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
        ["Name"] = "Aura - Border Color [Plater]",
        ["PlaterCore"] = 1,
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
        ["Icon"] = 133006,
        ["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
        ["SpellIds"] = {
        },
      }, -- [11]
      {
        ["Enabled"] = false,
        ["Revision"] = 131,
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
        ["Icon"] = 136048,
        ["Author"] = "Celian-Sylvanas",
        ["ScriptType"] = 3,
        ["Desc"] = "Show the energy amount above the nameplate",
        ["Name"] = "UnitPower [Plater]",
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Time"] = 1539015649,
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
        ["NpcNames"] = {
          "Guardian of Yogg-Saron", -- [1]
        },
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
      }, -- [12]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
        ["Time"] = 1604599443,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
        ["Enabled"] = true,
        ["Revision"] = 460,
        ["semver"] = "",
        ["Author"] = "Izimode-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
        ["SpellIds"] = {
          323489, -- [1]
          323496, -- [2]
          319941, -- [3]
          319592, -- [4]
          334266, -- [5]
          325258, -- [6]
          334913, -- [7]
          326221, -- [8]
          322936, -- [9]
          323236, -- [10]
          321834, -- [11]
          336752, -- [12]
          325418, -- [13]
          324667, -- [14]
          327233, -- [15]
          324368, -- [16]
          324205, -- [17]
          323943, -- [18]
          319713, -- [19]
          320596, -- [20]
          320729, -- [21]
          323608, -- [22]
          330614, -- [23]
          320063, -- [24]
          332708, -- [25]
          334023, -- [26]
          317231, -- [27]
          317943, -- [28]
          320966, -- [29]
          334053, -- [30]
          328458, -- [31]
          321968, -- [32]
          331718, -- [33]
          325793, -- [34]
          330453, -- [35]
          326997, -- [36]
          334051, -- [37]
          292903, -- [38]
          330843, -- [39]
          294173, -- [40]
          189200, -- [41]
          352833, -- [42]
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Option 1",
            ["Value"] = 0,
            ["Key"] = "option1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "Option 2",
            ["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Name"] = "Option 4",
            ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
            ["Key"] = "option4",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Name"] = "Option 3",
            ["Value"] = 0,
            ["Key"] = "option3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Set the alpha of the moving arrow",
            ["Min"] = 0,
            ["Key"] = "arrowAlpha",
            ["Value"] = 0.275,
            ["Fraction"] = true,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Arrow Alpha",
          }, -- [5]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Time that takes for an arrow to travel from the to right.",
            ["Min"] = 0,
            ["Key"] = "animSpeed",
            ["Value"] = 0.2,
            ["Fraction"] = true,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Animation Speed",
          }, -- [6]
          {
            ["Type"] = 4,
            ["Name"] = "Use White Arrow",
            ["Value"] = false,
            ["Key"] = "desaturateArrow",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "If enabled, the arrow color will be desaturated.",
          }, -- [7]
        },
        ["version"] = -1,
        ["Name"] = "Cast - Frontal Cone [Plater]",
        ["NpcNames"] = {
        },
      }, -- [13]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
        ["Time"] = 1604239880,
        ["url"] = "",
        ["Icon"] = 1029718,
        ["Enabled"] = true,
        ["Revision"] = 269,
        ["semver"] = "",
        ["Author"] = "Celian-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
        ["Desc"] = "Show above the nameplate who is the player fixated",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
        },
        ["version"] = -1,
        ["Name"] = "Fixate [Plater]",
        ["NpcNames"] = {
          "165560", -- [1]
        },
      }, -- [14]
      {
        ["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        ["Time"] = 1604087921,
        ["url"] = "",
        ["Icon"] = 841383,
        ["Enabled"] = true,
        ["Revision"] = 266,
        ["semver"] = "",
        ["Author"] = "Tecno-Azralon",
        ["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["SpellIds"] = {
          "spawn of g'huun", -- [1]
          "smuggled crawg", -- [2]
          "sergeant bainbridge", -- [3]
          "blacktooth scrapper", -- [4]
          "irontide grenadier", -- [5]
          "feral bloodswarmer", -- [6]
          "earthrager", -- [7]
          "crawler mine", -- [8]
          "rezan", -- [9]
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
        },
        ["version"] = -1,
        ["Name"] = "Fixate On You [Plater]",
        ["NpcNames"] = {
        },
      }, -- [15]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.SetNameplateColor (unitFrame)\nend\n\n\n",
        ["Temp_OnShowCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.SetNameplateColor (unitFrame, \"#0085ff\")\nend\n\n\n",
        ["Time"] = 1553105911,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["NpcNames"] = {
        },
        ["Enabled"] = false,
        ["Revision"] = 23,
        ["Author"] = "Aldarana-Kazzak",
        ["Desc"] = "",
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.SetNameplateColor (unitFrame, \"#0085ff\")\nend\n\n\n",
        ["SpellIds"] = {
          268756, -- [1]
        },
        ["PlaterCore"] = 1,
        ["Name"] = "Deadeye Spyglass",
        ["Icon"] = 134441,
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.SetNameplateColor (unitFrame)\nend\n\n\n",
        ["OnShowCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
      }, -- [16]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
        ["Time"] = 1604617977,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
        ["Enabled"] = true,
        ["Revision"] = 513,
        ["semver"] = "",
        ["Author"] = "Bombad�o-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
        ["SpellIds"] = {
          332329, -- [1]
          320103, -- [2]
          321406, -- [3]
          335817, -- [4]
          321061, -- [5]
          320141, -- [6]
          326171, -- [7]
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option1",
            ["Value"] = 0,
            ["Name"] = "Option 1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Plays a special animation showing the explosion time.",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option3",
            ["Value"] = 0,
            ["Name"] = "Option 3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 2,
            ["Max"] = 6,
            ["Desc"] = "Increases the health bar height by this value",
            ["Min"] = 0,
            ["Name"] = "Health Bar Height Mod",
            ["Value"] = 3,
            ["Key"] = "castBarHeight",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [4]
          {
            ["Type"] = 1,
            ["Key"] = "healthBarColor",
            ["Value"] = {
              1, -- [1]
              0.5843137254901961, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Health Bar Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Changes the health bar color to this one.",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Key"] = "option7",
            ["Value"] = 0,
            ["Name"] = "Option 7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 5,
            ["Key"] = "option6",
            ["Value"] = "Arrow:",
            ["Name"] = "Arrow:",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 4,
            ["Key"] = "showArrow",
            ["Value"] = true,
            ["Name"] = "Show Arrow",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Arrow alpha.",
            ["Min"] = 0,
            ["Name"] = "Arrow Alpha",
            ["Value"] = 0.5,
            ["Key"] = "arrowAlpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 12,
            ["Desc"] = "Arrow Width.",
            ["Min"] = 4,
            ["Key"] = "arrowWidth",
            ["Value"] = 8,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Arrow Width",
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 12,
            ["Desc"] = "Arrow Height.",
            ["Min"] = 4,
            ["Name"] = "Arrow Height",
            ["Value"] = 8,
            ["Key"] = "arrowHeight",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [11]
          {
            ["Type"] = 6,
            ["Key"] = "option13",
            ["Value"] = 0,
            ["Name"] = "Option 13",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [12]
          {
            ["Type"] = 5,
            ["Key"] = "option12",
            ["Value"] = "Dot Animation:",
            ["Name"] = "Dot Animation:",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [13]
          {
            ["Type"] = 1,
            ["Key"] = "dotColor",
            ["Value"] = {
              1, -- [1]
              0.615686274509804, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Dot Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Adjust the color of the dot animation.",
          }, -- [14]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Dot X Offset",
            ["Min"] = -10,
            ["Fraction"] = false,
            ["Value"] = 4,
            ["Key"] = "xOffset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Dot X Offset",
          }, -- [15]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Dot Y Offset",
            ["Min"] = -10,
            ["Name"] = "Dot Y Offset",
            ["Value"] = 3,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "yOffset",
          }, -- [16]
        },
        ["version"] = -1,
        ["Name"] = "Cast - Ultra Important [P]",
        ["NpcNames"] = {
        },
      }, -- [17]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        ["ScriptType"] = 3,
        ["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Time"] = 1607270474,
        ["semver"] = "",
        ["url"] = "",
        ["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
        ["Desc"] = "Auto set skull marker",
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Revision"] = 64,
        ["Options"] = {
          {
            ["Type"] = 5,
            ["Name"] = "Option 1",
            ["Value"] = "Auto set a raid target Skull on the unit.",
            ["Key"] = "option1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 6,
            ["Name"] = "Option 2",
            ["Value"] = 0,
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 4,
            ["Name"] = "Only in Combat",
            ["Value"] = false,
            ["Key"] = "onlyInCombat",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Set the mark only if the unit is in combat.",
          }, -- [3]
        },
        ["Name"] = "Auto Set Skull",
        ["Prio"] = 99,
        ["Author"] = "Aelerolor-Torghast",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        ["version"] = -1,
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["NpcNames"] = {
          "163520", -- [1]
          "163618", -- [2]
          "164506", -- [3]
        },
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
        ["Enabled"] = false,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
      }, -- [18]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
        ["Time"] = 1604607993,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
        ["Enabled"] = false,
        ["Revision"] = 406,
        ["semver"] = "",
        ["Author"] = "Izimode-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option6",
            ["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
            ["Name"] = "Option 6",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option4",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Key"] = "changeNameplateColor",
            ["Value"] = true,
            ["Name"] = "Change Nameplate Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "change to true to change the color",
          }, -- [4]
          {
            ["Type"] = 1,
            ["Key"] = "nameplateColor",
            ["Value"] = {
              1, -- [1]
              0, -- [2]
              0.5254901960784314, -- [3]
              1, -- [4]
            },
            ["Name"] = "Nameplate Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 2,
            ["Max"] = 6,
            ["Desc"] = "increase the nameplate height by this value",
            ["Min"] = 0,
            ["Name"] = "Nameplate Size Offset",
            ["Value"] = 0,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "nameplateSizeOffset",
          }, -- [6]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option4",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 1,
            ["Key"] = "dotsColor",
            ["Value"] = {
              1, -- [1]
              0.7137254901960784, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Dot Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [9]
        },
        ["version"] = -1,
        ["Name"] = "Unit - Main Target [P]",
        ["NpcNames"] = {
          "156212", -- [1]
          "168098", -- [2]
          179124, -- [3]
        },
      }, -- [19]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        ["Time"] = 1604354364,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
        ["Enabled"] = true,
        ["Revision"] = 206,
        ["semver"] = "",
        ["Author"] = "Aelerolor-Torghast",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
        },
        ["version"] = -1,
        ["Name"] = "Countdown",
        ["NpcNames"] = {
          "164427", -- [1]
          "164414", -- [2]
          "164185", -- [3]
          "164567", -- [4]
          "165408", -- [5]
        },
      }, -- [20]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
        ["Time"] = 1606506781,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
        ["Enabled"] = true,
        ["Revision"] = 109,
        ["semver"] = "",
        ["Author"] = "Aelerolor-Torghast",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
        ["NpcNames"] = {
          "164451", -- [1]
          "164463", -- [2]
          "164461", -- [3]
          "165946", -- [4]
          "164501", -- [5]
          "164218", -- [6]
        },
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Name"] = "Unit - Health Markers [P]",
        ["version"] = -1,
        ["Options"] = {
          {
            ["Type"] = 5,
            ["Key"] = "option1",
            ["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
            ["Name"] = "Option 1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 6,
            ["Key"] = "",
            ["Value"] = 0,
            ["Name"] = "blank line",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 1,
            ["Key"] = "indicatorColor",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Vertical Line Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Indicator color.",
          }, -- [3]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Indicator alpha.",
            ["Min"] = 0.1,
            ["Key"] = "indicatorAlpha",
            ["Value"] = 0.79,
            ["Name"] = "Vertical Line Alpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [4]
          {
            ["Type"] = 6,
            ["Name"] = "blank line",
            ["Value"] = 0,
            ["Key"] = "",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 1,
            ["Name"] = "Fill Color",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Key"] = "fillColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Fill color.",
          }, -- [6]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Fill alpha.",
            ["Min"] = 0,
            ["Name"] = "Fill Alpha",
            ["Value"] = 0.2,
            ["Fraction"] = true,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "fillAlpha",
          }, -- [7]
        },
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
      }, -- [21]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
        ["Time"] = 1618996775,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
        ["Enabled"] = true,
        ["Revision"] = 843,
        ["semver"] = "",
        ["Author"] = "Tercioo-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
        ["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
        ["SpellIds"] = {
          321828, -- [1]
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Blank Line",
            ["Value"] = 0,
            ["Key"] = "option1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "Option 2",
            ["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Name"] = "Option 3",
            ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
            ["Key"] = "option3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option4",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 4,
            ["Name"] = "Cast Bar Color Enabled",
            ["Value"] = true,
            ["Key"] = "useCastbarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "When enabled, changes the cast bar color,",
          }, -- [5]
          {
            ["Type"] = 1,
            ["Name"] = "Cast Bar Color",
            ["Value"] = {
              1, -- [1]
              0.4313725490196079, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "castbarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the cast bar.",
          }, -- [6]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Line",
            ["Value"] = 0,
            ["Key"] = "option7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
            ["Min"] = 0.05,
            ["Fraction"] = true,
            ["Value"] = 0.2,
            ["Key"] = "flashDuration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Flash Duration",
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Increases the cast bar height by this value",
            ["Min"] = 0,
            ["Fraction"] = false,
            ["Value"] = 0,
            ["Key"] = "castBarHeight",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Cast Bar Height Mod",
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
            ["Min"] = 0.1,
            ["Fraction"] = true,
            ["Value"] = 0.1,
            ["Key"] = "shakeDuration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Duration",
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 200,
            ["Desc"] = "How strong is the shake.",
            ["Min"] = 10,
            ["Name"] = "Shake Amplitude",
            ["Value"] = 25,
            ["Key"] = "shakeAmplitude",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [11]
          {
            ["Type"] = 2,
            ["Max"] = 80,
            ["Desc"] = "How fast the shake moves.",
            ["Min"] = 1,
            ["Name"] = "Shake Frequency",
            ["Value"] = 30,
            ["Key"] = "shakeFrequency",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [12]
        },
        ["version"] = -1,
        ["Name"] = "Cast - Tank Interrupt [P]",
        ["NpcNames"] = {
        },
      }, -- [22]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
        ["Time"] = 1604357453,
        ["url"] = "",
        ["Icon"] = 136048,
        ["Enabled"] = false,
        ["Revision"] = 233,
        ["semver"] = "",
        ["Author"] = "Celian-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Show the energy amount above the nameplate.",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Option 1",
            ["Value"] = 0,
            ["Key"] = "option1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "script desc",
            ["Value"] = "Show the power of the unit above the nameplate.",
            ["Key"] = "option3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Key"] = "option3",
            ["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
            ["Name"] = "add trigger",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Name"] = "Option 2",
            ["Value"] = 0,
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 4,
            ["Name"] = "Show at 80% of Energy",
            ["Value"] = true,
            ["Key"] = "showLater",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Key"] = "option2",
            ["Value"] = 0,
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 2,
            ["Max"] = 32,
            ["Desc"] = "Text size.",
            ["Min"] = 8,
            ["Key"] = "fontSize",
            ["Value"] = 16,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Text Size",
          }, -- [7]
          {
            ["Type"] = 1,
            ["Name"] = "Font Color",
            ["Value"] = {
              0.803921568627451, -- [1]
              0.803921568627451, -- [2]
              0.803921568627451, -- [3]
              1, -- [4]
            },
            ["Key"] = "fontColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the text.",
          }, -- [8]
          {
            ["Type"] = 4,
            ["Name"] = "Enable Text Outline",
            ["Value"] = true,
            ["Key"] = "outline",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "If enabled, the text uses outline.",
          }, -- [9]
        },
        ["version"] = -1,
        ["Name"] = "Unit - Show Energy [Plater]",
        ["NpcNames"] = {
          "164406", -- [1]
          "164407", -- [2]
          "162100", -- [3]
          "162099", -- [4]
          "162329", -- [5]
          "164558", -- [6]
        },
      }, -- [23]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
        ["Time"] = 1611844883,
        ["url"] = "",
        ["Icon"] = 135945,
        ["Enabled"] = true,
        ["Revision"] = 186,
        ["semver"] = "",
        ["Author"] = "Symantec-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Time to die Spiteful affix",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 5,
            ["Key"] = "option12",
            ["Value"] = "Time to Die",
            ["Name"] = "Time to Die",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 2,
            ["Max"] = 50,
            ["Desc"] = "",
            ["Min"] = 10,
            ["Key"] = "bgWidth",
            ["Value"] = 27,
            ["Name"] = "Width",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [2]
          {
            ["Type"] = 1,
            ["Key"] = "bgColor",
            ["Value"] = {
              0.5058823529411764, -- [1]
              0.07058823529411765, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Background Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 2,
            ["Max"] = 24,
            ["Desc"] = "",
            ["Min"] = 7,
            ["Key"] = "textSize",
            ["Value"] = 8,
            ["Name"] = "Text Size",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [4]
          {
            ["Type"] = 1,
            ["Key"] = "textColor",
            ["Value"] = {
              1, -- [1]
              0.5843137254901961, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Text Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Name"] = "Option 7",
            ["Value"] = 0,
            ["Key"] = "option7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 5,
            ["Key"] = "option11",
            ["Value"] = "Targeting",
            ["Name"] = "Targeting",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 4,
            ["Name"] = "Show Target instead of Name",
            ["Value"] = true,
            ["Key"] = "switchTargetName",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 4,
            ["Name"] = "Change Color if targeting You",
            ["Value"] = true,
            ["Key"] = "useTargetingColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [9]
          {
            ["Type"] = 1,
            ["Name"] = "Color if targeting You",
            ["Value"] = {
              0.07058823529411765, -- [1]
              0.6196078431372549, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "targetingColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [10]
          {
            ["Type"] = 6,
            ["Key"] = "option11",
            ["Value"] = 0,
            ["Name"] = "Option 11",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [11]
        },
        ["version"] = -1,
        ["Name"] = "M+ Spiteful",
        ["NpcNames"] = {
          "174773", -- [1]
        },
      }, -- [24]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
        ["Time"] = 1625697537,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
        ["Enabled"] = true,
        ["Revision"] = 282,
        ["semver"] = "",
        ["Author"] = "Ditador-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "When a spell resembles more a timer than a spell being cast",
        ["NpcNames"] = {
        },
        ["SpellIds"] = {
          354080, -- [1]
        },
        ["PlaterCore"] = 1,
        ["Name"] = "Cast - Castbar is Timer [P]",
        ["version"] = -1,
        ["Options"] = {
          {
            ["Type"] = 7,
            ["Key"] = "customSize",
            ["Value"] = {
              {
                "17", -- [1]
                "120, 16", -- [2]
              }, -- [1]
            },
            ["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
            ["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
          }, -- [1]
          {
            ["Type"] = 2,
            ["Max"] = 200,
            ["Desc"] = "",
            ["Min"] = 5,
            ["Fraction"] = false,
            ["Value"] = 120,
            ["Key"] = "width",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Cast Bar Width",
          }, -- [2]
          {
            ["Type"] = 2,
            ["Max"] = 32,
            ["Desc"] = "",
            ["Min"] = 5,
            ["Name"] = "Cast Bar Height",
            ["Value"] = 16,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "height",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Key"] = "option5",
            ["Value"] = 0,
            ["Name"] = "Option 5",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 2,
            ["Max"] = 32,
            ["Desc"] = "Set the size of the cast time",
            ["Min"] = 8,
            ["Fraction"] = false,
            ["Value"] = 12,
            ["Key"] = "timerFontSize",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Cast Timer Size",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Key"] = "option6",
            ["Value"] = 0,
            ["Name"] = "Option 6",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 5,
            ["Key"] = "option7",
            ["Value"] = "Time Separators",
            ["Name"] = "Option 7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 1,
            ["Key"] = "separatorColor",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              0.5992676615715027, -- [4]
            },
            ["Name"] = "Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 20,
            ["Desc"] = "",
            ["Min"] = 1,
            ["Fraction"] = false,
            ["Value"] = 1,
            ["Key"] = "separatorWidth",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Width",
          }, -- [9]
        },
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
      }, -- [25]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
        ["Time"] = 1625696653,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
        ["Enabled"] = true,
        ["Revision"] = 836,
        ["semver"] = "",
        ["Author"] = "Bombad�o-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Highlight the target name",
        ["NpcNames"] = {
        },
        ["SpellIds"] = {
          354173, -- [1]
        },
        ["PlaterCore"] = 1,
        ["Name"] = "Cast - Important Target [P]",
        ["version"] = -1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Option 1",
            ["Value"] = 0,
            ["Key"] = "option1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "Option 2",
            ["Value"] = "Shows the target name in a separate box",
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Name"] = "Option 4",
            ["Value"] = 0,
            ["Key"] = "option4",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 5,
            ["Name"] = "Flash",
            ["Value"] = "Flash:",
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 2,
            ["Max"] = 1.2,
            ["Desc"] = "How long is the flash played when the cast starts.",
            ["Min"] = 0.1,
            ["Fraction"] = true,
            ["Value"] = 0.8,
            ["Key"] = "flashDuration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Flash Duration",
          }, -- [6]
          {
            ["Type"] = 1,
            ["Name"] = "Flash Color",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Key"] = "flashColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the Flash",
          }, -- [7]
          {
            ["Type"] = 6,
            ["Name"] = "Option 7",
            ["Value"] = 0,
            ["Key"] = "option7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Shake:",
            ["Name"] = "Shake",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 0.5,
            ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
            ["Min"] = 0.1,
            ["Fraction"] = true,
            ["Value"] = 0.2,
            ["Key"] = "shakeDuration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Duration",
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "How strong is the shake.",
            ["Min"] = 1,
            ["Fraction"] = false,
            ["Value"] = 5,
            ["Key"] = "shakeAmplitude",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Amplitude",
          }, -- [11]
          {
            ["Type"] = 2,
            ["Max"] = 80,
            ["Desc"] = "How fast the shake moves.",
            ["Min"] = 1,
            ["Fraction"] = false,
            ["Value"] = 40,
            ["Key"] = "shakeFrequency",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Frequency",
          }, -- [12]
          {
            ["Type"] = 6,
            ["Name"] = "Option 13",
            ["Value"] = 0,
            ["Key"] = "option13",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [13]
          {
            ["Type"] = 5,
            ["Name"] = "Dot Animation",
            ["Value"] = "Dot Animation:",
            ["Key"] = "option14",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [14]
          {
            ["Type"] = 1,
            ["Name"] = "Dot Color",
            ["Value"] = {
              0.5647058823529412, -- [1]
              0.5647058823529412, -- [2]
              0.5647058823529412, -- [3]
              1, -- [4]
            },
            ["Key"] = "dotColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Adjust the color of the dots around the nameplate",
          }, -- [15]
          {
            ["Type"] = 2,
            ["Max"] = 20,
            ["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
            ["Min"] = -10,
            ["Name"] = "Dot X Offset",
            ["Value"] = 8,
            ["Key"] = "xOffset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [16]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
            ["Min"] = -10,
            ["Key"] = "yOffset",
            ["Value"] = 3,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Dot Y Offset",
          }, -- [17]
          {
            ["Type"] = 6,
            ["Name"] = "blank",
            ["Value"] = 0,
            ["Key"] = "option18",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [18]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [19]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [20]
          {
            ["Type"] = 6,
            ["Name"] = "blank",
            ["Value"] = 0,
            ["Key"] = "option18",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [21]
          {
            ["Type"] = 6,
            ["Name"] = "blank",
            ["Value"] = 0,
            ["Key"] = "option18",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [22]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [23]
          {
            ["Type"] = 5,
            ["Name"] = "Option 19",
            ["Value"] = "Cast Bar",
            ["Key"] = "option19",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [24]
          {
            ["Type"] = 4,
            ["Name"] = "Use Cast Bar Color",
            ["Value"] = true,
            ["Key"] = "useCastbarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Use cast bar color.",
          }, -- [25]
          {
            ["Type"] = 1,
            ["Name"] = "Cast Bar Color",
            ["Value"] = {
              0.4117647058823529, -- [1]
              1, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "castBarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Cast bar color.",
          }, -- [26]
          {
            ["Type"] = 6,
            ["Key"] = "option27",
            ["Value"] = 0,
            ["Name"] = "Option 27",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [27]
          {
            ["Type"] = 5,
            ["Key"] = "option28",
            ["Value"] = "Target Options",
            ["Name"] = "Option 28",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [28]
          {
            ["Type"] = 2,
            ["Max"] = 32,
            ["Desc"] = "",
            ["Min"] = 8,
            ["Fraction"] = false,
            ["Value"] = 14,
            ["Key"] = "targetNameSize",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Text Size",
          }, -- [29]
          {
            ["Type"] = 4,
            ["Key"] = "colorByClass",
            ["Value"] = true,
            ["Name"] = "Use Class Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [30]
          {
            ["Type"] = 1,
            ["Key"] = "textColor",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Text Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [31]
          {
            ["Type"] = 1,
            ["Key"] = "targetBgColor",
            ["Value"] = {
              0, -- [1]
              0, -- [2]
              0, -- [3]
              0.9846720322966576, -- [4]
            },
            ["Name"] = "Background Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [32]
          {
            ["Type"] = 1,
            ["Key"] = "targetBgBorderColor",
            ["Value"] = {
              0, -- [1]
              0, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Border Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [33]
          {
            ["Type"] = 2,
            ["Max"] = 160,
            ["Desc"] = "",
            ["Min"] = 30,
            ["Fraction"] = false,
            ["Value"] = 90,
            ["Key"] = "targetFrameWidth",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Frame Width",
          }, -- [34]
          {
            ["Type"] = 2,
            ["Max"] = 32,
            ["Desc"] = "",
            ["Min"] = 8,
            ["Name"] = "Frame Height",
            ["Value"] = 20,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "targetFrameHeight",
          }, -- [35]
        },
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
      }, -- [26]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
        ["Time"] = 1626467946,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
        ["Enabled"] = true,
        ["Revision"] = 1162,
        ["semver"] = "",
        ["Author"] = "Tercioo-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
        ["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
        ["NpcNames"] = {
        },
        ["SpellIds"] = {
          350421, -- [1]
          355787, -- [2]
          348513, -- [3]
        },
        ["PlaterCore"] = 1,
        ["Name"] = "Cast - Alert + Timer [P]",
        ["version"] = -1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Blank Line",
            ["Value"] = 0,
            ["Key"] = "option1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "Option 2",
            ["Value"] = "Cast start animation settings",
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option4",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Name"] = "Cast Bar Color Enabled",
            ["Value"] = true,
            ["Key"] = "useCastbarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "When enabled, changes the cast bar color,",
          }, -- [4]
          {
            ["Type"] = 1,
            ["Name"] = "Cast Bar Color",
            ["Value"] = {
              1, -- [1]
              0.4313725490196079, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "castbarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the cast bar.",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Line",
            ["Value"] = 0,
            ["Key"] = "option7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
            ["Min"] = 0.05,
            ["Fraction"] = true,
            ["Value"] = 0.4,
            ["Key"] = "flashDuration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Flash Duration",
          }, -- [7]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Increases the cast bar height by this value",
            ["Min"] = 0,
            ["Fraction"] = false,
            ["Value"] = 5,
            ["Key"] = "castBarHeight",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Cast Bar Height Mod",
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
            ["Min"] = 0.1,
            ["Fraction"] = true,
            ["Value"] = 0.2,
            ["Key"] = "shakeDuration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Duration",
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 100,
            ["Desc"] = "How strong is the shake.",
            ["Min"] = 2,
            ["Name"] = "Shake Amplitude",
            ["Value"] = 8,
            ["Key"] = "shakeAmplitude",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 80,
            ["Desc"] = "How fast the shake moves.",
            ["Min"] = 1,
            ["Name"] = "Shake Frequency",
            ["Value"] = 40,
            ["Key"] = "shakeFrequency",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [11]
          {
            ["Type"] = 7,
            ["Key"] = "timerList",
            ["Value"] = {
              {
                "350421", -- [1]
                "5", -- [2]
              }, -- [1]
              {
                "355787", -- [1]
                "15", -- [2]
              }, -- [2]
              {
                "348513", -- [1]
                "14", -- [2]
              }, -- [3]
              {
                "348513", -- [1]
                "14", -- [2]
              }, -- [4]
            },
            ["Name"] = "Timer (Key is SpellId and Value is Time)",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
            ["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
          }, -- [12]
        },
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
      }, -- [27]
    },
    ["aura_cache_by_name"] = {
      ["bolster"] = {
        209859, -- [1]
        275337, -- [2]
        280001, -- [3]
      },
      ["barbed shot"] = {
        62318, -- [1]
        217200, -- [2]
        246152, -- [3]
        246851, -- [4]
        246852, -- [5]
        246853, -- [6]
        246854, -- [7]
        284228, -- [8]
        284253, -- [9]
        284254, -- [10]
        284255, -- [11]
        284257, -- [12]
        284258, -- [13]
      },
      ["symbiote of g'huun"] = {
        277242, -- [1]
        277261, -- [2]
        277264, -- [3]
        277566, -- [4]
      },
    },
    ["cast_statusbar_spark_alpha"] = 0,
    ["aura2_y_offset"] = 12,
    ["aura_timer_text_anchor"] = {
      ["y"] = -5,
      ["side"] = 8,
    },
    ["buffs_on_aura2"] = true,
    ["health_selection_overlay"] = "REEEE",
    ["cast_statusbar_color_nointerrupt"] = {
      0.501960784313726, -- [1]
      0.501960784313726, -- [2]
      0.501960784313726, -- [3]
      1, -- [4]
    },
    ["npc_cache"] = {
      [65414] = {
        "Ethereal Sha", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [69899] = {
        "Farraki Sand Conjurer", -- [1]
        "Throne of Thunder", -- [2]
      },
      [127485] = {
        "Bilge Rat Looter", -- [1]
        "Tol Dagor", -- [2]
      },
      [165872] = {
        "Flesh Crafter", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [29064] = {
        "Anub'ar Necromancer", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [29128] = {
        "Anub'ar Prime Guard", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [97285] = {
        "Wind Rush Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [25417] = {
        "Raging Boiler", -- [1]
        "Halls of Stone", -- [2]
      },
      [69132] = {
        "High Priestess Mar'li", -- [1]
        "Throne of Thunder", -- [2]
      },
      [69388] = {
        "Zandalari Spear-Shaper", -- [1]
        "Throne of Thunder", -- [2]
      },
      [164338] = {
        "Mawsworn Guard", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [127486] = {
        "Ashvane Officer", -- [1]
        "Tol Dagor", -- [2]
      },
      [169457] = {
        "Bargast", -- [1]
        "Castle Nathria", -- [2]
      },
      [145399] = {
        "Wild Starcaller", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [178671] = {
        "Mawsworn Eradicator", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [164339] = {
        "Mawsworn Bowman", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [136186] = {
        "Tidesage Spiritualist", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [56713] = {
        "Master Snowdrift", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [69133] = {
        "Unharnessed Power", -- [1]
        "Throne of Thunder", -- [2]
      },
      [30664] = {
        "Azure Mage Slayer", -- [1]
        "Violet Hold", -- [2]
      },
      [61448] = {
        "Sik'thik Soldier", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [170483] = {
        "Atal'ai Deathwalker's Spirit", -- [1]
        "De Other Side", -- [2]
      },
      [140795] = {
        "Dunecircler the Bleak", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [145402] = {
        "Frenzied Wildheart", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [69134] = {
        "Kazra'jin", -- [1]
        "Throne of Thunder", -- [2]
      },
      [69390] = {
        "Zandalari Storm-Caller", -- [1]
        "Throne of Thunder", -- [2]
      },
      [11783] = {
        "Theradrim Shardling", -- [1]
        "Maraudon", -- [2]
      },
      [164342] = {
        "Mawsworn Defender", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [173044] = {
        "Stitching Assistant", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [178163] = {
        "Murkbrine Shorerunner", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [27977] = {
        "Krystallus", -- [1]
        "Halls of Stone", -- [2]
      },
      [159224] = {
        "Gryth'ax the Executioner", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [28169] = {
        "Risen Zombie", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [164343] = {
        "Mawsworn Debilitator", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [174069] = {
        "Hulking Gargon", -- [1]
        "Castle Nathria", -- [2]
      },
      [170486] = {
        "Atal'ai Devoted", -- [1]
        "De Other Side", -- [2]
      },
      [146940] = {
        "Primordial Mindbender", -- [1]
        "Crucible of Storms", -- [2]
      },
      [135167] = {
        "Spectral Berserker", -- [1]
        "Kings' Rest", -- [2]
      },
      [160249] = {
        "Spike Tentacle", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [16524] = {
        "Shade of Aran", -- [1]
        "Karazhan", -- [2]
      },
      [140798] = {
        "Cragcaw", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [174070] = {
        "Kennel Overseer", -- [1]
        "Castle Nathria", -- [2]
      },
      [134144] = {
        "Living Current", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [147965] = {
        "Volatile Azerite", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [164857] = {
        "Spriggan Mendbender", -- [1]
        "De Other Side", -- [2]
      },
      [174071] = {
        "Vicious Gargon", -- [1]
        "Castle Nathria", -- [2]
      },
      [170488] = {
        "Son of Hakkar", -- [1]
        "De Other Side", -- [2]
      },
      [93962] = {
        "Worgen Stalker", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [135169] = {
        "Spirit Drain Totem", -- [1]
        "The Underrot", -- [2]
      },
      [131586] = {
        "Banquet Steward", -- [1]
        "Waycrest Manor", -- [2]
      },
      [127490] = {
        "Knight Captain Valyri", -- [1]
        "Tol Dagor", -- [2]
      },
      [142336] = {
        "Pygmy Octopus", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [147967] = {
        "7th Legion Marine", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [170490] = {
        "Atal'ai High Priest", -- [1]
        "De Other Side", -- [2]
      },
      [163836] = {
        "Psychophage", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [147968] = {
        "Agitated Azerite", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [13447] = {
        "Corporal Noreg Stormpike", -- [1]
        "Alterac Valley", -- [2]
      },
      [166396] = {
        "Noble Skirmisher", -- [1]
        "Sanguine Depths", -- [2]
      },
      [9416] = {
        "Scarshield Worg", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [146945] = {
        "Swarming Voidspawn", -- [1]
        "Crucible of Storms", -- [2]
      },
      [156159] = {
        "Coldheart Javelineer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [173051] = {
        "Suppressor Xelors", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [130307] = {
        "Unstable Typhoon", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [151041] = {
        "Etruvis the Vassal", -- [1]
        "Crucible of Storms", -- [2]
      },
      [69906] = {
        "Zandalari High Priest", -- [1]
        "Throne of Thunder", -- [2]
      },
      [140292] = {
        "Snowfur Alpha", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [178171] = {
        "Stormforged Guardian", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [27978] = {
        "Sjonnir The Ironshaper", -- [1]
        "Halls of Stone", -- [2]
      },
      [134150] = {
        "Runecarver Sorn", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [139269] = {
        "Gloom Horror", -- [1]
        "Waycrest Manor", -- [2]
      },
      [164351] = {
        "Fading Shade", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [140293] = {
        "Snowfur Snarler", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [146436] = {
        "Tempting Siren", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [16461] = {
        "Concubine", -- [1]
        "Karazhan", -- [2]
      },
      [16525] = {
        "Spell Shade", -- [1]
        "Karazhan", -- [2]
      },
      [149508] = {
        "Ice Blocked Nathanos", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [162305] = {
        "Aqir Heartpiercer", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [138247] = {
        "Irontide Marauder", -- [1]
        "Siege of Boralus", -- [2]
      },
      [163841] = {
        "Amalgamation of Flesh", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [140295] = {
        "Snowfur Pup", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [162306] = {
        "Aqir Drone", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [166913] = {
        "Corrupted Guardian", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [171520] = {
        "Blighted Creeper", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [29834] = {
        "Drakkari Frenzy", -- [1]
        "Gundrak", -- [2]
      },
      [173568] = {
        "Anima Crazed Worker", -- [1]
        "Castle Nathria", -- [2]
      },
      [145927] = {
        "Starcaller Ellana", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [67093] = {
        "Sik'thik Battle-Mender", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [163331] = {
        "Stone Legion Nightblade", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [164355] = {
        "Manifestation of Pride", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [168962] = {
        "Reborn Phoenix", -- [1]
        "Castle Nathria", -- [2]
      },
      [56717] = {
        "Hoptallus", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [145928] = {
        "Skavis Nightstalker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [53006] = {
        "Spirit Link Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [30666] = {
        "Azure Captain", -- [1]
        "Violet Hold", -- [2]
      },
      [26635] = {
        "Risen Drakkari Warrior", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [69909] = {
        "Amani'shi Flame Chanter", -- [1]
        "Throne of Thunder", -- [2]
      },
      [26763] = {
        "Anomalus", -- [1]
        "The Nexus", -- [2]
      },
      [162309] = {
        "Kul'tharok", -- [1]
        "Theater of Pain", -- [2]
      },
      [62348] = {
        "Sik'thik Soldier", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [15687] = {
        "Moroes", -- [1]
        "Karazhan", -- [2]
      },
      [169476] = {
        "Highway Serf", -- [1]
        "Halls of Atonement", -- [2]
      },
      [162310] = {
        "Hunter", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [134157] = {
        "Shadow-Borne Warrior", -- [1]
        "Kings' Rest", -- [2]
      },
      [11784] = {
        "Theradrim Guardian", -- [1]
        "Maraudon", -- [2]
      },
      [69910] = {
        "Drakkari Frost Warden", -- [1]
        "Throne of Thunder", -- [2]
      },
      [5925] = {
        "Grounding Totem", -- [1]
        "The Battle for Gilneas", -- [2]
      },
      [27979] = {
        "Forged Iron Trogg", -- [1]
        "Halls of Stone", -- [2]
      },
      [134158] = {
        "Shadow-Borne Champion", -- [1]
        "Kings' Rest", -- [2]
      },
      [168966] = {
        "Brightsparkle", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [56718] = {
        "Hopper", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [162312] = {
        "Druid", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [138254] = {
        "Irontide Powdershot", -- [1]
        "Siege of Boralus", -- [2]
      },
      [61453] = {
        "Mu'Shiba", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [123146] = {
        "Torn Spirit", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [16526] = {
        "Sorcerous Shade", -- [1]
        "Karazhan", -- [2]
      },
      [149516] = {
        "Blackpaw", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [162313] = {
        "Mage", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [138255] = {
        "Ashvane Spotter", -- [1]
        "Siege of Boralus", -- [2]
      },
      [168968] = {
        "Plaguebound Fallen", -- [1]
        "Plaguefall", -- [2]
      },
      [145934] = {
        "Ivan the Mad", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [166921] = {
        "Blighted Creeper", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [159755] = {
        "The Grand Malleare", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [168457] = {
        "Stonewall Gargon", -- [1]
        "Sanguine Depths", -- [2]
      },
      [168969] = {
        "Gushing Slime", -- [1]
        "Plaguefall", -- [2]
      },
      [137233] = {
        "Plague Toad", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [30283] = {
        "Plague Walker", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [129802] = {
        "Earthrager", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [9097] = {
        "Scarshield Legionnaire", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [166411] = {
        "Forsworn Usurper", -- [1]
        "Spires of Ascension", -- [2]
      },
      [30667] = {
        "Azure Sorceror", -- [1]
        "Violet Hold", -- [2]
      },
      [26636] = {
        "Risen Drakkari Soulmage", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [135699] = {
        "Ashvane Jailer", -- [1]
        "Tol Dagor", -- [2]
      },
      [177161] = {
        "Mawsworn Raider", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [174090] = {
        "Nathrian Hierarch", -- [1]
        "Castle Nathria", -- [2]
      },
      [162317] = {
        "Gorechop", -- [1]
        "Theater of Pain", -- [2]
      },
      [151056] = {
        "Varanq'ul the Mighty", -- [1]
        "Crucible of Storms", -- [2]
      },
      [129547] = {
        "Blacktooth Knuckleduster", -- [1]
        "Freehold", -- [2]
      },
      [154128] = {
        "Blazing Elemental", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [139284] = {
        "Plague Doctor", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [168973] = {
        "High Torturer Darithos", -- [1]
        "Castle Nathria", -- [2]
      },
      [174092] = {
        "Nathrian Gargon Rider", -- [1]
        "Castle Nathria", -- [2]
      },
      [162319] = {
        "Paladin", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [151058] = {
        "Bubbling Blood", -- [1]
        "Crucible of Storms", -- [2]
      },
      [883] = {
        "Deer", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [136214] = {
        "Windspeaker Heldis", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [174093] = {
        "Nathrian Ranger", -- [1]
        "Castle Nathria", -- [2]
      },
      [162320] = {
        "Shaman", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [151059] = {
        "Eternal Guardian", -- [1]
        "Crucible of Storms", -- [2]
      },
      [28684] = {
        "Krik'thir the Gatewatcher", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [177165] = {
        "Mawsworn Destroyer", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [127757] = {
        "Reanimated Honor Guard", -- [1]
        "Atal'Dazar", -- [2]
      },
      [7269] = {
        "Scarab", -- [1]
        "Zul'Farrak", -- [2]
      },
      [163857] = {
        "Plaguebound Devoted", -- [1]
        "Plaguefall", -- [2]
      },
      [139799] = {
        "Ironhull Apprentice", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [92950] = {
        "Skyfire Marine", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [165905] = {
        "Son of Hakkar", -- [1]
        "De Other Side", -- [2]
      },
      [139800] = {
        "Galecaller Apprentice", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [26125] = {
        "Earthrumbler", -- [1]
        "Crucible of Storms", -- [2]
      },
      [30284] = {
        "Bonegrinder", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [129550] = {
        "Bilge Rat Padfoot", -- [1]
        "Freehold", -- [2]
      },
      [140825] = {
        "Thistlebrush Trickster", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [93719] = {
        "Fel Commander Azgalor", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [30668] = {
        "Azure Raider", -- [1]
        "Violet Hold", -- [2]
      },
      [26637] = {
        "Risen Drakkari Handler", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [127503] = {
        "Overseer Korgus", -- [1]
        "Tol Dagor", -- [2]
      },
      [70429] = {
        "Flesh'rok the Diseased", -- [1]
        "Throne of Thunder", -- [2]
      },
      [162325] = {
        "Warrior", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [167956] = {
        "Dark Acolyte", -- [1]
        "Sanguine Depths", -- [2]
      },
      [140827] = {
        "Giggling Thistlebrush", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [101398] = {
        "Psyfiend", -- [1]
        "Deepwind Gorge", -- [2]
      },
      [162326] = {
        "Priest", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [175123] = {
        "Warden Arkoban", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [27597] = {
        "Hulking Corpse", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [163862] = {
        "Defender of Many Eyes", -- [1]
        "Plaguefall", -- [2]
      },
      [139804] = {
        "Venture Inspector", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [132126] = {
        "Gilded Priestess", -- [1]
        "Atal'Dazar", -- [2]
      },
      [140828] = {
        "Morningdew", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [174100] = {
        "Nathrian Singuard", -- [1]
        "Castle Nathria", -- [2]
      },
      [27981] = {
        "Malformed Ooze", -- [1]
        "Halls of Stone", -- [2]
      },
      [134174] = {
        "Shadow-Borne Witch Doctor", -- [1]
        "Kings' Rest", -- [2]
      },
      [134686] = {
        "Mature Krolusk", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [24078] = {
        "Dragonflayer Metalworker", -- [1]
        "Utgarde Keep", -- [2]
      },
      [139805] = {
        "Mechanical Guardhound", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [129552] = {
        "Monzumi", -- [1]
        "Atal'Dazar", -- [2]
      },
      [165911] = {
        "Loyal Creation", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [133663] = {
        "Fanatical Headhunter", -- [1]
        "The Underrot", -- [2]
      },
      [139806] = {
        "Venture Demolitions Expert", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [136735] = {
        "Ashvane Marine", -- [1]
        "Tol Dagor", -- [2]
      },
      [162329] = {
        "Xav the Unfallen", -- [1]
        "Theater of Pain", -- [2]
      },
      [151068] = {
        "Tentacled Voidpriest", -- [1]
        "Crucible of Storms", -- [2]
      },
      [139807] = {
        "Venture Surveyor", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [129553] = {
        "Dinomancer Kish'o", -- [1]
        "Atal'Dazar", -- [2]
      },
      [165913] = {
        "Ghastly Parishioner", -- [1]
        "Halls of Atonement", -- [2]
      },
      [162330] = {
        "Demon Hunter", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [139808] = {
        "Venture Oaf", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [173080] = {
        "Wandering Death", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [59794] = {
        "Krik'thik Disruptor", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [162331] = {
        "Corrupted Neuron", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [71712] = {
        "Despair Spawn", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [30285] = {
        "Eye of Taldaram", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [168986] = {
        "Skeletal Raptor", -- [1]
        "De Other Side", -- [2]
      },
      [169498] = {
        "Plague Bomb", -- [1]
        "Plaguefall", -- [2]
      },
      [149535] = {
        "Icebound Image", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [13257] = {
        "Murgot Deepforge", -- [1]
        "Alterac Valley", -- [2]
      },
      [134691] = {
        "Static-charged Dervish", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [26638] = {
        "Risen Drakkari Bat Rider", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [139810] = {
        "Venture Middle Manager", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [26830] = {
        "Risen Drakkari Death Knight", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [135204] = {
        "Spectral Hex Priest", -- [1]
        "Kings' Rest", -- [2]
      },
      [168988] = {
        "Overgrowth", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [109592] = {
        "Felguard Legionnaire", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [27598] = {
        "Fetid Troll Corpse", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [167965] = {
        "Lubricator", -- [1]
        "De Other Side", -- [2]
      },
      [139812] = {
        "Venture Producer", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [140836] = {
        "Brightfire", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [27982] = {
        "Forged Iron Dwarf", -- [1]
        "Halls of Stone", -- [2]
      },
      [24079] = {
        "Dragonflayer Forge Master", -- [1]
        "Utgarde Keep", -- [2]
      },
      [24207] = {
        "Army of the Dead", -- [1]
        "Temple of Kotmogu", -- [2]
      },
      [165919] = {
        "Skeletal Marauder", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [131112] = {
        "Cutwater Striker", -- [1]
        "Tol Dagor", -- [2]
      },
      [16529] = {
        "Magical Horror", -- [1]
        "Karazhan", -- [2]
      },
      [165408] = {
        "Halkias", -- [1]
        "Halls of Atonement", -- [2]
      },
      [175646] = {
        "P.O.S.T. Master", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [152612] = {
        "Subjugator Klontzas", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [130325] = {
        "Deepsea Viseclaw", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [172064] = {
        "Unstable Larva", -- [1]
        "Plaguefall", -- [2]
      },
      [160291] = {
        "Ashwalker Assassin", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [165410] = {
        "High Adjudicator Aleez", -- [1]
        "Halls of Atonement", -- [2]
      },
      [138281] = {
        "Faceless Corruptor", -- [1]
        "The Underrot", -- [2]
      },
      [147495] = {
        "Rastari Enforcer", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [30286] = {
        "Frostbringer", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [140841] = {
        "Snickering Ripple", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [130582] = {
        "Despondent Scallywag", -- [1]
        "Tol Dagor", -- [2]
      },
      [26639] = {
        "Drakkari Shaman", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [139818] = {
        "Security Officer Durk", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [15689] = {
        "Netherspite", -- [1]
        "Karazhan", -- [2]
      },
      [134701] = {
        "Blood Effigy", -- [1]
        "The Underrot", -- [2]
      },
      [63508] = {
        "Xuen", -- [1]
        "Crucible of Storms", -- [2]
      },
      [78116] = {
        "Water Elemental", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [148522] = {
        "Ice Block", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [173604] = {
        "Sinister Antiquarian", -- [1]
        "Castle Nathria", -- [2]
      },
      [27983] = {
        "Dark Rune Protector", -- [1]
        "Halls of Stone", -- [2]
      },
      [171557] = {
        "Shade of Bargast", -- [1]
        "Castle Nathria", -- [2]
      },
      [24080] = {
        "Dragonflayer Weaponsmith", -- [1]
        "Utgarde Keep", -- [2]
      },
      [172581] = {
        "Slimelet", -- [1]
        "Theater of Pain", -- [2]
      },
      [165415] = {
        "Toiling Groundskeeper", -- [1]
        "Halls of Atonement", -- [2]
      },
      [125977] = {
        "Reanimation Totem", -- [1]
        "Atal'Dazar", -- [2]
      },
      [69927] = {
        "Zandalari Prelate", -- [1]
        "Throne of Thunder", -- [2]
      },
      [16530] = {
        "Mana Warp", -- [1]
        "Karazhan", -- [2]
      },
      [144941] = {
        "Akunda's Aspect", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [140335] = {
        "Nightscale Screecher", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [144942] = {
        "Spark Bot", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [68904] = {
        "Suen", -- [1]
        "Throne of Thunder", -- [2]
      },
      [163882] = {
        "Decaying Flesh Giant", -- [1]
        "Plaguefall", -- [2]
      },
      [140336] = {
        "Nightscale Wind Serpent", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [30287] = {
        "Plundering Geist", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [140337] = {
        "Nightscale Hatchling", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [173609] = {
        "Nathrian Conservator", -- [1]
        "Castle Nathria", -- [2]
      },
      [68905] = {
        "Lu'lin", -- [1]
        "Throne of Thunder", -- [2]
      },
      [9259] = {
        "Firebrand Grunt", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [62358] = {
        "Corrupt Droplet", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [133685] = {
        "Befouled Spirit", -- [1]
        "The Underrot", -- [2]
      },
      [27600] = {
        "Risen Shadowcaster", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [27984] = {
        "Dark Rune Stormcaller", -- [1]
        "Halls of Stone", -- [2]
      },
      [23953] = {
        "Prince Keleseth", -- [1]
        "Utgarde Keep", -- [2]
      },
      [56472] = {
        "Fragrant Lotus", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [140341] = {
        "Cloudscraper", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [173613] = {
        "Nathrian Registrar", -- [1]
        "Castle Nathria", -- [2]
      },
      [149555] = {
        "Abomination", -- [1]
        "Temple of Kotmogu", -- [2]
      },
      [101667] = {
        "Shielded Anchor", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [180780] = {
        "Dreadmaw", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [144949] = {
        "Canopy Stalker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [24849] = {
        "Proto-Drake Rider", -- [1]
        "Utgarde Keep", -- [2]
      },
      [178733] = {
        "Mawsworn Vanguard", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [146485] = {
        "Nevara Nightshade", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [135736] = {
        "Gore", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [140855] = {
        "Trickle", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [130333] = {
        "Gritplate Basilisk", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [175663] = {
        "Hylbrande", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [59544] = {
        "The Nodding Tiger", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [136249] = {
        "Guardian Elemental", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [59800] = {
        "Krik'thik Rager", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [149558] = {
        "Jaina's Tide Elemental", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [145975] = {
        "Stonehide Buck", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [163891] = {
        "Rotmarrow Slime", -- [1]
        "Plaguefall", -- [2]
      },
      [56473] = {
        "Flying Snow", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [140345] = {
        "Stormscreech", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [68397] = {
        "Lei Shen", -- [1]
        "Throne of Thunder", -- [2]
      },
      [145976] = {
        "Stonehide Bull", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [163892] = {
        "Rotting Slimeclaw", -- [1]
        "Plaguefall", -- [2]
      },
      [157238] = {
        "Prophet Skitra", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [145977] = {
        "Mammoth Stonehide", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [62360] = {
        "Corrupt Droplet", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [109604] = {
        "Felguard Legionnaire", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [130335] = {
        "Gritplate Crystaleye", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [163894] = {
        "Blighted Spinebreaker", -- [1]
        "Plaguefall", -- [2]
      },
      [59545] = {
        "The Golden Beetle", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [165430] = {
        "Malignant Spawn", -- [1]
        "Plaguefall", -- [2]
      },
      [27985] = {
        "Iron Golem Custodian", -- [1]
        "Halls of Stone", -- [2]
      },
      [146491] = {
        "Phantom of Retribution", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [151098] = {
        "Shadowy Appendage", -- [1]
        "Crucible of Storms", -- [2]
      },
      [24082] = {
        "Proto-Drake Handler", -- [1]
        "Utgarde Keep", -- [2]
      },
      [16170] = {
        "Coldmist Stalker", -- [1]
        "Karazhan", -- [2]
      },
      [177716] = {
        "So' Cartel Assassin", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [146492] = {
        "Phantom of Rage", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [61337] = {
        "Glintrok Ironhide", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [135231] = {
        "Spectral Brute", -- [1]
        "Kings' Rest", -- [2]
      },
      [16468] = {
        "Spectral Patron", -- [1]
        "Karazhan", -- [2]
      },
      [164920] = {
        "Drust Soulcleaver", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [174134] = {
        "Lord Evershade", -- [1]
        "Castle Nathria", -- [2]
      },
      [146493] = {
        "Phantom of Slaughter", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [156219] = {
        "Coldheart Scout", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [164921] = {
        "Drust Harvester", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [166969] = {
        "Baroness Frieda", -- [1]
        "Castle Nathria", -- [2]
      },
      [59546] = {
        "The Talking Fish", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [165946] = {
        "Mordretha, the Endless Empress", -- [1]
        "Theater of Pain", -- [2]
      },
      [178743] = {
        "Terrified Glitterfeather", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [166970] = {
        "Lord Stavros", -- [1]
        "Castle Nathria", -- [2]
      },
      [167994] = {
        "Ossified Conscript", -- [1]
        "Theater of Pain", -- [2]
      },
      [140353] = {
        "Brightscale Coilfang", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [129826] = {
        "Brineshell Snapclaw", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [178744] = {
        "Mawsworn Raider", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [158781] = {
        "Shredded Psyche", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [61338] = {
        "Glintrok Skulker", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [135235] = {
        "Spectral Beastmaster", -- [1]
        "Kings' Rest", -- [2]
      },
      [173114] = {
        "Invasive Decayfly", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [179257] = {
        "Burning Shade", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [140355] = {
        "Brightscale Screecher", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [149569] = {
        "Dazari Worshipper", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [167485] = {
        "Starving Mawrat", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [164414] = {
        "Reanimated Mage", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [164926] = {
        "Drust Boughbreaker", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [144963] = {
        "Kimbul's Aspect", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [134214] = {
        "Riftblade Kelain", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [71474] = {
        "Embodied Despair", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [172093] = {
        "Hearty Haunch", -- [1]
        "Plaguefall", -- [2]
      },
      [140357] = {
        "Venomreaver", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [56732] = {
        "Liu Flameheart", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [32593] = {
        "Skittering Swarmer", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [134215] = {
        "Duskrunner Lorinas", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [69427] = {
        "Dark Animus", -- [1]
        "Throne of Thunder", -- [2]
      },
      [172094] = {
        "Dissectible Dessert", -- [1]
        "Plaguefall", -- [2]
      },
      [156226] = {
        "Coldheart Binder", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [134216] = {
        "Shadeweaver Zarra", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [138823] = {
        "Bloodwake Wayfinder", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [135240] = {
        "Soul Essence", -- [1]
        "Waycrest Manor", -- [2]
      },
      [29266] = {
        "Xevozz", -- [1]
        "Violet Hold", -- [2]
      },
      [164929] = {
        "Tirnenn Villager", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [14763] = {
        "Dun Baldar South Marshal", -- [1]
        "Alterac Valley", -- [2]
      },
      [168001] = {
        "Empowered Flameforge Enforcer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [176703] = {
        "Frostbound Devoted", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [59804] = {
        "Gripping Hatred", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [71476] = {
        "Embodied Misery", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [168002] = {
        "Empowered Mawsworn Shackler", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [173633] = {
        "Nathrian Archivist", -- [1]
        "Castle Nathria", -- [2]
      },
      [159301] = {
        "General Kaal", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [168003] = {
        "Empowered Coldheart Ascendant", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [102701] = {
        "Mo'arg Painbringer", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [157254] = {
        "Tek'ris", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [128551] = {
        "Irontide Mastiff", -- [1]
        "Freehold", -- [2]
      },
      [71477] = {
        "Embodied Gloom", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [168004] = {
        "Empowered Imperial Consular", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [15691] = {
        "The Curator", -- [1]
        "Karazhan", -- [2]
      },
      [157255] = {
        "Aqir Drone", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [130087] = {
        "Irontide Raider", -- [1]
        "Tol Dagor", -- [2]
      },
      [167493] = {
        "Venomous Sniper", -- [1]
        "Plaguefall", -- [2]
      },
      [168005] = {
        "Empowered Deadsoul Shambler", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [102702] = {
        "Wrathguard Dreadblade", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [157256] = {
        "Aqir Darter", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [11948] = {
        "Vanndar Stormpike", -- [1]
        "Alterac Valley", -- [2]
      },
      [23956] = {
        "Dragonflayer Strategist", -- [1]
        "Utgarde Keep", -- [2]
      },
      [71478] = {
        "Embodied Anguish", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [135246] = {
        "\"Stabby\" Lottie", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [16171] = {
        "Coldmist Widow", -- [1]
        "Karazhan", -- [2]
      },
      [144972] = {
        "Kaldorei Huntress", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [56862] = {
        "Drunken Hozen Brawler", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [102191] = {
        "Dreadhound", -- [1]
        "Azsuna", -- [2]
      },
      [168007] = {
        "Empowered Mawsworn Soulbinder", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [16470] = {
        "Ghostly Philanthropist", -- [1]
        "Karazhan", -- [2]
      },
      [144973] = {
        "Kaldorei Sentinel", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [179269] = {
        "Oasis Security", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [71479] = {
        "He Softfoot", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [135248] = {
        "Briona the Bloodthirsty", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [29395] = {
        "Erekem Guard", -- [1]
        "Violet Hold", -- [2]
      },
      [102192] = {
        "Dread Sharpshooter", -- [1]
        "Azsuna", -- [2]
      },
      [135761] = {
        "Thundering Totem", -- [1]
        "Kings' Rest", -- [2]
      },
      [153165] = {
        "Custodian Thonar", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [8909] = {
        "Fireguard", -- [1]
        "Blackrock Depths", -- [2]
      },
      [159308] = {
        "Zealous Adherent", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [151630] = {
        "Void Ichor", -- [1]
        "Crucible of Storms", -- [2]
      },
      [164427] = {
        "Reanimated Warrior", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [173641] = {
        "Nathrian Gargon", -- [1]
        "Castle Nathria", -- [2]
      },
      [56863] = {
        "Sleepy Hozen Brawler", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [134739] = {
        "Purification Construct", -- [1]
        "Kings' Rest", -- [2]
      },
      [127019] = {
        "Training Dummy", -- [1]
        "Freehold", -- [2]
      },
      [135763] = {
        "Voidling", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [155215] = {
        "Faeleaf Lasher", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [71993] = {
        "Desperation Spawn", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [152656] = {
        "Deadsoul Stalker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [170572] = {
        "Atal'ai Hoodoo Hexxer", -- [1]
        "De Other Side", -- [2]
      },
      [155216] = {
        "Faeleaf Warden", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [135765] = {
        "Torrent Totem", -- [1]
        "Kings' Rest", -- [2]
      },
      [90677] = {
        "Wrathguard Dreadblade", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [138837] = {
        "Zara'thik Ambershaper", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [135254] = {
        "Irontide Raider", -- [1]
        "Tol Dagor", -- [2]
      },
      [156241] = {
        "Monstrous Guardian", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [14188] = {
        "Dirk Swindle", -- [1]
        "Alterac Valley", -- [2]
      },
      [65310] = {
        "Turnip Punching Bag", -- [1]
        "Kings' Rest", -- [2]
      },
      [138838] = {
        "Zara'thik Mantid", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [16407] = {
        "Spectral Servant", -- [1]
        "Karazhan", -- [2]
      },
      [16471] = {
        "Skeletal Usher", -- [1]
        "Karazhan", -- [2]
      },
      [173134] = {
        "Darksworn Goliath", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [10381] = {
        "Ravaged Cadaver", -- [1]
        "Stratholme", -- [2]
      },
      [134232] = {
        "Hired Assassin", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [155219] = {
        "Gormling Spitter", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [14764] = {
        "Icewing Marshal", -- [1]
        "Alterac Valley", -- [2]
      },
      [138840] = {
        "Zara'thik Impaler", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [59552] = {
        "The Crybaby Hozen", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [173136] = {
        "Blightsmasher", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [155221] = {
        "Faeleaf Tender", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [135258] = {
        "Irontide Marauder", -- [1]
        "Siege of Boralus", -- [2]
      },
      [156245] = {
        "Grand Automaton", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [153174] = {
        "Watchers of Death", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [149591] = {
        "Rastari Marksman", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [61216] = {
        "Glintrok Hexxer", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [151127] = {
        "Lord of Torment", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [70205] = {
        "Weisheng", -- [1]
        "Throne of Thunder", -- [2]
      },
      [174162] = {
        "Countess Gloomveil", -- [1]
        "Castle Nathria", -- [2]
      },
      [91704] = {
        "Anchoring Crystal", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [151128] = {
        "Lord of Locks", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [131677] = {
        "Heartsbane Runeweaver", -- [1]
        "Waycrest Manor", -- [2]
      },
      [148569] = {
        "Breakwater Elemental", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [11789] = {
        "Deep Borer", -- [1]
        "Maraudon", -- [2]
      },
      [27733] = {
        "Ghoul Minion", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [70206] = {
        "Untrained Quilen", -- [1]
        "Throne of Thunder", -- [2]
      },
      [155225] = {
        "Faeleaf Grovesinger", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [168022] = {
        "Slime Tentacle", -- [1]
        "Plaguefall", -- [2]
      },
      [138846] = {
        "Amberwinged Mindsinger", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [135263] = {
        "Ashvane Spotter", -- [1]
        "Siege of Boralus", -- [2]
      },
      [16472] = {
        "Phantom Stagehand", -- [1]
        "Karazhan", -- [2]
      },
      [173142] = {
        "Dread Feaster", -- [1]
        "Castle Nathria", -- [2]
      },
      [170071] = {
        "Mawsworn Shadestalker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [173655] = {
        "Mistveil Matriarch", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [81725] = {
        "Muk'Mar Raz", -- [1]
        "Ashran", -- [2]
      },
      [59426] = {
        "Bopper", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [173145] = {
        "Gorging Mite", -- [1]
        "Castle Nathria", -- [2]
      },
      [56867] = {
        "Fiery Trickster", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [138338] = {
        "Reanimated Guardian", -- [1]
        "The Underrot", -- [2]
      },
      [9262] = {
        "Firebrand Invoker", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [173146] = {
        "Winged Ravager", -- [1]
        "Castle Nathria", -- [2]
      },
      [144993] = {
        "Crazed Thistlebear", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [131685] = {
        "Runic Disciple", -- [1]
        "Waycrest Manor", -- [2]
      },
      [165469] = {
        "Nathrian Enforcer", -- [1]
        "Castle Nathria", -- [2]
      },
      [27734] = {
        "Crypt Fiend", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [165470] = {
        "Nathrian Executor", -- [1]
        "Castle Nathria", -- [2]
      },
      [164447] = {
        "Skuld", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [165471] = {
        "Nathrian Duelist", -- [1]
        "Castle Nathria", -- [2]
      },
      [137830] = {
        "Pallid Gorger", -- [1]
        "Waycrest Manor", -- [2]
      },
      [16409] = {
        "Phantom Guest", -- [1]
        "Karazhan", -- [2]
      },
      [16473] = {
        "Spectral Performer", -- [1]
        "Karazhan", -- [2]
      },
      [169055] = {
        "Marrow Scraper", -- [1]
        "Theater of Pain", -- [2]
      },
      [165472] = {
        "Nathrian Siphoner", -- [1]
        "Castle Nathria", -- [2]
      },
      [10382] = {
        "Mangled Cadaver", -- [1]
        "Stratholme", -- [2]
      },
      [10414] = {
        "Patchwork Horror", -- [1]
        "Stratholme", -- [2]
      },
      [132713] = {
        "Mogul Razdunk", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [174175] = {
        "Loyal Stoneborn", -- [1]
        "Halls of Atonement", -- [2]
      },
      [14765] = {
        "Stonehearth Marshal", -- [1]
        "Alterac Valley", -- [2]
      },
      [172128] = {
        "Hero", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [164450] = {
        "Dealer Xy'exa", -- [1]
        "De Other Side", -- [2]
      },
      [148582] = {
        "Stormbound Guardian", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [165474] = {
        "Nathrian Assassin", -- [1]
        "Castle Nathria", -- [2]
      },
      [10990] = {
        "Alterac Ram", -- [1]
        "Alterac Valley", -- [2]
      },
      [164451] = {
        "Dessia the Decapitator", -- [1]
        "Theater of Pain", -- [2]
      },
      [134251] = {
        "Seneschal M'bara", -- [1]
        "Kings' Rest", -- [2]
      },
      [94271] = {
        "Skyfire Engineer", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [148584] = {
        "Archmage Mordent Evenshade", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [127799] = {
        "Dazar'ai Honor Guard", -- [1]
        "Atal'Dazar", -- [2]
      },
      [151144] = {
        "Hati", -- [1]
        "Crucible of Storms", -- [2]
      },
      [69702] = {
        "Ritualist Xeron", -- [1]
        "Throne of Thunder", -- [2]
      },
      [149098] = {
        "Maiev Shadowsong", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [23960] = {
        "Dragonflayer Runecaster", -- [1]
        "Utgarde Keep", -- [2]
      },
      [180323] = {
        "Fatespawn Monstrosity", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [164967] = {
        "Doctor Ickus", -- [1]
        "Plaguefall", -- [2]
      },
      [165479] = {
        "Court Enforcer", -- [1]
        "Castle Nathria", -- [2]
      },
      [149611] = {
        "Apetagonizer 3000", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [12206] = {
        "Primordial Behemoth", -- [1]
        "Maraudon", -- [2]
      },
      [175205] = {
        "Baleful Shadow", -- [1]
        "Castle Nathria", -- [2]
      },
      [16410] = {
        "Spectral Retainer", -- [1]
        "Karazhan", -- [2]
      },
      [134768] = {
        "Sandskitter the Relentless", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [172647] = {
        "Parasitic Infestor", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [29335] = {
        "Anub'ar Webspinner", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [165481] = {
        "Court Assassin", -- [1]
        "Castle Nathria", -- [2]
      },
      [93506] = {
        "Skyfire Gryphon Rider", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [163947] = {
        "Psychophage", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [173161] = {
        "Lady Sinsear", -- [1]
        "Castle Nathria", -- [2]
      },
      [165483] = {
        "Court Hierarch", -- [1]
        "Castle Nathria", -- [2]
      },
      [65317] = {
        "Xiang", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [9199] = {
        "Spirestone Enforcer", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [94275] = {
        "Skyfire Powder Monkey", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [143985] = {
        "Absorb-o-Tron", -- [1]
        "Crucible of Storms", -- [2]
      },
      [173162] = {
        "Lord Evershade", -- [1]
        "Castle Nathria", -- [2]
      },
      [141938] = {
        "Ashvane Sniper", -- [1]
        "Siege of Boralus", -- [2]
      },
      [167532] = {
        "Heavin the Breaker", -- [1]
        "Theater of Pain", -- [2]
      },
      [164461] = {
        "Sathel the Accursed", -- [1]
        "Theater of Pain", -- [2]
      },
      [173163] = {
        "Baron Duskhollow", -- [1]
        "Castle Nathria", -- [2]
      },
      [173675] = {
        "Ghostly Contender", -- [1]
        "Theater of Pain", -- [2]
      },
      [157807] = {
        "Mawsworn Soulweaver", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [141939] = {
        "Ashvane Spotter", -- [1]
        "Siege of Boralus", -- [2]
      },
      [167533] = {
        "Advent Nevermore", -- [1]
        "Theater of Pain", -- [2]
      },
      [27736] = {
        "Patchwork Construct", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [173164] = {
        "Countess Gloomveil", -- [1]
        "Castle Nathria", -- [2]
      },
      [170093] = {
        "Mawsworn Seeker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [23961] = {
        "Dragonflayer Ironhelm", -- [1]
        "Utgarde Keep", -- [2]
      },
      [167534] = {
        "Rek the Hardened", -- [1]
        "Theater of Pain", -- [2]
      },
      [164463] = {
        "Paceran the Virulent", -- [1]
        "Theater of Pain", -- [2]
      },
      [157809] = {
        "Mawsworn Darkcaster", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [130620] = {
        "Frostfencer Seraphi", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [155250] = {
        "Decayspeaker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [164464] = {
        "Xira the Underhanded", -- [1]
        "Theater of Pain", -- [2]
      },
      [70219] = {
        "Putrid Waste", -- [1]
        "Throne of Thunder", -- [2]
      },
      [157810] = {
        "Mawsworn Endbringer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [162417] = {
        "Anubisath Sentinel", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [142454] = {
        "Ashtail Bandicoon", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [167536] = {
        "Harugia the Bloodthirsty", -- [1]
        "Theater of Pain", -- [2]
      },
      [130621] = {
        "Squallshaper Bryson", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [175727] = {
        "Soulrender Dormazain", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [167538] = {
        "Dokigg the Brutalizer", -- [1]
        "Theater of Pain", -- [2]
      },
      [180335] = {
        "Cartel Smuggler", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [129598] = {
        "Freehold Pack Mule", -- [1]
        "Freehold", -- [2]
      },
      [146552] = {
        "Kul Tiran Tideweaver", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [175729] = {
        "Remnant of Ner'zhul", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [180336] = {
        "Cartel Wiseguy", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [174194] = {
        "Court Executor", -- [1]
        "Castle Nathria", -- [2]
      },
      [150136] = {
        "Faceless Render", -- [1]
        "Uldir Scenario", -- [2]
      },
      [146553] = {
        "Kul Tiran Strongarm", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [175730] = {
        "Fatescribe Roh-Kalo", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [62632] = {
        "Sik'thik Engineer", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [129599] = {
        "Cutwater Knife Juggler", -- [1]
        "Freehold", -- [2]
      },
      [158327] = {
        "Crackling Shard", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [175731] = {
        "Guardian of the First Ones", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [27737] = {
        "Risen Zombie", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [136829] = {
        "Witherbranch Axe Thrower", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [175732] = {
        "Sylvanas Windrunner", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [28249] = {
        "Devouring Ghoul", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [129600] = {
        "Bilge Rat Brinescale", -- [1]
        "Freehold", -- [2]
      },
      [174197] = {
        "Battlefield Ritualist", -- [1]
        "Theater of Pain", -- [2]
      },
      [150139] = {
        "K'thxx the Void Hunter", -- [1]
        "Uldir Scenario", -- [2]
      },
      [69455] = {
        "Zandalari Water-Binder", -- [1]
        "Throne of Thunder", -- [2]
      },
      [16540] = {
        "Shadow Pillager", -- [1]
        "Karazhan", -- [2]
      },
      [136831] = {
        "Witherbranch Witch Doctor", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [62633] = {
        "Sik'thik Builder", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [129601] = {
        "Cutwater Harpooner", -- [1]
        "Freehold", -- [2]
      },
      [167033] = {
        "Putrid Shambler", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [69712] = {
        "Ji-Kun", -- [1]
        "Throne of Thunder", -- [2]
      },
      [70224] = {
        "Rotting Scavenger", -- [1]
        "Throne of Thunder", -- [2]
      },
      [137345] = {
        "Officer Fairbanks", -- [1]
        "Stormwind Escape from Stockades", -- [2]
      },
      [138369] = {
        "Footbomb Hooligan", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [134786] = {
        "Spineclaw Sandsnapper", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [168058] = {
        "Infused Quill-feather", -- [1]
        "Sanguine Depths", -- [2]
      },
      [148607] = {
        "Kal'ia Pa'kuaya", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [56875] = {
        "Krik'thik Demolisher", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [134787] = {
        "Spineclaw Crab", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [164476] = {
        "Tortured Amalgamation", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [173178] = {
        "Stone Legion Goliath", -- [1]
        "Castle Nathria", -- [2]
      },
      [132740] = {
        "Venomscale Hydra", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [166524] = {
        "Deathwalker", -- [1]
        "Theater of Pain", -- [2]
      },
      [134788] = {
        "Spineclaw Rockshell", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [168572] = {
        "Fungi Stormer", -- [1]
        "Plaguefall", -- [2]
      },
      [134789] = {
        "Monstrous Spineclaw", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [163966] = {
        "Dread Siphonist", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [148610] = {
        "Druid of the Branch", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [59819] = {
        "Artillery", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [168574] = {
        "Pestilent Harvester", -- [1]
        "Plaguefall", -- [2]
      },
      [148611] = {
        "Yoru'cha", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [149635] = {
        "Blooming Protector", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [69459] = {
        "Bound Water Elemental", -- [1]
        "Throne of Thunder", -- [2]
      },
      [180348] = {
        "Cartel Muscle", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [70227] = {
        "Skittering Spiderling", -- [1]
        "Throne of Thunder", -- [2]
      },
      [132744] = {
        "Frostscale Hydra", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [137351] = {
        "Stormwind City Guard", -- [1]
        "Stormwind Escape from Stockades", -- [2]
      },
      [134280] = {
        "Vindicator Baatul", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [163457] = {
        "Forsworn Vanguard", -- [1]
        "Spires of Ascension", -- [2]
      },
      [135816] = {
        "Vilefiend", -- [1]
        "Alterac Valley", -- [2]
      },
      [148613] = {
        "Commander Broadside", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [132745] = {
        "Frostscale Wanderer", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [163458] = {
        "Forsworn Castigator", -- [1]
        "Spires of Ascension", -- [2]
      },
      [148614] = {
        "Kul Tiran Cannoneer", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [136841] = {
        "Thu'zun the Vile", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [174208] = {
        "Court Executor", -- [1]
        "Castle Nathria", -- [2]
      },
      [163459] = {
        "Forsworn Mender", -- [1]
        "Spires of Ascension", -- [2]
      },
      [135818] = {
        "Gust Soldier", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [72276] = {
        "Amalgam of Corruption", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [56877] = {
        "Raigonn", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [134283] = {
        "Anchorite Lanna", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [134795] = {
        "Veiled Hermit", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [168579] = {
        "Fen Hatchling", -- [1]
        "Plaguefall", -- [2]
      },
      [174210] = {
        "Blighted Sludge-Spewer", -- [1]
        "Theater of Pain", -- [2]
      },
      [134284] = {
        "Fallen Deathspeaker", -- [1]
        "The Underrot", -- [2]
      },
      [134796] = {
        "King Spineclaw", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [168580] = {
        "Plagueborer", -- [1]
        "Plaguefall", -- [2]
      },
      [148617] = {
        "Akunda the Devout", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [27483] = {
        "King Dred", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [106317] = {
        "Storm Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [131726] = {
        "Gunnolf the Ferocious", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [70230] = {
        "Zandalari Blade Initiate", -- [1]
        "Throne of Thunder", -- [2]
      },
      [134286] = {
        "Archmage Tamuura", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [131727] = {
        "Fenrae the Cunning", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [173189] = {
        "Nathrian Hawkeye", -- [1]
        "Castle Nathria", -- [2]
      },
      [161416] = {
        "Aqir Shadowcrafter", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [61485] = {
        "General Pa'valak", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [131728] = {
        "Raul the Tenacious", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [173190] = {
        "Court Hawkeye", -- [1]
        "Castle Nathria", -- [2]
      },
      [175238] = {
        "Arch-Tyrant Zerios", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [120651] = {
        "Explosives", -- [1]
        "Waycrest Manor", -- [2]
      },
      [131729] = {
        "Lyco", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [148621] = {
        "Jek'kwa", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [72791] = {
        "Lingering Corruption", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [179334] = {
        "Portalmancer Zo'nyy", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [106319] = {
        "Ember Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [140432] = {
        "Craghoof Leaper", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [179847] = {
        "Shadowsteel Horror", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [148623] = {
        "Echo of Gonk", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [165515] = {
        "Depraved Darkblade", -- [1]
        "Halls of Atonement", -- [2]
      },
      [178824] = {
        "Borr-Gahn", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [69465] = {
        "Jin'rokh the Breaker", -- [1]
        "Throne of Thunder", -- [2]
      },
      [155790] = {
        "Mawsworn Acolyte", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [26716] = {
        "Azure Warder", -- [1]
        "The Nexus", -- [2]
      },
      [148624] = {
        "Echo of Pa'ku", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [78935] = {
        "Rubyspike Goren", -- [1]
        "Ashran", -- [2]
      },
      [148625] = {
        "Echo of Krag'wa", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [130635] = {
        "Stonefury", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [106321] = {
        "Tailwind Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [173708] = {
        "Anchoring Rune", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [78936] = {
        "Goren Iron-eater", -- [1]
        "Ashran", -- [2]
      },
      [23965] = {
        "Frost Tomb", -- [1]
        "Utgarde Keep", -- [2]
      },
      [134806] = {
        "Bloodsnapper", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [155793] = {
        "Skeletal Remains", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [102227] = {
        "Dread Harpooner", -- [1]
        "Azsuna", -- [2]
      },
      [16415] = {
        "Skeletal Waiter", -- [1]
        "Karazhan", -- [2]
      },
      [168591] = {
        "Ravenous Dreadbat", -- [1]
        "Sanguine Depths", -- [2]
      },
      [156818] = {
        "Wrathion", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [66652] = {
        "Lesser Volatile Energy", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [29340] = {
        "Anub'ar Brood Keeper", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [165521] = {
        "Lady Inerva Darkvein", -- [1]
        "Castle Nathria", -- [2]
      },
      [70236] = {
        "Zandalari Storm-Caller", -- [1]
        "Throne of Thunder", -- [2]
      },
      [169617] = {
        "Duraka the Unbreakable", -- [1]
        "Sanguine Depths", -- [2]
      },
      [60208] = {
        "Hopling", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [135322] = {
        "The Golden Serpent", -- [1]
        "Kings' Rest", -- [2]
      },
      [168594] = {
        "Chamber Sentinel", -- [1]
        "Sanguine Depths", -- [2]
      },
      [148631] = {
        "Unexploded Ordnance", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [177808] = {
        "Armored Overseer", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [130638] = {
        "Vicejaw Crocolisk", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [148120] = {
        "Kul Tiran Marine", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [136347] = {
        "Tidesage Initiate", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [173714] = {
        "Mistveil Nightblossom", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [164501] = {
        "Mistcaller", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [140443] = {
        "Muskflank Charger", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [130639] = {
        "Vicejaw Chomper", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [147098] = {
        "Spirit of Xuen", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [140444] = {
        "Muskflank Bull", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [60849] = {
        "Jade Serpent Statue", -- [1]
        "Silvershard Mines", -- [2]
      },
      [130640] = {
        "Vicejaw Sawtooth", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [130896] = {
        "Blackout Barrel", -- [1]
        "Freehold", -- [2]
      },
      [139422] = {
        "Scaled Krolusk Tamer", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [94809] = {
        "Knight-Captain Brimley", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [145053] = {
        "Eldritch Abomination", -- [1]
        "Crucible of Storms", -- [2]
      },
      [171159] = {
        "Unraveling Soul Remnant", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [29213] = {
        "Anub'ar Darter", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [140447] = {
        "Demolishing Terror", -- [1]
        "Siege of Boralus", -- [2]
      },
      [165529] = {
        "Depraved Collector", -- [1]
        "Halls of Atonement", -- [2]
      },
      [122963] = {
        "Rezan", -- [1]
        "Atal'Dazar", -- [2]
      },
      [164506] = {
        "Ancient Captain", -- [1]
        "Theater of Pain", -- [2]
      },
      [136353] = {
        "Colossal Tentacle", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [173720] = {
        "Mistveil Gorgegullet", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [139425] = {
        "Crazed Incubator", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [177816] = {
        "Interrogation Specialist", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [69473] = {
        "Ra-den", -- [1]
        "Throne of Thunder", -- [2]
      },
      [127315] = {
        "Reanimation Totem", -- [1]
        "Atal'Dazar", -- [2]
      },
      [26782] = {
        "Crystalline Keeper", -- [1]
        "The Nexus", -- [2]
      },
      [177817] = {
        "Support Officer", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [13617] = {
        "Stormpike Stable Master", -- [1]
        "Alterac Valley", -- [2]
      },
      [145058] = {
        "Shadefeather Raven", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [158367] = {
        "Basher Tentacle", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [69474] = {
        "Kresh the Ripper", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [122965] = {
        "Vol'kaal", -- [1]
        "Atal'Dazar", -- [2]
      },
      [164510] = {
        "Shambling Arbalest", -- [1]
        "Theater of Pain", -- [2]
      },
      [94812] = {
        "7th Legion Paratrooper", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [145059] = {
        "Cunning Nightwing", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [19872] = {
        "Lady Catriona Von'Indi", -- [1]
        "Karazhan", -- [2]
      },
      [139429] = {
        "Stonebound Warrior", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [135846] = {
        "Sand-Crusted Striker", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [56884] = {
        "Corrupted Taran Zhu", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [146596] = {
        "Darkscale Myrmidon", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [69475] = {
        "Arcanital Tula'chek", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [16481] = {
        "Ghastly Haunt", -- [1]
        "Karazhan", -- [2]
      },
      [16545] = {
        "Ethereal Spellfilcher", -- [1]
        "Karazhan", -- [2]
      },
      [147621] = {
        "Dark Iron Vanguard", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [155812] = {
        "Mawsworn Ritualist", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [140968] = {
        "Garnetback Striker", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [168098] = {
        "Empowered Coldheart Agent", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [129366] = {
        "Bilge Rat Buccaneer", -- [1]
        "Siege of Boralus", -- [2]
      },
      [173729] = {
        "Manifestation of Pride", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [30622] = {
        "Jesutruse", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [168099] = {
        "Empowered Coldheart Javelineer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [139946] = {
        "Heart Guardian", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [70245] = {
        "Training Dummy", -- [1]
        "Throne of Thunder", -- [2]
      },
      [145065] = {
        "Fledgling Nightwing", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [170147] = {
        "Volatile Memory", -- [1]
        "De Other Side", -- [2]
      },
      [171171] = {
        "Mawsworn Archer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [134828] = {
        "Aqualing", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [180385] = {
        "Condemned Soul Remnant", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [129367] = {
        "Bilge Rat Tempest", -- [1]
        "Siege of Boralus", -- [2]
      },
      [158375] = {
        "Corruptor Tentacle", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [171172] = {
        "Mawsworn Shackler", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [168101] = {
        "Empowered Deadsoul Shade", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [27743] = {
        "Infinite Hunter", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [70246] = {
        "Spirit Flayer", -- [1]
        "Throne of Thunder", -- [2]
      },
      [145067] = {
        "Shadefeather Hatchling", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [158376] = {
        "Psychus", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [171173] = {
        "Mawsworn Shadestalker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [168102] = {
        "Empowered Deadsoul Echo", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [139949] = {
        "Plague Doctor", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [140973] = {
        "Bore Tunneler", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [102239] = {
        "Lord Brinebeard", -- [1]
        "Azsuna", -- [2]
      },
      [122970] = {
        "Shadowblade Stalker", -- [1]
        "Atal'Dazar", -- [2]
      },
      [16482] = {
        "Trapped Soul", -- [1]
        "Karazhan", -- [2]
      },
      [70247] = {
        "Venomous Head", -- [1]
        "Throne of Thunder", -- [2]
      },
      [140974] = {
        "Eldercraw", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [168104] = {
        "Empowered Flameforge Master", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [129369] = {
        "Irontide Raider", -- [1]
        "Siege of Boralus", -- [2]
      },
      [168105] = {
        "Empowered Mawsworn Flametender", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [70248] = {
        "Arcane Head", -- [1]
        "Throne of Thunder", -- [2]
      },
      [30111] = {
        "Twilight Worshipper", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [168106] = {
        "Empowered Mawsworn Guard", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [129370] = {
        "Irontide Waveshaper", -- [1]
        "Siege of Boralus", -- [2]
      },
      [56631] = {
        "Hopling", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [159405] = {
        "Aqir Scarab", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [168107] = {
        "Empowered Mawsworn Interceptor", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [9267] = {
        "Smolderthorn Axe Thrower", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [70249] = {
        "Focused Eye", -- [1]
        "Throne of Thunder", -- [2]
      },
      [31007] = {
        "Azure Binder", -- [1]
        "Violet Hold", -- [2]
      },
      [163501] = {
        "Forsworn Skirmisher", -- [1]
        "Spires of Ascension", -- [2]
      },
      [168108] = {
        "Empowered Lumbering Creation", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [129371] = {
        "Riptide Shredder", -- [1]
        "Siege of Boralus", -- [2]
      },
      [58807] = {
        "Vestige of Hatred", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [168109] = {
        "Empowered Mawsworn Ritualist", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [27744] = {
        "Infinite Agent", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [94820] = {
        "Worgen Stalker", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [171181] = {
        "Territorial Bladebeak", -- [1]
        "De Other Side", -- [2]
      },
      [163503] = {
        "Etherdiver", -- [1]
        "Spires of Ascension", -- [2]
      },
      [168110] = {
        "Empowered Imperial Duelist", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [129372] = {
        "Blacktar Bomber", -- [1]
        "Siege of Boralus", -- [2]
      },
      [28384] = {
        "Lesser Air Elemental", -- [1]
        "Halls of Stone", -- [2]
      },
      [61239] = {
        "Glintrok Oracle", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [168111] = {
        "Empowered Imperial Curator", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [61623] = {
        "Sap Globule", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [168112] = {
        "General Kaal", -- [1]
        "Castle Nathria", -- [2]
      },
      [129373] = {
        "Dockhound Packmaster", -- [1]
        "Siege of Boralus", -- [2]
      },
      [141495] = {
        "Kul Tiran Footman", -- [1]
        "Siege of Boralus", -- [2]
      },
      [146102] = {
        "Living Bomb", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [171184] = {
        "Mythresh, Sky's Talons", -- [1]
        "De Other Side", -- [2]
      },
      [163506] = {
        "Forsworn Stealthclaw", -- [1]
        "Spires of Ascension", -- [2]
      },
      [155828] = {
        "Runecarved Colossus", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [1863] = {
        "Helwena", -- [1]
        "Alterac Valley", -- [2]
      },
      [94822] = {
        "Abigail the Huntress", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [66413] = {
        "Yeasty Brew Alemental", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [146103] = {
        "Living Bomb", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [30176] = {
        "Ahn'kahar Guardian", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [180399] = {
        "Evaile", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [157365] = {
        "Crackling Stalker", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [146104] = {
        "Living Bomb", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [61240] = {
        "Glintrok Skulker", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [155830] = {
        "Mawsworn Disciple", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [168627] = {
        "Plaguebinder", -- [1]
        "Plaguefall", -- [2]
      },
      [165556] = {
        "Fleeting Manifestation", -- [1]
        "Sanguine Depths", -- [2]
      },
      [31008] = {
        "Azure Invader", -- [1]
        "Violet Hold", -- [2]
      },
      [155831] = {
        "Mawsworn Soulbinder", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [148665] = {
        "Rastari Royal Guard", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [171188] = {
        "Plaguebound Devoted", -- [1]
        "Plaguefall", -- [2]
      },
      [179890] = {
        "Executioner Varruth", -- [1]
        "Spires of Ascension", -- [2]
      },
      [11859] = {
        "Doomguard", -- [1]
        "Castle Nathria", -- [2]
      },
      [137405] = {
        "Gripping Terror", -- [1]
        "Siege of Boralus", -- [2]
      },
      [19875] = {
        "Baroness Dorothea Millstipe", -- [1]
        "Karazhan", -- [2]
      },
      [179891] = {
        "Soggodon the Breaker", -- [1]
        "Spires of Ascension", -- [2]
      },
      [148667] = {
        "Rastari Punisher", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [56762] = {
        "Yu'lon", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [56890] = {
        "Krik'thik Infiltrator", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [130400] = {
        "Irontide Crusher", -- [1]
        "Freehold", -- [2]
      },
      [159417] = {
        "Demented Knife-Twister", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [173238] = {
        "Deadsoul Strider", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [165560] = {
        "Gormling Larva", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [179893] = {
        "Cartel Skulker", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [29217] = {
        "Anub'ar Venomancer", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [58810] = {
        "Fragment of Hatred", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [102248] = {
        "Ravenous Hunter", -- [1]
        "Azsuna", -- [2]
      },
      [152253] = {
        "The Tarragrue", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [134338] = {
        "Tidesage Enforcer", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [167610] = {
        "Stonefiend Anklebiter", -- [1]
        "Halls of Atonement", -- [2]
      },
      [139457] = {
        "Stonebound Quilen", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [13139] = {
        "Commander Randolph", -- [1]
        "Alterac Valley", -- [2]
      },
      [140993] = {
        "Darktunnel Ambusher", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [138434] = {
        "Spitefin Tempest Witch", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [167611] = {
        "Stoneborn Eviscerator", -- [1]
        "Halls of Atonement", -- [2]
      },
      [123236] = {
        "Scuttlestep Crab", -- [1]
        "Freehold", -- [2]
      },
      [167612] = {
        "Stoneborn Reaver", -- [1]
        "Halls of Atonement", -- [2]
      },
      [139459] = {
        "Stonebound Soldier", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [148673] = {
        "Vessel of Bwonsamdi", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [166589] = {
        "Animated Weapon", -- [1]
        "Sanguine Depths", -- [2]
      },
      [179386] = {
        "Corsair Officer", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [139460] = {
        "Stonebound Earthweaver", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [59835] = {
        "Krik'thik Swarmer", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [19876] = {
        "Lord Robin Daris", -- [1]
        "Karazhan", -- [2]
      },
      [139461] = {
        "Stonebound Rockmaw", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [56636] = {
        "Commander Ri'mok", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [132807] = {
        "Zian-Ti Quilen", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [166079] = {
        "Brittlebone Crossbowman", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [146116] = {
        "Needleback Forager", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [61243] = {
        "Gekkan", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [159425] = {
        "Occult Shadowmender", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [139462] = {
        "Stonebound Shale-Speaker", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [16485] = {
        "Arcane Watchman", -- [1]
        "Karazhan", -- [2]
      },
      [156866] = {
        "Ra-den", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [175806] = {
        "So'azmi", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [139463] = {
        "Stonebound Annihilator", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [131785] = {
        "Buzzing Drone", -- [1]
        "Tol Dagor", -- [2]
      },
      [58812] = {
        "Hateful Essence", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [146118] = {
        "Territorial Needleback", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [69236] = {
        "Shan'ze Soulripper", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [102252] = {
        "Dread Lookout", -- [1]
        "Azsuna", -- [2]
      },
      [139464] = {
        "Zian-Ti Howler", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [144071] = {
        "Irontide Waveshaper", -- [1]
        "Siege of Boralus", -- [2]
      },
      [153285] = {
        "Training Dummy", -- [1]
        "The Underrot", -- [2]
      },
      [30178] = {
        "Ahn'kahar Swarmer", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [180415] = {
        "Mawsworn Axeguard", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [165059] = {
        "Crimson Protector", -- [1]
        "Castle Nathria Scenario", -- [2]
      },
      [56765] = {
        "Destroying Sha", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [170690] = {
        "Diseased Horror", -- [1]
        "Theater of Pain", -- [2]
      },
      [163524] = {
        "Kyrian Dark-Praetor", -- [1]
        "Spires of Ascension", -- [2]
      },
      [122984] = {
        "Dazar'ai Colossus", -- [1]
        "Atal'Dazar", -- [2]
      },
      [26723] = {
        "Keristrasza", -- [1]
        "The Nexus", -- [2]
      },
      [165060] = {
        "Animimic", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [133836] = {
        "Reanimated Guardian", -- [1]
        "The Underrot", -- [2]
      },
      [180417] = {
        "Loom Artificer", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [165061] = {
        "Crimson Assassin", -- [1]
        "Castle Nathria Scenario", -- [2]
      },
      [167109] = {
        "Skeletal Vanguard", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [139468] = {
        "Spineripper Ku-Kon", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [94576] = {
        "Skyfire Gryphon", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [169157] = {
        "Mudlump", -- [1]
        "Castle Nathria", -- [2]
      },
      [129640] = {
        "Snarling Dockhound", -- [1]
        "Siege of Boralus", -- [2]
      },
      [56766] = {
        "Volatile Energy", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [167111] = {
        "Spinemaw Staghorn", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [164552] = {
        "Rotmarrow Slime", -- [1]
        "Plaguefall", -- [2]
      },
      [169159] = {
        "Unstable Canister", -- [1]
        "Plaguefall", -- [2]
      },
      [71543] = {
        "Immerseus", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [139471] = {
        "Bugan the Flesh-Crusher", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [164553] = {
        "Misty Ally", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [167113] = {
        "Spinemaw Acidgullet", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [77942] = {
        "Primal Storm Elemental", -- [1]
        "Theater of Pain", -- [2]
      },
      [165066] = {
        "Huntsman Altimor", -- [1]
        "Castle Nathria", -- [2]
      },
      [179399] = {
        "Drunk Pirate", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [30179] = {
        "Twilight Apostle", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [164555] = {
        "Millificent Manastorm", -- [1]
        "De Other Side", -- [2]
      },
      [165067] = {
        "Margore", -- [1]
        "Castle Nathria", -- [2]
      },
      [132819] = {
        "Rustpelt Pup", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [56895] = {
        "Weak Spot", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [162508] = {
        "Anubisath Sentinel", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [167115] = {
        "Necromancer Warcaster", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [9237] = {
        "War Master Voone", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [164556] = {
        "Millhouse Manastorm", -- [1]
        "De Other Side", -- [2]
      },
      [132820] = {
        "Mudsnout Piglet", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [167116] = {
        "Spinemaw Reaver", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [139475] = {
        "Jade-Formed Bonesnapper", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [135892] = {
        "Unleashed Inferno", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [137940] = {
        "Safety Shark", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [167117] = {
        "Spinemaw Larva", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [180426] = {
        "Feeding Horror", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [164558] = {
        "Hakkar the Soulflayer", -- [1]
        "De Other Side", -- [2]
      },
      [180427] = {
        "Loom Guardian", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [135894] = {
        "Fire Elemental", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [61247] = {
        "Glintrok Greenhorn", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [180428] = {
        "Tortured Soul", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [135895] = {
        "Blazing Spark", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [166608] = {
        "Mueh'zala", -- [1]
        "De Other Side", -- [2]
      },
      [180429] = {
        "Adorned Starseer", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [68220] = {
        "Gastropod", -- [1]
        "Throne of Thunder", -- [2]
      },
      [68476] = {
        "Horridon", -- [1]
        "Throne of Thunder", -- [2]
      },
      [138968] = {
        "Zian-Ti Ironmaw", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [139480] = {
        "Stonebound Protector", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [164562] = {
        "Depraved Houndmaster", -- [1]
        "Halls of Atonement", -- [2]
      },
      [156884] = {
        "Essence of Vita", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [138969] = {
        "Zian-Ti Spirit", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [180431] = {
        "Focused Ritualist", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [164563] = {
        "Vicious Gargon", -- [1]
        "Halls of Atonement", -- [2]
      },
      [26533] = {
        "Mal'Ganis", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [138970] = {
        "Vengeful Spirit", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [180432] = {
        "Devoted Accomplice", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [165076] = {
        "Gluttonous Tick", -- [1]
        "Sanguine Depths", -- [2]
      },
      [133852] = {
        "Living Rot", -- [1]
        "The Underrot", -- [2]
      },
      [134364] = {
        "Faithless Tender", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [138971] = {
        "Zian-Ti Serpent", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [180433] = {
        "Wandering Pulsar", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [67966] = {
        "Whirl Turtle", -- [1]
        "Throne of Thunder", -- [2]
      },
      [68222] = {
        "Bow Fly Swarm", -- [1]
        "Throne of Thunder", -- [2]
      },
      [146650] = {
        "Champion Sentinel", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [126832] = {
        "Skycap'n Kragg", -- [1]
        "Freehold", -- [2]
      },
      [63808] = {
        "Faintly Glowing Gem", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [170197] = {
        "Conjured Manifestation", -- [1]
        "Castle Nathria", -- [2]
      },
      [164567] = {
        "Ingra Maloch", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [178388] = {
        "Bazaar Strongarm", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [146140] = {
        "Quilldozer", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [73342] = {
        "Fallen Pool Tender", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [16424] = {
        "Spectral Sentry", -- [1]
        "Karazhan", -- [2]
      },
      [16488] = {
        "Arcane Anomaly", -- [1]
        "Karazhan", -- [2]
      },
      [170199] = {
        "Harnessed Specter", -- [1]
        "Castle Nathria", -- [2]
      },
      [146653] = {
        "Champion Hunter", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [133345] = {
        "Feckless Assistant", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [138464] = {
        "Ashvane Deckhand", -- [1]
        "Siege of Boralus", -- [2]
      },
      [59458] = {
        "Hopling", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [165594] = {
        "Coldheart Ambusher", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [138465] = {
        "Ashvane Cannoneer", -- [1]
        "Siege of Boralus", -- [2]
      },
      [178392] = {
        "Gatewarden Zo'mazz", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [138466] = {
        "Obsidian Whelp", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [138978] = {
        "Gargantuan Muckfin", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [61634] = {
        "Commander Vo'jak", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [26918] = {
        "Chaotic Rift", -- [1]
        "The Nexus", -- [2]
      },
      [146657] = {
        "Veteran Sentinel", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [138979] = {
        "Muckfin Tidecaller", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [168156] = {
        "Remornia", -- [1]
        "Castle Nathria", -- [2]
      },
      [80511] = {
        "Power Geode", -- [1]
        "Ashran", -- [2]
      },
      [165597] = {
        "Patchwerk Soldier", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [178394] = {
        "Cartel Lackey", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [138468] = {
        "Obsidian Flamecaller", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [138980] = {
        "Muckfin Raider", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [59459] = {
        "Hopling", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [148194] = {
        "Icy Barrier", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [173276] = {
        "Stone Legion Commando", -- [1]
        "Castle Nathria", -- [2]
      },
      [145123] = {
        "Myara Nightsong", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [138981] = {
        "Muckfin Oracle", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [177372] = {
        "Mawsworn Realmbinder", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [136934] = {
        "Weapons Tester", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [138470] = {
        "Obsidian Drake", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [69507] = {
        "Zeb'tula Beastcaller", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [16425] = {
        "Phantom Guardsman", -- [1]
        "Karazhan", -- [2]
      },
      [16489] = {
        "Chaotic Sentience", -- [1]
        "Karazhan", -- [2]
      },
      [10390] = {
        "Skeletal Guardian", -- [1]
        "Stratholme", -- [2]
      },
      [138471] = {
        "Obsidian Wyrmguard", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [172255] = {
        "Gravestalker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [131817] = {
        "Cragmaw the Infested", -- [1]
        "The Underrot", -- [2]
      },
      [169696] = {
        "Mire Soldier", -- [1]
        "Plaguefall", -- [2]
      },
      [162018] = {
        "Temple Guard", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [59460] = {
        "Hopling", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [131818] = {
        "Marked Sister", -- [1]
        "Waycrest Manor", -- [2]
      },
      [173280] = {
        "Stone Legion Skirmisher", -- [1]
        "Castle Nathria", -- [2]
      },
      [138473] = {
        "Stygia", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [131819] = {
        "Coven Diviner", -- [1]
        "Waycrest Manor", -- [2]
      },
      [162020] = {
        "Priestess of Elune", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [26727] = {
        "Mage Hunter Ascendant", -- [1]
        "The Nexus", -- [2]
      },
      [177889] = {
        "Mawforged Souljudge", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [162021] = {
        "Temple Archer", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [138987] = {
        "Muckfin High Oracle", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [131821] = {
        "Faceless Maiden", -- [1]
        "Waycrest Manor", -- [2]
      },
      [27431] = {
        "Drakkari Commander", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [162534] = {
        "Anubisath Sentinel", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [73349] = {
        "Tormented Initiate", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [134893] = {
        "Ironweb Spider", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [59461] = {
        "Hopling", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [177891] = {
        "Mawforged Summoner", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [133870] = {
        "Diseased Lasher", -- [1]
        "The Underrot", -- [2]
      },
      [163559] = {
        "Royal Servant", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [28199] = {
        "Tomb Stalker", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [131823] = {
        "Sister Malady", -- [1]
        "Waycrest Manor", -- [2]
      },
      [177892] = {
        "Mawforged Goliath", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [145644] = {
        "Bwonsamdi", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [131824] = {
        "Sister Solena", -- [1]
        "Waycrest Manor", -- [2]
      },
      [148716] = {
        "Risen Soul", -- [1]
        "Siege of Boralus", -- [2]
      },
      [173798] = {
        "Rat of Unusual Size", -- [1]
        "Castle Nathria", -- [2]
      },
      [138991] = {
        "Grrl", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [131825] = {
        "Sister Briar", -- [1]
        "Waycrest Manor", -- [2]
      },
      [133361] = {
        "Wasting Servant", -- [1]
        "Waycrest Manor", -- [2]
      },
      [138992] = {
        "Muckfin Puddlejumper", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [29735] = {
        "Savage Worg", -- [1]
        "Utgarde Keep", -- [2]
      },
      [168681] = {
        "Forsworn Helion", -- [1]
        "Spires of Ascension", -- [2]
      },
      [173800] = {
        "Sewer Rat", -- [1]
        "Castle Nathria", -- [2]
      },
      [137969] = {
        "Interment Construct", -- [1]
        "Kings' Rest", -- [2]
      },
      [138481] = {
        "Chromitus", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [134898] = {
        "Venomfang Recluse", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [172265] = {
        "Remnant of Fury", -- [1]
        "Sanguine Depths", -- [2]
      },
      [67977] = {
        "Tortos", -- [1]
        "Throne of Thunder", -- [2]
      },
      [137458] = {
        "Rotting Spore", -- [1]
        "The Underrot", -- [2]
      },
      [26536] = {
        "Mindless Servant", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [30695] = {
        "Portal Keeper", -- [1]
        "Violet Hold", -- [2]
      },
      [9239] = {
        "Smolderthorn Mystic", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [26728] = {
        "Mage Hunter Initiate", -- [1]
        "The Nexus", -- [2]
      },
      [26792] = {
        "Crystalline Protector", -- [1]
        "The Nexus", -- [2]
      },
      [173802] = {
        "Carved Assistant", -- [1]
        "Castle Nathria", -- [2]
      },
      [134388] = {
        "A Knot of Snakes", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [134900] = {
        "Venomfang Spider", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [164589] = {
        "Regenerating Wildseed", -- [1]
        "Temple of Kotmogu", -- [2]
      },
      [169196] = {
        "Crimson Cabalist", -- [1]
        "Castle Nathria", -- [2]
      },
      [134389] = {
        "Venomous Ophidian", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [138996] = {
        "Earth-Speaker Juwa", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [131318] = {
        "Elder Leaxa", -- [1]
        "The Underrot", -- [2]
      },
      [160495] = {
        "Maniacal Soulbinder", -- [1]
        "Theater of Pain", -- [2]
      },
      [134390] = {
        "Sand-crusted Striker", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [138997] = {
        "Grawlash the Frenzied", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [28200] = {
        "Dark Necromancer", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [69515] = {
        "Zandalari Barricade", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [16491] = {
        "Mana Feeder", -- [1]
        "Karazhan", -- [2]
      },
      [10391] = {
        "Skeletal Berserker", -- [1]
        "Stratholme", -- [2]
      },
      [29096] = {
        "Anub'ar Champion", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [138999] = {
        "Elder Ordol", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [163058] = {
        "Mistveil Defender", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [134905] = {
        "Shadeweb Huntress", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [59464] = {
        "Hopper", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [176879] = {
        "Hollowsoul", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [138489] = {
        "Shadow of Zul", -- [1]
        "Kings' Rest", -- [2]
      },
      [139001] = {
        "Wildlands Ursa", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [135930] = {
        "Lavarok", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [69517] = {
        "Zeb'tula Stoneshield", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [26729] = {
        "Steward", -- [1]
        "The Nexus", -- [2]
      },
      [26793] = {
        "Crystalline Frayer", -- [1]
        "The Nexus", -- [2]
      },
      [166644] = {
        "Artificer Xy'mox", -- [1]
        "Castle Nathria", -- [2]
      },
      [139003] = {
        "Wildlands Warrior", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [170228] = {
        "Bone Husk", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [142587] = {
        "Devouring Maggot", -- [1]
        "Waycrest Manor", -- [2]
      },
      [139004] = {
        "Wildlands Shaman", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [27753] = {
        "Drakkari Invader", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [162039] = {
        "Wicked Oppressor", -- [1]
        "Sanguine Depths", -- [2]
      },
      [138493] = {
        "Minion of Zul", -- [1]
        "Kings' Rest", -- [2]
      },
      [139005] = {
        "Wildlands Tracker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [28201] = {
        "Bile Golem", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [135934] = {
        "Lord Incindivar", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [165111] = {
        "Drust Spiteclaw", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [56906] = {
        "Saboteur Kip'tilak", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [139006] = {
        "Wildlands Furbolg", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [16492] = {
        "Syphoner", -- [1]
        "Karazhan", -- [2]
      },
      [144637] = {
        "Grong", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [141566] = {
        "Scrimshaw Gutter", -- [1]
        "Siege of Boralus", -- [2]
      },
      [29097] = {
        "Anub'ar Crypt Fiend", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [139007] = {
        "Feral Stalker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [58826] = {
        "Zao Sunseeker", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [179446] = {
        "Incinerator Arkolath", -- [1]
        "Spires of Ascension", -- [2]
      },
      [139008] = {
        "Primal Mauler", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [127106] = {
        "Irontide Officer", -- [1]
        "Freehold", -- [2]
      },
      [137473] = {
        "Guard Captain Atu", -- [1]
        "Kings' Rest", -- [2]
      },
      [139009] = {
        "Feral Hunter", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [56395] = {
        "Shado-Pan Novice", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [170234] = {
        "Oppressive Banner", -- [1]
        "Theater of Pain", -- [2]
      },
      [134915] = {
        "Trapdoor Ambusher", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [172282] = {
        "Web Wrap", -- [1]
        "Plaguefall", -- [2]
      },
      [26730] = {
        "Mage Slayer", -- [1]
        "The Nexus", -- [2]
      },
      [26794] = {
        "Ormorok the Tree-Shaper", -- [1]
        "The Nexus", -- [2]
      },
      [132868] = {
        "Congealed Azerite", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [174842] = {
        "Belligerent Waiter", -- [1]
        "Castle Nathria", -- [2]
      },
      [138499] = {
        "Twilight Dragonkin", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [139011] = {
        "Feral Protector", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [180473] = {
        "Unstoppable Abomination", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [168700] = {
        "Pestering Fiend", -- [1]
        "Castle Nathria", -- [2]
      },
      [125828] = {
        "Víridian", -- [1]
        "Atal'Dazar", -- [2]
      },
      [162046] = {
        "Famished Tick", -- [1]
        "Sanguine Depths", -- [2]
      },
      [174843] = {
        "Stoneborn Maitre D'", -- [1]
        "Castle Nathria", -- [2]
      },
      [138500] = {
        "Twilight Scalesister", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [147202] = {
        "Animated Azershard", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [180474] = {
        "Soul Reaver", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [162047] = {
        "Insatiable Brute", -- [1]
        "Sanguine Depths", -- [2]
      },
      [137989] = {
        "Embalming Fluid", -- [1]
        "Kings' Rest", -- [2]
      },
      [138501] = {
        "Twilight Whelp", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [139013] = {
        "Frenzied Moonkin", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [131847] = {
        "Waycrest Reveler", -- [1]
        "Waycrest Manor", -- [2]
      },
      [137478] = {
        "Queen Wasi", -- [1]
        "Kings' Rest", -- [2]
      },
      [130436] = {
        "Off-Duty Laborer", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [139014] = {
        "Feral Moonseeker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [140038] = {
        "Abyssal Eel", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [157442] = {
        "Gaze of Madness", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [133384] = {
        "Merektha", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [29098] = {
        "Anub'ar Necromancer", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [139015] = {
        "Feral Moonkin", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [131849] = {
        "Crazed Marksman", -- [1]
        "Waycrest Manor", -- [2]
      },
      [62795] = {
        "Sik'thik Warden", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [174335] = {
        "Stone Legion Skirmisher", -- [1]
        "Castle Nathria", -- [2]
      },
      [130437] = {
        "Mine Rat", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [69524] = {
        "Zeb'tula Alchemist", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [155908] = {
        "Deathspeaker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [131850] = {
        "Maddened Survivalist", -- [1]
        "Waycrest Manor", -- [2]
      },
      [177407] = {
        "Formless Mass", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [174336] = {
        "Kennel Overseer", -- [1]
        "Castle Nathria", -- [2]
      },
      [139017] = {
        "Wildmane", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [151814] = {
        "Deadsoul Shade", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [69013] = {
        "Diffused Lightning", -- [1]
        "Throne of Thunder", -- [2]
      },
      [151815] = {
        "Deadsoul Echo", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [26731] = {
        "Grand Magus Telestra", -- [1]
        "The Nexus", -- [2]
      },
      [127879] = {
        "Shieldbearer of Zul", -- [1]
        "Atal'Dazar", -- [2]
      },
      [174338] = {
        "Stinky Feedhauler", -- [1]
        "Castle Nathria", -- [2]
      },
      [146185] = {
        "Firesting Drone", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [31146] = {
        "Raider's Training Dummy", -- [1]
        "The Underrot", -- [2]
      },
      [151816] = {
        "Deadsoul Scavenger", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [172803] = {
        "Afterimage of Baroness Frieda", -- [1]
        "Castle Nathria", -- [2]
      },
      [133389] = {
        "Galvazzt", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [146186] = {
        "Firesting Warrior", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [151817] = {
        "Deadsoul Devil", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [137485] = {
        "Bloodsworn Agent", -- [1]
        "Kings' Rest", -- [2]
      },
      [146187] = {
        "Firesting Dominator", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [139021] = {
        "Bloodtracker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [151818] = {
        "Deadsoul Miscreation", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [113036] = {
        "Fel Lord Razzar", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [137486] = {
        "Queen Patlaa", -- [1]
        "Kings' Rest", -- [2]
      },
      [138510] = {
        "Twilight Doomcaller", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [61389] = {
        "Kargesh Highguard", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [180484] = {
        "Vilt", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [162057] = {
        "Chamber Sentinel", -- [1]
        "Sanguine Depths", -- [2]
      },
      [128649] = {
        "Sergeant Bainbridge", -- [1]
        "Siege of Boralus", -- [2]
      },
      [180485] = {
        "Hips", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [113037] = {
        "Fel Lord Darakk", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [136976] = {
        "T'zala", -- [1]
        "Kings' Rest", -- [2]
      },
      [162058] = {
        "Ventunax", -- [1]
        "Spires of Ascension", -- [2]
      },
      [134417] = {
        "Deepsea Ritualist", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [139536] = {
        "Zara'thik Drone", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [131858] = {
        "Thornguard", -- [1]
        "Waycrest Manor", -- [2]
      },
      [140560] = {
        "Blazeseeker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [157452] = {
        "Nightmare Antigen", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [162059] = {
        "Kin-Tara", -- [1]
        "Spires of Ascension", -- [2]
      },
      [8889] = {
        "Anvilrage Overseer", -- [1]
        "Blackrock Depths", -- [2]
      },
      [134418] = {
        "Drowned Depthbringer", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [113038] = {
        "Fel Lord Kurrz", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [162060] = {
        "Oryphrion", -- [1]
        "Spires of Ascension", -- [2]
      },
      [69017] = {
        "Primordius", -- [1]
        "Throne of Thunder", -- [2]
      },
      [167691] = {
        "Stasis Trap", -- [1]
        "Castle Nathria", -- [2]
      },
      [26668] = {
        "Svala Sorrowgrave", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [162061] = {
        "Devos", -- [1]
        "Spires of Ascension", -- [2]
      },
      [128651] = {
        "Hadal Darkfathom", -- [1]
        "Siege of Boralus", -- [2]
      },
      [58319] = {
        "Lesser Sha", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [139539] = {
        "Tavok, Hammer of the Empress", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [92564] = {
        "Mo'arg Painbringer", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [126092] = {
        "Slitherblade Gladiator", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [163086] = {
        "Rancid Gasbag", -- [1]
        "Theater of Pain", -- [2]
      },
      [147218] = {
        "Spirit of Gold", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [176395] = {
        "Overloaded Mailemental", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [168717] = {
        "Forsworn Justicar", -- [1]
        "Spires of Ascension", -- [2]
      },
      [140564] = {
        "Brimstone Lavamaw", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [128652] = {
        "Viq'Goth", -- [1]
        "Siege of Boralus", -- [2]
      },
      [3527] = {
        "Healing Stream Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [148243] = {
        "Fallen Disciple", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [136470] = {
        "Refreshment Vendor", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [153874] = {
        "Mawsworn Sentry", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [178956] = {
        "Terrified Veilwing", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [134423] = {
        "Abyss Dweller", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [131864] = {
        "Gorak Tul", -- [1]
        "Waycrest Manor", -- [2]
      },
      [133912] = {
        "Bloodsworn Defiler", -- [1]
        "The Underrot", -- [2]
      },
      [163089] = {
        "Disgusting Refuse", -- [1]
        "Theater of Pain", -- [2]
      },
      [17007] = {
        "Lady Keira Berrybuck", -- [1]
        "Karazhan", -- [2]
      },
      [165137] = {
        "Zolramus Gatekeeper", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [136984] = {
        "Reban", -- [1]
        "Kings' Rest", -- [2]
      },
      [126094] = {
        "Slitherblade Wavecaller", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [135961] = {
        "Deepstone Crusher", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [165138] = {
        "Blight Bag", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [173840] = {
        "Plaguebound Devoted", -- [1]
        "Plaguefall", -- [2]
      },
      [170257] = {
        "Broker Ve'nott", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [135962] = {
        "Crag Rager", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [157461] = {
        "Mycelial Cyst", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [153878] = {
        "Mawsworn Archer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [61392] = {
        "Harthak Flameseeker", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [26669] = {
        "Ymirjar Savage", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [26861] = {
        "King Ymiron", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [153879] = {
        "Deadsoul Shadow", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [159510] = {
        "Eye of the Depths", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [134941] = {
        "Bristlethorn Spider", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [27949] = {
        "Alliance Commander", -- [1]
        "The Nexus", -- [2]
      },
      [56658] = {
        "Corrupt Droplet", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [153882] = {
        "Deadsoul Spirit", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [178964] = {
        "Empowered Mawsworn Woebringer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [69791] = {
        "Kokayy", -- [1]
        "Crucible of Storms", -- [2]
      },
      [169751] = {
        "Ashen Wasp", -- [1]
        "Theater of Pain", -- [2]
      },
      [171799] = {
        "Depths Warden", -- [1]
        "Sanguine Depths", -- [2]
      },
      [69792] = {
        "Kokayy", -- [1]
        "Crucible of Storms", -- [2]
      },
      [148254] = {
        "Frost Shard", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [169753] = {
        "Famished Tick", -- [1]
        "Sanguine Depths", -- [2]
      },
      [153885] = {
        "Deadsoul Shambler", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [8890] = {
        "Anvilrage Warden", -- [1]
        "Blackrock Depths", -- [2]
      },
      [176920] = {
        "Domination Arrow", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [56915] = {
        "Sun", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [163612] = {
        "Voidspawn Annihilator", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [26670] = {
        "Ymirjar Flesh Hunter", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [26734] = {
        "Azure Enforcer", -- [1]
        "The Nexus", -- [2]
      },
      [30893] = {
        "Portal Keeper", -- [1]
        "Violet Hold", -- [2]
      },
      [138019] = {
        "Kul Tiran Vanguard", -- [1]
        "Siege of Boralus", -- [2]
      },
      [147745] = {
        "The Indomitable", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [140067] = {
        "Rustpelt Alpha", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [173339] = {
        "Plaguebelcher", -- [1]
        "Plaguefall", -- [2]
      },
      [151329] = {
        "Warden Skoldus", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [127124] = {
        "Freehold Barhand", -- [1]
        "Freehold", -- [2]
      },
      [90525] = {
        "Eredar Chaos Guard", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [150818] = {
        "Disturbed Blood Globule", -- [1]
        "Uldir Scenario", -- [2]
      },
      [171805] = {
        "Research Scribe", -- [1]
        "Sanguine Depths", -- [2]
      },
      [140069] = {
        "Rustpelt Wolf", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [65362] = {
        "Minion of Doubt", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [151331] = {
        "Cellblock Sentinel", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [5134] = {
        "Jonivera Farmountain", -- [1]
        "Alterac Valley", -- [2]
      },
      [127381] = {
        "Silt Crab", -- [1]
        "Tol Dagor", -- [2]
      },
      [137511] = {
        "Bilge Rat Cutthroat", -- [1]
        "Siege of Boralus", -- [2]
      },
      [157475] = {
        "Synthesis Growth", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [58964] = {
        "Hrogrik", -- [1]
        "Crucible of Storms", -- [2]
      },
      [122263] = {
        "Spineshell Snapjaw", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [163618] = {
        "Zolramus Necromancer", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [148262] = {
        "Tidewater Elemental", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [70308] = {
        "Soul-Fed Construct", -- [1]
        "Throne of Thunder", -- [2]
      },
      [161571] = {
        "Anubisath Sentinel", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [163619] = {
        "Zolramus Bonecarver", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [144680] = {
        "Frida Ironbellows", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [122264] = {
        "Elder Spineshell", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [163620] = {
        "Rotspew", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [123288] = {
        "Southsea Cannoneer", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [163621] = {
        "Goregrind", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [58965] = {
        "Zig-amal", -- [1]
        "Waycrest Manor", -- [2]
      },
      [163622] = {
        "Goregrind Bits", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [59605] = {
        "Sodden Hozen Brawler", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [137517] = {
        "Ashvane Destroyer", -- [1]
        "Siege of Boralus", -- [2]
      },
      [146731] = {
        "Zombie Dust Totem", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [163623] = {
        "Rotspew Leftovers", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [135470] = {
        "Aka'ali the Conqueror", -- [1]
        "Kings' Rest", -- [2]
      },
      [133935] = {
        "Animated Guardian", -- [1]
        "Kings' Rest", -- [2]
      },
      [123290] = {
        "Sparkleshell Clacker", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [152875] = {
        "Massive Crusher", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [58198] = {
        "Shado-Pan Disciple", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [135472] = {
        "Zanazal the Wise", -- [1]
        "Kings' Rest", -- [2]
      },
      [113053] = {
        "Mother Sepestra", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [84644] = {
        "Vilewing Rylak", -- [1]
        "Ashran", -- [2]
      },
      [137521] = {
        "Irontide Powdershot", -- [1]
        "Siege of Boralus", -- [2]
      },
      [8891] = {
        "Anvilrage Guardsman", -- [1]
        "Blackrock Depths", -- [2]
      },
      [135474] = {
        "Thistle Acolyte", -- [1]
        "Waycrest Manor", -- [2]
      },
      [30319] = {
        "Twilight Darkcaster", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [175401] = {
        "Warden of Souls", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [102305] = {
        "Dreadguard", -- [1]
        "Azsuna", -- [2]
      },
      [26672] = {
        "Bloodthirsty Tundra Wolf", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [168747] = {
        "Venomfang", -- [1]
        "Plaguefall", -- [2]
      },
      [26800] = {
        "Alliance Berserker", -- [1]
        "The Nexus", -- [2]
      },
      [157486] = {
        "Horrific Hemorrhage", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [144690] = {
        "Mestrah", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [135989] = {
        "Shieldbearer of Zul", -- [1]
        "Atal'Dazar", -- [2]
      },
      [132918] = {
        "Spitefin Raider", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [133430] = {
        "Venture Co. Mastermind", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [131383] = {
        "Sporecaller Zancha", -- [1]
        "The Underrot", -- [2]
      },
      [176940] = {
        "Soulember", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [56792] = {
        "Figment of Doubt", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [133943] = {
        "Minion of Zul", -- [1]
        "Kings' Rest", -- [2]
      },
      [61399] = {
        "Glintrok Scout", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [144693] = {
        "Manceroy Flamefist", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [133432] = {
        "Venture Co. Alchemist", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [133944] = {
        "Aspix", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [163121] = {
        "Stitched Vanguard", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [163122] = {
        "Brittlebone Warrior", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [70060] = {
        "Shadowed Voodoo Spirit", -- [1]
        "Throne of Thunder", -- [2]
      },
      [173360] = {
        "Plaguebelcher", -- [1]
        "Plaguefall", -- [2]
      },
      [162099] = {
        "General Kaal", -- [1]
        "Sanguine Depths", -- [2]
      },
      [180015] = {
        "Burly Deckhand", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [173361] = {
        "Slimy Morsel", -- [1]
        "Plaguefall", -- [2]
      },
      [162100] = {
        "Kryxis the Voracious", -- [1]
        "Sanguine Depths", -- [2]
      },
      [167731] = {
        "Separation Assistant", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [26737] = {
        "Crazed Mana-Surge", -- [1]
        "The Nexus", -- [2]
      },
      [133436] = {
        "Venture Co. Skyscorcher", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [31216] = {
        "Rønmage-Silvermoon", -- [1]
        "The Battle for Gilneas", -- [2]
      },
      [113059] = {
        "Fel Lord Garzan", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [162102] = {
        "Grand Proctor Beryllia", -- [1]
        "Sanguine Depths", -- [2]
      },
      [163126] = {
        "Brittlebone Mage", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [151353] = {
        "Mawrat", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [162103] = {
        "Executor Tarvold", -- [1]
        "Sanguine Depths", -- [2]
      },
      [168246] = {
        "Reanimated Crossbowman", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [163128] = {
        "Zolramus Sorcerer", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [135999] = {
        "Heliodor", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [140095] = {
        "Mudsnout Gorer", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [140096] = {
        "Mudsnout Boar", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [8892] = {
        "Anvilrage Footman", -- [1]
        "Blackrock Depths", -- [2]
      },
      [140609] = {
        "Ravenous Mako", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [26674] = {
        "Darkweb Hatchling", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [172858] = {
        "Stone Legion Goliath", -- [1]
        "Castle Nathria", -- [2]
      },
      [26802] = {
        "Alliance Ranger", -- [1]
        "The Nexus", -- [2]
      },
      [30961] = {
        "Azure Invader", -- [1]
        "Violet Hold", -- [2]
      },
      [124580] = {
        "Grotto Terrapin", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [129699] = {
        "Ludwig Von Tortollan", -- [1]
        "Freehold", -- [2]
      },
      [42975] = {
        "Plague Ghoul", -- [1]
        "Stratholme", -- [2]
      },
      [136005] = {
        "Rowdy Reveler", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [137029] = {
        "Ordnance Specialist", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [124581] = {
        "Spineshell Snapper", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [136006] = {
        "Rowdy Reveler", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [152898] = {
        "Deadsoul Chorus", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [56924] = {
        "Inflamed Hozen Brawler", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [146756] = {
        "Energized Storm", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [78001] = {
        "Cloudburst Totem", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [176957] = {
        "Shadowsteel Colossus", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [124582] = {
        "Chasm-Hunter", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [71603] = {
        "Sha Puddle", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [131402] = {
        "Underrot Tick", -- [1]
        "The Underrot", -- [2]
      },
      [176959] = {
        "Mawsworn Soulmage", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [29874] = {
        "Drakkari Inciter", -- [1]
        "Gundrak", -- [2]
      },
      [162115] = {
        "Koda Steelclaw", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [138569] = {
        "Harbinger Vor'zzyx", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [56541] = {
        "Master Snowdrift", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [162116] = {
        "Lyanis Moonfall", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [133963] = {
        "Test Subject", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [90544] = {
        "Krosus", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [162117] = {
        "Tyrande Whisperwind", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [165189] = {
        "Tchaaz", -- [1]
        "Temple of Kotmogu", -- [2]
      },
      [179010] = {
        "Fatespawn Anomaly", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [152905] = {
        "Tower Sentinel", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [146251] = {
        "Sister Katherine", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [171333] = {
        "Atal'ai Devoted", -- [1]
        "De Other Side", -- [2]
      },
      [134990] = {
        "Charged Dust Devil", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [131407] = {
        "Venture Goon", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [134991] = {
        "Sandfury Stonefist", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [157002] = {
        "Imperial Enforcer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [146253] = {
        "Brother Joseph", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [157003] = {
        "Imperial Duelist", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [146766] = {
        "Greater Serpent Totem", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [134993] = {
        "Mchimba the Embalmer", -- [1]
        "Kings' Rest", -- [2]
      },
      [119724] = {
        "Tidal Surger", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [8893] = {
        "Anvilrage Soldier", -- [1]
        "Blackrock Depths", -- [2]
      },
      [134994] = {
        "Spectral Headhunter", -- [1]
        "Kings' Rest", -- [2]
      },
      [131411] = {
        "Venomscale Monitor", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [56799] = {
        "Krik'thik Bombardier", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [56927] = {
        "Hozen Party Animal", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [146256] = {
        "Laminaria", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [30963] = {
        "Azure Mage Slayer", -- [1]
        "Violet Hold", -- [2]
      },
      [133972] = {
        "Heavy Cannon", -- [1]
        "Tol Dagor", -- [2]
      },
      [146769] = {
        "Druid of the Claw", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [13596] = {
        "Rotgrip", -- [1]
        "Maraudon", -- [2]
      },
      [165197] = {
        "Skeletal Monstrosity", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [146770] = {
        "Druid of the Claw", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [70586] = {
        "Eternal Guardian", -- [1]
        "Throne of Thunder", -- [2]
      },
      [171341] = {
        "Bladebeak Hatchling", -- [1]
        "De Other Side", -- [2]
      },
      [28340] = {
        "Infinite Adversary", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [149331] = {
        "Luminous Azerite", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [133463] = {
        "Venture Co. War Machine", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [171342] = {
        "Juvenile Runestag", -- [1]
        "De Other Side", -- [2]
      },
      [176973] = {
        "Unstoppable Abomination", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [140630] = {
        "Ornate Puffer", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [70587] = {
        "Shale Stalker", -- [1]
        "Throne of Thunder", -- [2]
      },
      [171343] = {
        "Bladebeak Matriarch", -- [1]
        "De Other Side", -- [2]
      },
      [164177] = {
        "Royal Nightcloak", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [176974] = {
        "Soul Reaver", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [140631] = {
        "South Sea Ray", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [140632] = {
        "Scaleback Snapper", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [139097] = {
        "Sandswept Marksman", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [56929] = {
        "Krik'thik Protectorate", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [69821] = {
        "Thunder Lord", -- [1]
        "Throne of Thunder", -- [2]
      },
      [26805] = {
        "Alliance Cleric", -- [1]
        "The Nexus", -- [2]
      },
      [170323] = {
        "General Grashaal", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [163157] = {
        "Amarth", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [136541] = {
        "Bile Oozeling", -- [1]
        "Waycrest Manor", -- [2]
      },
      [59873] = {
        "Corrupt Living Water", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [162647] = {
        "Hideous Behemoth", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [8095] = {
        "Sul'lithuz Sandcrawler", -- [1]
        "Zul'Farrak", -- [2]
      },
      [28341] = {
        "Infinite Agent", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [158041] = {
        "N'Zoth the Corruptor", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [170838] = {
        "Unyielding Contender", -- [1]
        "Theater of Pain", -- [2]
      },
      [135007] = {
        "Orb Guardian", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [16504] = {
        "Arcane Protector", -- [1]
        "Karazhan", -- [2]
      },
      [159578] = {
        "Exposed Synapse", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [164185] = {
        "Echelon", -- [1]
        "Halls of Atonement", -- [2]
      },
      [126642] = {
        "Sandyback Crab", -- [1]
        "Siege of Boralus", -- [2]
      },
      [171166] = {
        "Unraveling Soul Remnant", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [69131] = {
        "Frost King Malakk", -- [1]
        "Throne of Thunder", -- [2]
      },
      [128434] = {
        "Feasting Skyscreamer", -- [1]
        "Atal'Dazar", -- [2]
      },
      [164621] = {
        "Oozing Slime", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [178427] = {
        "Deadsoul Wraith", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [129788] = {
        "Irontide Bonesaw", -- [1]
        "Freehold", -- [2]
      },
      [24201] = {
        "Dalronn the Controller", -- [1]
        "Utgarde Keep", -- [2]
      },
      [179526] = {
        "Troz'igal the Oppressor", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [178008] = {
        "Decrepit Orb", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [177787] = {
        "Mawsworn Hopebreaker", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [171656] = {
        "Venomous Sniper Captain", -- [1]
        "Plaguefall", -- [2]
      },
      [26550] = {
        "Dragonflayer Deathseeker", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [175861] = {
        "Glacial Spike", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [135971] = {
        "Faithless Conscript", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [180781] = {
        "Frothing Hound", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [177154] = {
        "Mawsworn Vanguard", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [13437] = {
        "Wing Commander Ichman", -- [1]
        "Alterac Valley", -- [2]
      },
      [136181] = {
        "Volcano", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [128435] = {
        "Toxic Saurid", -- [1]
        "Atal'Dazar", -- [2]
      },
      [179388] = {
        "Hourglass Tidesage", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [179837] = {
        "Tracker Zo'korss", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [180392] = {
        "Gorgoan Souldrinker", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [180782] = {
        "Consumed Soul", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [137716] = {
        "Bottom Feeder", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [62982] = {
        "Mindbender", -- [1]
        "The Battle for Gilneas", -- [2]
      },
      [180779] = {
        "Terrorspine", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [122969] = {
        "Zanchuli Witch-Doctor", -- [1]
        "Atal'Dazar", -- [2]
      },
      [174802] = {
        "Venomous Sniper", -- [1]
        "Plaguefall", -- [2]
      },
      [179842] = {
        "Commerce Enforcer", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [94737] = {
        "7th Legion Battlemage", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [164702] = {
        "Carrion Worm", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [136549] = {
        "Ashvane Cannoneer", -- [1]
        "Siege of Boralus", -- [2]
      },
      [149346] = {
        "Suffused Azerite", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [178165] = {
        "Coastwalker Goliath", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [176394] = {
        "P.O.S.T. Worker", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [179841] = {
        "Veteran Sparkcaster", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [26824] = {
        "Drakkari Raptor Mount", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [164191] = {
        "Noble Courtier", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [177159] = {
        "Soulburner Fraxin", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [177500] = {
        "Corsair Brute", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [26696] = {
        "Ymirjar Berserker", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [13318] = {
        "Commander Mortimer", -- [1]
        "Alterac Valley", -- [2]
      },
      [13320] = {
        "Commander Karl Philips", -- [1]
        "Alterac Valley", -- [2]
      },
      [13577] = {
        "Stormpike Ram Rider Commander", -- [1]
        "Alterac Valley", -- [2]
      },
      [139110] = {
        "Spark Channeler", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [170474] = {
        "Brood Assassin", -- [1]
        "Plaguefall", -- [2]
      },
      [137516] = {
        "Ashvane Invader", -- [1]
        "Siege of Boralus", -- [2]
      },
      [173406] = {
        "Renegade Abomination", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [169823] = {
        "Gorm Behemoth", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [77936] = {
        "Greater Storm Elemental", -- [1]
        "Temple of Kotmogu", -- [2]
      },
      [14283] = {
        "Stormpike Owl", -- [1]
        "Alterac Valley", -- [2]
      },
      [179433] = {
        "Vault Aegis", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [176953] = {
        "Mawsworn Flamehand", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [135234] = {
        "Diseased Mastiff", -- [1]
        "Waycrest Manor", -- [2]
      },
      [164705] = {
        "Pestilence Slime", -- [1]
        "Plaguefall", -- [2]
      },
      [178957] = {
        "Empowered Mawsworn Soulwarden", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [145903] = {
        "Darkforged Crusader", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [175616] = {
        "Zo'phex", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [130485] = {
        "Mechanized Peacekeeper", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [178851] = {
        "Burning Stygia", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [130655] = {
        "Bobby Howlis", -- [1]
        "Tol Dagor", -- [2]
      },
      [162328] = {
        "Warlock", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [144231] = {
        "Rowdy Reveler", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [175725] = {
        "Eye of the Jailer", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [180407] = {
        "Gorgoan Sentinel", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [133482] = {
        "Crawler Mine", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [157017] = {
        "Lithic Watcher", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [179733] = {
        "Invigorating Fish Stick", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [169173] = {
        "Meatball's Tormentor", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [180389] = {
        "Mawsworn Rageguard", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [164707] = {
        "Congealed Slime", -- [1]
        "Plaguefall", -- [2]
      },
      [162298] = {
        "Yulkatar the Cruel", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [177950] = {
        "Soul Prison", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [59801] = {
        "Krik'thik Wind Shaper", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [170850] = {
        "Raging Bloodhorn", -- [1]
        "Theater of Pain", -- [2]
      },
      [180865] = {
        "Twisted Warden", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [139626] = {
        "Dredged Sailor", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [131436] = {
        "Chosen Blood Matron", -- [1]
        "The Underrot", -- [2]
      },
      [59684] = {
        "Hozen Party Animal", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [70341] = {
        "Tormented Spirit", -- [1]
        "Throne of Thunder", -- [2]
      },
      [168718] = {
        "Forsworn Warden", -- [1]
        "Spires of Ascension", -- [2]
      },
      [5277] = {
        "Nightmare Scalebane", -- [1]
        "Sunken Temple", -- [2]
      },
      [170851] = {
        "Volatile Plague Bomb", -- [1]
        "Plaguefall", -- [2]
      },
      [61701] = {
        "Sik'thik Warrior", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [166920] = {
        "Blighted Servitor", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [61445] = {
        "Haiyan the Unstoppable", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [172899] = {
        "Nathrian Enforcer", -- [1]
        "Castle Nathria", -- [2]
      },
      [9240] = {
        "Smolderthorn Shadow Priest", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [180470] = {
        "Verethian", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [168713] = {
        "Dread Caller Skulfir", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [16539] = {
        "Homunculus", -- [1]
        "Karazhan", -- [2]
      },
      [180786] = {
        "Binding of Misery", -- [1]
        "Spires of Ascension", -- [2]
      },
      [168934] = {
        "Enraged Spirit", -- [1]
        "De Other Side", -- [2]
      },
      [138576] = {
        "Faceless Tendril", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [28167] = {
        "Risen Zombie", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [165222] = {
        "Zolramus Bonemender", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [29216] = {
        "Anub'ar Guardian", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [169601] = {
        "Stone Legion Commando", -- [1]
        "Castle Nathria", -- [2]
      },
      [69756] = {
        "Anima Orb", -- [1]
        "Throne of Thunder", -- [2]
      },
      [13358] = {
        "Stormpike Bowman", -- [1]
        "Alterac Valley", -- [2]
      },
      [139817] = {
        "Chief Engineer Zazzy", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [129208] = {
        "Dread Captain Lockwood", -- [1]
        "Siege of Boralus", -- [2]
      },
      [177286] = {
        "Phantasmic Amalgamation", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [56678] = {
        "Jade Staff", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [156237] = {
        "Imperator Dara", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [61029] = {
        "Primal Fire Elemental", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [130488] = {
        "Mech Jockey", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [178732] = {
        "Mawsworn Runesmith", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [26641] = {
        "Drakkari Gutripper", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [4255] = {
        "Brogus Thunderbrew", -- [1]
        "Alterac Valley", -- [2]
      },
      [162133] = {
        "General Kaal", -- [1]
        "Sanguine Depths", -- [2]
      },
      [171521] = {
        "Dread Evoker", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [153451] = {
        "Kosarus the Fallen", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [95072] = {
        "Greater Earth Elemental", -- [1]
        "The Battle for Gilneas", -- [2]
      },
      [179892] = {
        "Oros Coldheart", -- [1]
        "Spires of Ascension", -- [2]
      },
      [13319] = {
        "Commander Duffy", -- [1]
        "Alterac Valley", -- [2]
      },
      [179942] = {
        "Deathseeker Eye", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [138061] = {
        "Venture Co. Longshoreman", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [156523] = {
        "Maut", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [175234] = {
        "Tractus the Icebreaker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [177162] = {
        "Mawsworn Interrogator", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [175882] = {
        "Mawsworn Outrider", -- [1]
        "Temple of Kotmogu", -- [2]
      },
      [130489] = {
        "Dazarian Stalker", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [10384] = {
        "Spectral Citizen", -- [1]
        "Stratholme", -- [2]
      },
      [180070] = {
        "Mawsworn Scryer", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [59494] = {
        "Yeasty Brew Alemental", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [29832] = {
        "Drakkari Golem", -- [1]
        "Gundrak", -- [2]
      },
      [14187] = {
        "Athramanis", -- [1]
        "Alterac Valley", -- [2]
      },
      [26631] = {
        "Novos the Summoner", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [109591] = {
        "Felguard Legionnaire", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [9269] = {
        "Smolderthorn Seer", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [134514] = {
        "Abyssal Cultist", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [89] = {
        "Infernal", -- [1]
        "Temple of Kotmogu", -- [2]
      },
      [155211] = {
        "Gormling Pest", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [19668] = {
        "Shadowfiend", -- [1]
        "Deepwind Gorge", -- [2]
      },
      [166919] = {
        "Foul Slayer", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [30278] = {
        "Ahn'kahar Spell Flinger", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [12207] = {
        "Thessala Hydra", -- [1]
        "Maraudon", -- [2]
      },
      [56511] = {
        "Corrupt Living Water", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [179560] = {
        "Fragment of Troz'igal", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [82310] = {
        "Stonehide Riverbeast", -- [1]
        "Ashran", -- [2]
      },
      [126983] = {
        "Harlan Sweete", -- [1]
        "Freehold", -- [2]
      },
      [61670] = {
        "Sik'thik Demolisher", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [163077] = {
        "Azules", -- [1]
        "Spires of Ascension", -- [2]
      },
      [13438] = {
        "Wing Commander Slidore", -- [1]
        "Alterac Valley", -- [2]
      },
      [166917] = {
        "Grove Wrecker", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [28878] = {
        "Skeletal Minion", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [59598] = {
        "Lesser Sha", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [24200] = {
        "Skarvald the Constructor", -- [1]
        "Utgarde Keep", -- [2]
      },
      [147825] = {
        "7th Legion Medic", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [82295] = {
        "Gronn Pulverizer", -- [1]
        "Ashran", -- [2]
      },
      [144754] = {
        "Fa'thuul the Feared", -- [1]
        "Crucible of Storms", -- [2]
      },
      [135903] = {
        "Manifestation of the Deep", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [9265] = {
        "Smolderthorn Shadow Hunter", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [134005] = {
        "Shalebiter", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [122973] = {
        "Dazar'ai Confessor", -- [1]
        "Atal'Dazar", -- [2]
      },
      [56637] = {
        "Ook-Ook", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [69834] = {
        "Lightning Guardian", -- [1]
        "Throne of Thunder", -- [2]
      },
      [142455] = {
        "Riverland Bronco", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [144755] = {
        "Zaxasj the Speaker", -- [1]
        "Crucible of Storms", -- [2]
      },
      [174161] = {
        "Lady Sinsear", -- [1]
        "Castle Nathria", -- [2]
      },
      [178539] = {
        "Mawsworn Eradicator", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [9268] = {
        "Smolderthorn Berserker", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [56719] = {
        "Sha of Violence", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [173640] = {
        "Obedient Shadehound", -- [1]
        "Temple of Kotmogu", -- [2]
      },
      [160112] = {
        "Stone Legion Nightblade", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [177004] = {
        "Tortured Amalgamation", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [2630] = {
        "Earthbind Totem", -- [1]
        "The Battle for Gilneas", -- [2]
      },
      [157016] = {
        "Imperial Archivist", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [10516] = {
        "The Unforgiven", -- [1]
        "Stratholme", -- [2]
      },
      [61699] = {
        "Sik'thik Amberwing", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [171522] = {
        "Foul Slayer", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [175652] = {
        "Lord of Woe", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [147828] = {
        "7th Legion Cavalier", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [8894] = {
        "Anvilrage Medic", -- [1]
        "Blackrock Depths", -- [2]
      },
      [8916] = {
        "Arena Spectator", -- [1]
        "Blackrock Depths", -- [2]
      },
      [178029] = {
        "Mawsworn Wingsoldier", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [137591] = {
        "Healing Tide Totem", -- [1]
        "Kings' Rest", -- [2]
      },
      [168960] = {
        "Fulfir the Scarred", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [141285] = {
        "Kul Tiran Marksman", -- [1]
        "Siege of Boralus", -- [2]
      },
      [171887] = {
        "Slimy Smorgasbord", -- [1]
        "Plaguefall", -- [2]
      },
      [166915] = {
        "Possessed Tender", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [9045] = {
        "Scarshield Acolyte", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [133835] = {
        "Feral Bloodswarmer", -- [1]
        "The Underrot", -- [2]
      },
      [58856] = {
        "Haunting Sha", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [126847] = {
        "Captain Raoul", -- [1]
        "Freehold", -- [2]
      },
      [140431] = {
        "Craghoof Goat", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [171376] = {
        "Head Custodian Javlin", -- [1]
        "Sanguine Depths", -- [2]
      },
      [168113] = {
        "General Grashaal", -- [1]
        "Castle Nathria", -- [2]
      },
      [9266] = {
        "Smolderthorn Witch Doctor", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [178139] = {
        "Murkbrine Shellcrusher", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [144759] = {
        "Keeper Dagda", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [26735] = {
        "Azure Scale-Binder", -- [1]
        "The Nexus", -- [2]
      },
      [165030] = {
        "Lady Inerva Darkvein", -- [1]
        "Castle Nathria Scenario", -- [2]
      },
      [8921] = {
        "Bloodhound", -- [1]
        "Blackrock Depths", -- [2]
      },
      [138972] = {
        "Zian-Ti Cloudbreaker", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [13797] = {
        "Mountaineer Boombellow", -- [1]
        "Alterac Valley", -- [2]
      },
      [129214] = {
        "Coin-Operated Crowd Pummeler", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [129470] = {
        "Deepsea Crab", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [163520] = {
        "Forsworn Squad-Leader", -- [1]
        "Spires of Ascension", -- [2]
      },
      [63106] = {
        "Sik'thik Swarmer", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [130404] = {
        "Vermin Trapper", -- [1]
        "Freehold", -- [2]
      },
      [69069] = {
        "Living Fluid", -- [1]
        "Throne of Thunder", -- [2]
      },
      [26553] = {
        "Dragonflayer Fanatic", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [131445] = {
        "Block Warden", -- [1]
        "Tol Dagor", -- [2]
      },
      [156022] = {
        "Bubbling Soulmass", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [140154] = {
        "Rotclaw Patriarch", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [136297] = {
        "Forgotten Denizen", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [145273] = {
        "The Hand of In'zashi", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [148622] = {
        "Echo of Kimbul", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [134012] = {
        "Taskmaster Askari", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [58959] = {
        "Pip'tok", -- [1]
        "Crucible of Storms", -- [2]
      },
      [23954] = {
        "Ingvar the Plunderer", -- [1]
        "Utgarde Keep", -- [2]
      },
      [156023] = {
        "Miniature Soulmass", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [129471] = {
        "Deepsea Sandcrawler", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [130909] = {
        "Fetid Maggot", -- [1]
        "The Underrot", -- [2]
      },
      [145274] = {
        "Yalat's Bulwark", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [173756] = {
        "Craigunshala-C'Thun", -- [1]
        "Deepwind Gorge", -- [2]
      },
      [69070] = {
        "Viscous Horror", -- [1]
        "Throne of Thunder", -- [2]
      },
      [168153] = {
        "Plagueroc", -- [1]
        "Plaguefall", -- [2]
      },
      [168961] = {
        "The Hungering Ones", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [156015] = {
        "Writhing Soulmass", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [26694] = {
        "Ymirjar Dusk Shaman", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [26630] = {
        "Trollgore", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [156212] = {
        "Coldheart Agent", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [27961] = {
        "Dark Rune Worker", -- [1]
        "Halls of Stone", -- [2]
      },
      [168578] = {
        "Fungalmancer", -- [1]
        "Plaguefall", -- [2]
      },
      [135706] = {
        "Bilge Rat Looter", -- [1]
        "Tol Dagor", -- [2]
      },
      [69516] = {
        "Zandalari Barricade", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [168310] = {
        "Plagueroc", -- [1]
        "Plaguefall", -- [2]
      },
      [12127] = {
        "Stormpike Guardsman", -- [1]
        "Alterac Valley", -- [2]
      },
      [140669] = {
        "Rockmane Howler", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [68036] = {
        "Durumu the Forgotten", -- [1]
        "Throne of Thunder", -- [2]
      },
      [147935] = {
        "Azergem Crawler", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [70202] = {
        "Manchu", -- [1]
        "Throne of Thunder", -- [2]
      },
      [16406] = {
        "Phantom Attendant", -- [1]
        "Karazhan", -- [2]
      },
      [146753] = {
        "Kul Tiran Marine", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [28729] = {
        "Watcher Narjil", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [61929] = {
        "Sik'thik Amber-Weaver", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [144765] = {
        "Asithra Diresong", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [28921] = {
        "Hadronox", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [166264] = {
        "Spare Parts", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [70235] = {
        "Frozen Head", -- [1]
        "Throne of Thunder", -- [2]
      },
      [138623] = {
        "Amathet Archer", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [33776] = {
        "Kissemurran", -- [1]
        "Crucible of Storms", -- [2]
      },
      [135552] = {
        "Deathtouched Slaver", -- [1]
        "Waycrest Manor", -- [2]
      },
      [4257] = {
        "Lana Thunderbrew", -- [1]
        "Alterac Valley", -- [2]
      },
      [132481] = {
        "Kul Tiran Vanguard", -- [1]
        "Siege of Boralus", -- [2]
      },
      [72655] = {
        "Fragment of Pride", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [94970] = {
        "Skyfire Gryphon Rider", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [173016] = {
        "Corpse Collector", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [171384] = {
        "Research Scribe", -- [1]
        "Sanguine Depths", -- [2]
      },
      [131009] = {
        "Spirit of Gold", -- [1]
        "Atal'Dazar", -- [2]
      },
      [164218] = {
        "Lord Chamberlain", -- [1]
        "Halls of Atonement", -- [2]
      },
      [126845] = {
        "Captain Jolly", -- [1]
        "Freehold", -- [2]
      },
      [55659] = {
        "Wild Imp", -- [1]
        "Waycrest Manor", -- [2]
      },
      [144747] = {
        "Pa'ku's Aspect", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [166266] = {
        "Spare Parts", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [8896] = {
        "Shadowforge Peasant", -- [1]
        "Blackrock Depths", -- [2]
      },
      [138625] = {
        "Amathet Enforcer", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [175992] = {
        "Dutiful Attendant", -- [1]
        "Castle Nathria", -- [2]
      },
      [131431] = {
        "Safety Inspection Bot", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [30329] = {
        "Savage Cave Beast", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [130644] = {
        "Daggertooth", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [130653] = {
        "Wanton Sapper", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [122967] = {
        "Priestess Alun'za", -- [1]
        "Atal'Dazar", -- [2]
      },
      [9216] = {
        "Spirestone Warlord", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [138626] = {
        "Amathet Zealot", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [163708] = {
        "Umbral Gatekeeper", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [60447] = {
        "Krik'thik Saboteur", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [26746] = {
        "Crazed Mana-Wraith", -- [1]
        "The Nexus", -- [2]
      },
      [176598] = {
        "Torment Golem", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [13439] = {
        "Wing Commander Vipore", -- [1]
        "Alterac Valley", -- [2]
      },
      [156239] = {
        "Dark Ascended Corrus", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [152708] = {
        "Mawsworn Seeker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [69657] = {
        "Zeb'tula Beastcaller", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [9257] = {
        "Scarshield Warlock", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [13599] = {
        "Stolid Snapjaw", -- [1]
        "Maraudon", -- [2]
      },
      [26529] = {
        "Meathook", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [122971] = {
        "Dazar'ai Juggernaut", -- [1]
        "Atal'Dazar", -- [2]
      },
      [58803] = {
        "Residual Hatred", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [140334] = {
        "Nightscale Coilfang", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [127488] = {
        "Ashvane Flamecaster", -- [1]
        "Tol Dagor", -- [2]
      },
      [138628] = {
        "Amathet Priest", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [69375] = {
        "Hidden Fog", -- [1]
        "Throne of Thunder", -- [2]
      },
      [136330] = {
        "Soul Thorns", -- [1]
        "Waycrest Manor", -- [2]
      },
      [10558] = {
        "Hearthsinger Forresten", -- [1]
        "Stratholme", -- [2]
      },
      [30414] = {
        "Forgotten One", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [178043] = {
        "Mawsworn Lancer", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [27962] = {
        "Dark Rune Elementalist", -- [1]
        "Halls of Stone", -- [2]
      },
      [10080] = {
        "Sandarr Dunereaver", -- [1]
        "Zul'Farrak", -- [2]
      },
      [138629] = {
        "Vicar Djosa", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [135046] = {
        "Crawmog", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [168318] = {
        "Forsworn Goliath", -- [1]
        "Spires of Ascension", -- [2]
      },
      [72658] = {
        "Amalgamated Hubris", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [144772] = {
        "Lady Tamakeen", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [173949] = {
        "Nathrian Soldier", -- [1]
        "Castle Nathria", -- [2]
      },
      [165010] = {
        "Congealed Slime", -- [1]
        "Plaguefall", -- [2]
      },
      [139654] = {
        "Dampscale Mudskipper", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [138630] = {
        "Cleric Izzad", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [163712] = {
        "Dying Voidspawn", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [28730] = {
        "Watcher Gashra", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [134139] = {
        "Shrine Templar", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [132919] = {
        "Spitefin Behemoth", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [28922] = {
        "Anub'ar Crusher", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [173191] = {
        "Soulstalker V'lara", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [162689] = {
        "Surgeon Stitchflesh", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [167966] = {
        "Experimental Sludge", -- [1]
        "De Other Side", -- [2]
      },
      [135048] = {
        "Gorestained Piglet", -- [1]
        "Waycrest Manor", -- [2]
      },
      [164550] = {
        "Slithering Ooze", -- [1]
        "Plaguefall", -- [2]
      },
      [164737] = {
        "Brood Ambusher", -- [1]
        "Plaguefall", -- [2]
      },
      [135406] = {
        "Animated Gold", -- [1]
        "Kings' Rest", -- [2]
      },
      [157571] = {
        "Mawsworn Flametender", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [135245] = {
        "Bilge Rat Demolisher", -- [1]
        "Siege of Boralus", -- [2]
      },
      [164171] = {
        "Honored Duelist", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [133379] = {
        "Adderis", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [135049] = {
        "Dreadwing Raven", -- [1]
        "Waycrest Manor", -- [2]
      },
      [129602] = {
        "Irontide Enforcer", -- [1]
        "Freehold", -- [2]
      },
      [17533] = {
        "Romulo", -- [1]
        "Karazhan", -- [2]
      },
      [165762] = {
        "Soul Infuser", -- [1]
        "Castle Nathria", -- [2]
      },
      [157572] = {
        "Mawsworn Firecaller", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [162303] = {
        "Aqir Swarmkeeper", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [162691] = {
        "Blightbone", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [144776] = {
        "Airyn Swiftfeet", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [165251] = {
        "Illusionary Vulpin", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [135562] = {
        "Venomous Ophidian", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [165763] = {
        "Vile Occultist", -- [1]
        "Castle Nathria", -- [2]
      },
      [132491] = {
        "Kul Tiran Marksman", -- [1]
        "Siege of Boralus", -- [2]
      },
      [173953] = {
        "Loyal Gargon", -- [1]
        "Castle Nathria", -- [2]
      },
      [166275] = {
        "Mistveil Shaper", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [170882] = {
        "Bone Magus", -- [1]
        "Theater of Pain", -- [2]
      },
      [26555] = {
        "Scourge Hulk", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [126919] = {
        "Irontide Stormcaller", -- [1]
        "Freehold", -- [2]
      },
      [5649] = {
        "Sandfury Blood Drinker", -- [1]
        "Zul'Farrak", -- [2]
      },
      [169859] = {
        "Observer Zelgar", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [159190] = {
        "Synod", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [165764] = {
        "Rockbound Vanquisher", -- [1]
        "Castle Nathria", -- [2]
      },
      [166276] = {
        "Mistveil Guardian", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [128455] = {
        "T'lonja", -- [1]
        "Atal'Dazar", -- [2]
      },
      [23970] = {
        "Vrykul Skeleton", -- [1]
        "Utgarde Keep", -- [2]
      },
      [135052] = {
        "Blight Toad", -- [1]
        "Waycrest Manor", -- [2]
      },
      [139659] = {
        "Dampscale Oracle", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [136076] = {
        "Agitated Nimbus", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [167566] = {
        "Bleakwing Assassin", -- [1]
        "Castle Nathria", -- [2]
      },
      [72661] = {
        "Zeal", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [70232] = {
        "Muckbat", -- [1]
        "Throne of Thunder", -- [2]
      },
      [69078] = {
        "Sul the Sandcrawler", -- [1]
        "Throne of Thunder", -- [2]
      },
      [171396] = {
        "Kyrian Goliath", -- [1]
        "Rated Eye of the Storm", -- [2]
      },
      [69540] = {
        "Zeb'tula Raptor", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [139660] = {
        "Dampscale Murloc", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [168837] = {
        "Stealthling", -- [1]
        "Plaguefall", -- [2]
      },
      [173444] = {
        "Caramain", -- [1]
        "Castle Nathria", -- [2]
      },
      [169861] = {
        "Ickor Bileflesh", -- [1]
        "Plaguefall", -- [2]
      },
      [27963] = {
        "Dark Rune Theurgist", -- [1]
        "Halls of Stone", -- [2]
      },
      [56912] = {
        "Krik'thik Engulfer", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [146827] = {
        "Feral Dog", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [6017] = {
        "Lava Spout Totem", -- [1]
        "Zul'Farrak", -- [2]
      },
      [139661] = {
        "Dampscale Forager", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [12096] = {
        "Stormpike Quartermaster", -- [1]
        "Alterac Valley", -- [2]
      },
      [173445] = {
        "Sindrel", -- [1]
        "Castle Nathria", -- [2]
      },
      [133007] = {
        "Unbound Abomination", -- [1]
        "The Underrot", -- [2]
      },
      [137614] = {
        "Demolishing Terror", -- [1]
        "Siege of Boralus", -- [2]
      },
      [164897] = {
        "Fog Dweller", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [146828] = {
        "Feral Pup", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [144970] = {
        "Kaldorei Archer", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [139662] = {
        "Dampscale Raincaller", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [171474] = {
        "Finger Food", -- [1]
        "Plaguefall", -- [2]
      },
      [173446] = {
        "Hargitas", -- [1]
        "Castle Nathria", -- [2]
      },
      [137103] = {
        "Blood Visage", -- [1]
        "The Underrot", -- [2]
      },
      [69639] = {
        "Humming Crystal", -- [1]
        "Throne of Thunder", -- [2]
      },
      [90686] = {
        "Felstalker Dreadhound", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [146829] = {
        "Undying Guardian", -- [1]
        "Crucible of Storms", -- [2]
      },
      [128969] = {
        "Ashvane Commander", -- [1]
        "Siege of Boralus", -- [2]
      },
      [19874] = {
        "Baron Rafe Dreuger", -- [1]
        "Karazhan", -- [2]
      },
      [29307] = {
        "Drakkari Colossus", -- [1]
        "Gundrak", -- [2]
      },
      [144782] = {
        "Brother Bruen", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [138843] = {
        "Wingleader Srak'ik", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [100943] = {
        "Earthen Wall Totem", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [90506] = {
        "Felfire Imp", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [164578] = {
        "Stitchflesh's Creation", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [17534] = {
        "Julianne", -- [1]
        "Karazhan", -- [2]
      },
      [139664] = {
        "Dampscale Terrorfin", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [29819] = {
        "Drakkari Lancer", -- [1]
        "Gundrak", -- [2]
      },
      [173448] = {
        "Dragost", -- [1]
        "Castle Nathria", -- [2]
      },
      [136391] = {
        "Heart Guardian", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [148615] = {
        "Div'yane", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [19873] = {
        "Lord Crispin Ference", -- [1]
        "Karazhan", -- [2]
      },
      [138641] = {
        "Kvaldir Dreadbringer", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [136665] = {
        "Ashvane Spotter", -- [1]
        "Tol Dagor", -- [2]
      },
      [176520] = {
        "Ocular Commander", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [146320] = {
        "Prelate Za'lan", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [68313] = {
        "Roaming Fog", -- [1]
        "Throne of Thunder", -- [2]
      },
      [168843] = {
        "Klotos", -- [1]
        "Spires of Ascension", -- [2]
      },
      [13216] = {
        "Gaelden Hammersmith", -- [1]
        "Alterac Valley", -- [2]
      },
      [179080] = {
        "Empowered Mawsworn Cremator", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [138642] = {
        "Kvaldir Reaver", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [26620] = {
        "Drakkari Guardian", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [26684] = {
        "Ravenous Furbolg", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [136083] = {
        "Forgotten Denizen", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [165260] = {
        "Oozing Leftovers", -- [1]
        "Theater of Pain", -- [2]
      },
      [140434] = {
        "Craghoof Rockhorn", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [134617] = {
        "Krolusk Hatchling", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [134939] = {
        "Bristlethorn Maneater", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [146833] = {
        "Necromancer Conjurer", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [133593] = {
        "Expert Technician", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [129227] = {
        "Azerokk", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [168844] = {
        "Lakesis", -- [1]
        "Spires of Ascension", -- [2]
      },
      [138558] = {
        "Faceless One", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [145298] = {
        "Feral Hungerer", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [157583] = {
        "Forge Keeper", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [146322] = {
        "Siegebreaker Roka", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [146834] = {
        "Necromancer Master", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [29316] = {
        "Moragg", -- [1]
        "Violet Hold", -- [2]
      },
      [176523] = {
        "Painsmith Raznal", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [168845] = {
        "Astronos", -- [1]
        "Spires of Ascension", -- [2]
      },
      [152661] = {
        "Mawsworn Ward", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [157584] = {
        "Flameforge Master", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [27964] = {
        "Dark Rune Scholar", -- [1]
        "Halls of Stone", -- [2]
      },
      [146835] = {
        "Ghoul", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [138645] = {
        "Kvaldir Soulflayer", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [135247] = {
        "Varigg", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [144971] = {
        "Druid of the Branch", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [56876] = {
        "Krik'thik Sapper", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [135759] = {
        "Earthwall Totem", -- [1]
        "Kings' Rest", -- [2]
      },
      [56589] = {
        "Striker Ga'dok", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [155483] = {
        "Faeleaf Shimmerwing", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [168326] = {
        "Shattered Visage", -- [1]
        "De Other Side", -- [2]
      },
      [138646] = {
        "Kvaldir Mistcaller", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [5913] = {
        "Tremor Totem", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [28732] = {
        "Anub'ar Warrior", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [131311] = {
        "Unleashed Azerite", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [134173] = {
        "Animated Droplet", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [169871] = {
        "Hungry Mawrat", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [120527] = {
        "Kalwyn", -- [1]
        "Temple of Kotmogu", -- [2]
      },
      [100820] = {
        "Spirit Wolf", -- [1]
        "Theater of Pain", -- [2]
      },
      [138647] = {
        "Hjana Fogbringer", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [171919] = {
        "Ayeleth's Torturer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [139671] = {
        "Sharkslayer Mugluk", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [29308] = {
        "Prince Taldaram", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [135475] = {
        "Kula the Butcher", -- [1]
        "Kings' Rest", -- [2]
      },
      [105427] = {
        "Skyfury Totem", -- [1]
        "The Battle for Gilneas", -- [2]
      },
      [134041] = {
        "Infected Peasant", -- [1]
        "Waycrest Manor", -- [2]
      },
      [146326] = {
        "Headhunter Gal'wana", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [146838] = {
        "Brittle Skeleton", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [56448] = {
        "Wise Mari", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [168337] = {
        "Moldovaak", -- [1]
        "Castle Nathria", -- [2]
      },
      [29820] = {
        "Drakkari God Hunter", -- [1]
        "Gundrak", -- [2]
      },
      [137625] = {
        "Demolishing Terror", -- [1]
        "Siege of Boralus", -- [2]
      },
      [145303] = {
        "Kaldorei Glaive Thrower", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [99541] = {
        "Risen Skulker", -- [1]
        "Silvershard Mines", -- [2]
      },
      [162041] = {
        "Grubby Dirtcruncher", -- [1]
        "Sanguine Depths", -- [2]
      },
      [135329] = {
        "Matron Bryndle", -- [1]
        "Waycrest Manor", -- [2]
      },
      [138841] = {
        "Zara'thik Battlesinger", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [139673] = {
        "Many-Teeth", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [135893] = {
        "Burning Emberguard", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [138579] = {
        "Giant Claw Tentacle", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [145304] = {
        "Feral Strangler", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [137626] = {
        "Demolishing Terror", -- [1]
        "Siege of Boralus", -- [2]
      },
      [70240] = {
        "Shan'ze Celestial Shaper", -- [1]
        "Throne of Thunder", -- [2]
      },
      [138650] = {
        "Tide-Lost Champion", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [26621] = {
        "Ghoul Tormentor", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [159768] = {
        "Deresh of the Nothingness", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [69701] = {
        "Anima Golem", -- [1]
        "Throne of Thunder", -- [2]
      },
      [161173] = {
        "Abyssal Watcher", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [145305] = {
        "Feral Hulk", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [98035] = {
        "Dreadstalker", -- [1]
        "Crucible of Storms", -- [2]
      },
      [164862] = {
        "Weald Shimmermoth", -- [1]
        "De Other Side", -- [2]
      },
      [157253] = {
        "Ka'zir", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [153552] = {
        "Weeping Wraith", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [129231] = {
        "Rixxa Fluxflame", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [162040] = {
        "Grand Overseer", -- [1]
        "Sanguine Depths", -- [2]
      },
      [24084] = {
        "Tunneling Ghoul", -- [1]
        "Utgarde Keep", -- [2]
      },
      [131585] = {
        "Enthralled Guard", -- [1]
        "Waycrest Manor", -- [2]
      },
      [26554] = {
        "Dragonflayer Seer", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [26530] = {
        "Salramm the Fleshcrafter", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [56763] = {
        "Regenerating Sha", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [126928] = {
        "Irontide Corsair", -- [1]
        "Freehold", -- [2]
      },
      [27709] = {
        "Drakkari Invader", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [160663] = {
        "Essence of Nightmare", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [127119] = {
        "Freehold Deckhand", -- [1]
        "Freehold", -- [2]
      },
      [159219] = {
        "Umbral Seer", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [27965] = {
        "Dark Rune Shaper", -- [1]
        "Halls of Stone", -- [2]
      },
      [161229] = {
        "Aqir Venomweaver", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [146843] = {
        "Spiked Ghoul", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [144944] = {
        "Thirsting Bloodsucker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [129232] = {
        "Mogul Razdunk", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [130661] = {
        "Venture Co. Earthshaper", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [144796] = {
        "High Tinker Mekkatorque", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [173973] = {
        "Nathrian Tracker", -- [1]
        "Castle Nathria", -- [2]
      },
      [138644] = {
        "Kvaldir Cursewalker", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [140354] = {
        "Brightscale Wind Serpent", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [138654] = {
        "Vestar of the Tattered Sail", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [167967] = {
        "Sentient Oil", -- [1]
        "De Other Side", -- [2]
      },
      [28733] = {
        "Anub'ar Shadowcaster", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [134024] = {
        "Devouring Maggot", -- [1]
        "Waycrest Manor", -- [2]
      },
      [78557] = {
        "Goren Hatchling", -- [1]
        "Ashran", -- [2]
      },
      [162051] = {
        "Frenzied Ghoul", -- [1]
        "Sanguine Depths", -- [2]
      },
      [154011] = {
        "Armed Prisoner", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [164363] = {
        "Undying Stonefiend", -- [1]
        "Halls of Atonement", -- [2]
      },
      [146845] = {
        "Jared the Jagged", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [144286] = {
        "Asset Manager", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [148893] = {
        "Tormented Soul", -- [1]
        "Siege of Boralus", -- [2]
      },
      [29309] = {
        "Elder Nadox", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [157083] = {
        "Stonewing Ravager", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [168949] = {
        "Risen Bonesoldier", -- [1]
        "De Other Side", -- [2]
      },
      [140068] = {
        "Rustpelt Snarler", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [130575] = {
        "Wandering Axebeak", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [131669] = {
        "Jagged Hound", -- [1]
        "Waycrest Manor", -- [2]
      },
      [91970] = {
        "Felguard Invader", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [176535] = {
        "Infused Goliath", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [148894] = {
        "Lost Soul", -- [1]
        "Siege of Boralus", -- [2]
      },
      [173464] = {
        "Deplina", -- [1]
        "Castle Nathria", -- [2]
      },
      [178071] = {
        "Maw Assassin", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [140425] = {
        "Surefoot", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [103896] = {
        "Felfire Imp", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [59518] = {
        "Bloated Brew Alemental", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [171929] = {
        "Errant Stoneborn", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [16414] = {
        "Ghostly Steward", -- [1]
        "Karazhan", -- [2]
      },
      [138820] = {
        "Bloodwake Vrykul", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [154014] = {
        "Imprisoned Cabalist", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [178072] = {
        "Anduin Wrynn", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [166299] = {
        "Mistveil Tender", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [124583] = {
        "Garnetback Worm", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [131492] = {
        "Devout Blood Priest", -- [1]
        "The Underrot", -- [2]
      },
      [26622] = {
        "Drakkari Bat", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [176537] = {
        "Infused Goliath", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [154015] = {
        "Escaped Ritualist", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [173466] = {
        "Fara", -- [1]
        "Castle Nathria", -- [2]
      },
      [29315] = {
        "Erekem", -- [1]
        "Violet Hold", -- [2]
      },
      [95451] = {
        "Genn Greymane", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [167806] = {
        "Animated Sin", -- [1]
        "Halls of Atonement", -- [2]
      },
      [138659] = {
        "Risen Hound", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [176026] = {
        "Dancing Fools", -- [1]
        "Castle Nathria", -- [2]
      },
      [176538] = {
        "Infused Goliath", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [136100] = {
        "Sunken Denizen", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [59555] = {
        "Haunting Sha", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [166301] = {
        "Mistveil Stalker", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [154016] = {
        "Prisonbreak Soulmender", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [171772] = {
        "Mistveil Defender", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [146850] = {
        "Grand Master Ulrich", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [146678] = {
        "Ancient Protector", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [176539] = {
        "Infused Goliath", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [162692] = {
        "Amarth", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [167607] = {
        "Stoneborn Slasher", -- [1]
        "Halls of Atonement", -- [2]
      },
      [24083] = {
        "Enslaved Proto-Drake", -- [1]
        "Utgarde Keep", -- [2]
      },
      [27966] = {
        "Dark Rune Controller", -- [1]
        "Halls of Stone", -- [2]
      },
      [103898] = {
        "Sickly Imp", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [166934] = {
        "Lor the Loyal", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [140620] = {
        "South Sea Stinger", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [164255] = {
        "Globgrog", -- [1]
        "Plaguefall", -- [2]
      },
      [137474] = {
        "King Timalji", -- [1]
        "Kings' Rest", -- [2]
      },
      [173469] = {
        "Kullan", -- [1]
        "Castle Nathria", -- [2]
      },
      [80583] = {
        "Pale Gloomstalker", -- [1]
        "FW Horde Garrison Level 1", -- [2]
      },
      [154018] = {
        "Prisonbreak Mauler", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [144996] = {
        "Visage from Beyond", -- [1]
        "Crucible of Storms", -- [2]
      },
      [171422] = {
        "Arch-Suppressor Laguas", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [28419] = {
        "Frenzied Geist", -- [1]
        "Utgarde Keep", -- [2]
      },
      [28734] = {
        "Anub'ar Skirmisher", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [146853] = {
        "Kefolkis the Unburied", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [152995] = {
        "Warden of Souls", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [14465] = {
        "Alliance Battle Standard", -- [1]
        "Eye of the Storm", -- [2]
      },
      [166304] = {
        "Mistveil Stinger", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [103899] = {
        "Shadowflame Imp", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [29118] = {
        "Anub'ar Crypt Fiend", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [166933] = {
        "Ventun the Ravenous", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [27742] = {
        "Infinite Adversary", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [59553] = {
        "The Songbird Queen", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [138556] = {
        "Tainted Ooze", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [130334] = {
        "Gritplate Gazer", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [154020] = {
        "Prisonbreak Cursewalker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [126422] = {
        "Coralback Scuttler", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [146854] = {
        "Stella Darkpaw", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [144807] = {
        "Ravenous Stalker", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [119000] = {
        "Dreadbeard", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [29822] = {
        "Drakkari Fire Weaver", -- [1]
        "Gundrak", -- [2]
      },
      [59764] = {
        "Healing Tide Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [178079] = {
        "The Jailer", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [169458] = {
        "Hecutis", -- [1]
        "Castle Nathria", -- [2]
      },
      [134058] = {
        "Galecaller Faye", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [140838] = {
        "Mischievous Flood", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [131667] = {
        "Soulbound Goliath", -- [1]
        "Waycrest Manor", -- [2]
      },
      [70445] = {
        "Stormbringer Draz'kil", -- [1]
        "Throne of Thunder", -- [2]
      },
      [148618] = {
        "Archdruid Andrenius", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [164362] = {
        "Slimy Morsel", -- [1]
        "Plaguefall", -- [2]
      },
      [26687] = {
        "Gortok Palehoof", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [154022] = {
        "Prisonbreak Packleader", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [126423] = {
        "Coralback Crab", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [178626] = {
        "Mawrat", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [26623] = {
        "Scourge Brute", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [180640] = {
        "Stormbound Breaker", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [139690] = {
        "Brineshell Seacaller", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [157094] = {
        "Imperial Curator", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [91569] = {
        "Volatile Bear", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [145064] = {
        "Blaze", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [134060] = {
        "Lord Stormsong", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [110616] = {
        "Dark Worshipper", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [164261] = {
        "Hungering Destroyer", -- [1]
        "Castle Nathria", -- [2]
      },
      [139691] = {
        "Brineshell Squallshaper", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [165414] = {
        "Depraved Obliterator", -- [1]
        "Halls of Atonement", -- [2]
      },
      [157439] = {
        "Fury of N'Zoth", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [178625] = {
        "Mawsworn Archer", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [160937] = {
        "Night Terror", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [126424] = {
        "Coralback Surfcrawler", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [164557] = {
        "Shard of Halkias", -- [1]
        "Halls of Atonement", -- [2]
      },
      [147370] = {
        "Bladeguard Kaja", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [164804] = {
        "Droman Oulfarran", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [176577] = {
        "Mawsworn Cremator", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [26627] = {
        "Crystal Handler", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [169893] = {
        "Nefarious Darkspeaker", -- [1]
        "Theater of Pain", -- [2]
      },
      [28368] = {
        "Ymirjar Necromancer", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [136264] = {
        "Half-Finished Mummy", -- [1]
        "Kings' Rest", -- [2]
      },
      [146859] = {
        "Enslaved Rock Elemental", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [16544] = {
        "Ethereal Thief", -- [1]
        "Karazhan", -- [2]
      },
      [28410] = {
        "Dragonflayer Spiritualist", -- [1]
        "Utgarde Keep", -- [2]
      },
      [144840] = {
        "Mottled Fawn", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [148907] = {
        "Prismatic Image", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [113130] = {
        "Burning Sentry", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [134899] = {
        "Venomfang Lurker", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [134063] = {
        "Brother Ironhull", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [146860] = {
        "Mistscorn Marauder", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [123001] = {
        "Dark Water", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [160169] = {
        "Honored Duelist", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [69351] = {
        "Greater Cave Bat", -- [1]
        "Throne of Thunder", -- [2]
      },
      [153003] = {
        "Soul Fragment", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [140996] = {
        "Deepbore", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [71480] = {
        "Sun Tenderheart", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [162729] = {
        "Patchwerk Soldier", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [171431] = {
        "Suppressor Vellon", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [70557] = {
        "Zandalari Prophet", -- [1]
        "Throne of Thunder", -- [2]
      },
      [128967] = {
        "Ashvane Sniper", -- [1]
        "Siege of Boralus", -- [2]
      },
      [29311] = {
        "Herald Volazj", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [157099] = {
        "Imperial Censor", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [152517] = {
        "Deadsoul Lifetaker", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [122266] = {
        "Spineshell Turtle", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [130521] = {
        "Freehold Deckhand", -- [1]
        "Freehold", -- [2]
      },
      [69352] = {
        "Vampiric Cave Bat", -- [1]
        "Throne of Thunder", -- [2]
      },
      [86000] = {
        "Gentle Clefthoof", -- [1]
        "FW Horde Garrison Level 1", -- [2]
      },
      [168361] = {
        "Fen Hornet", -- [1]
        "Plaguefall", -- [2]
      },
      [171432] = {
        "Suppressor Hersi", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [132530] = {
        "Kul Tiran Vanguard", -- [1]
        "Siege of Boralus", -- [2]
      },
      [57109] = {
        "Minion of Doubt", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [134794] = {
        "Darklurker", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [171433] = {
        "Suppressor Cer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [146863] = {
        "Mistscorn Ravager", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [56439] = {
        "Sha of Doubt", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [164267] = {
        "Margrave Stradama", -- [1]
        "Plaguefall", -- [2]
      },
      [172991] = {
        "Drust Soulcleaver", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [167964] = {
        "4.RF-4.RF", -- [1]
        "De Other Side", -- [2]
      },
      [150958] = {
        "Mawsworn Guard", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [154030] = {
        "Oddly Large Mawrat", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [130522] = {
        "Freehold Shipmate", -- [1]
        "Freehold", -- [2]
      },
      [150959] = {
        "Mawsworn Interceptor", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [26624] = {
        "Wretched Belcher", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [139698] = {
        "Clattercraw the Oracle", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [171455] = {
        "Stonewall Gargon", -- [1]
        "Sanguine Depths", -- [2]
      },
      [132532] = {
        "Kul Tiran Marksman", -- [1]
        "Siege of Boralus", -- [2]
      },
      [58108] = {
        "Krik'thik Infiltrator", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [156980] = {
        "Essence of Void", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [61947] = {
        "Kargesh Ribcrusher", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [144837] = {
        "Darkshore Stag", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [17521] = {
        "The Big Bad Wolf", -- [1]
        "Karazhan", -- [2]
      },
      [176573] = {
        "Mawsworn Woebringer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [146862] = {
        "Mistscorn Subjugator", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [134599] = {
        "Imbued Stormcaller", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [165805] = {
        "Shade of Kael'thas", -- [1]
        "Castle Nathria", -- [2]
      },
      [157102] = {
        "Imperial Consular", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [134069] = {
        "Vol'zith the Whisperer", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [146866] = {
        "Enslaved Frost Elemental", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [139188] = {
        "Ironfur", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [139700] = {
        "Brineshell Sea Shaman", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [126181] = {
        "Ramut the Black", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [173484] = {
        "Conjured Manifestation", -- [1]
        "Castle Nathria", -- [2]
      },
      [61339] = {
        "Glintrok Oracle", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [164517] = {
        "Tred'ova", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [69944] = {
        "Sand Elemental", -- [1]
        "Throne of Thunder", -- [2]
      },
      [32191] = {
        "Azure Stalker", -- [1]
        "Violet Hold", -- [2]
      },
      [176572] = {
        "Mawsworn Accursed", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [176556] = {
        "Alcruux", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [168878] = {
        "Rigged Plagueborer", -- [1]
        "Plaguefall", -- [2]
      },
      [57080] = {
        "Corrupted Scroll", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [130012] = {
        "Irontide Ravager", -- [1]
        "Freehold", -- [2]
      },
      [178604] = {
        "Mawsworn Swarmer", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [126429] = {
        "Encrusted Coralback", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [71482] = {
        "Embodied Desperation", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [176555] = {
        "Achillite", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [56865] = {
        "Aqua Dancer", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [157122] = {
        "Patrician Cromwell", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [153011] = {
        "Binder Baritas", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [70212] = {
        "Flaming Head", -- [1]
        "Throne of Thunder", -- [2]
      },
      [29120] = {
        "Anub'arak", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [170927] = {
        "Erupting Ooze", -- [1]
        "Plaguefall", -- [2]
      },
      [10467] = {
        "Mana Tide Totem", -- [1]
        "Warsong Gulch", -- [2]
      },
      [139191] = {
        "Underbrush", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [165108] = {
        "Illusionary Clone", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [152500] = {
        "Deadsoul Amalgam", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [162311] = {
        "Death Knight", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [138429] = {
        "Spitefin Tidebinder", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [135366] = {
        "Blacktooth Arsonist", -- [1]
        "Tol Dagor", -- [2]
      },
      [135925] = {
        "Pyroblaze", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [150965] = {
        "Mawsworn Shackler", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [71475] = {
        "Rook Stonetoe", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [26722] = {
        "Azure Magus", -- [1]
        "The Nexus", -- [2]
      },
      [164873] = {
        "Runestag Elderhorn", -- [1]
        "De Other Side", -- [2]
      },
      [136250] = {
        "Hoodoo Hexer", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [169905] = {
        "Risen Warlord", -- [1]
        "De Other Side", -- [2]
      },
      [170417] = {
        "Animated Stygia", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [157634] = {
        "Flameforge Enforcer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [146871] = {
        "Matriarch Nas'naya", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [134331] = {
        "King Rahu'ai", -- [1]
        "Kings' Rest", -- [2]
      },
      [136991] = {
        "Blood-Hunter Dazal'ai", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [168882] = {
        "Fleeting Manifestation", -- [1]
        "Sanguine Depths", -- [2]
      },
      [157109] = {
        "Vampire Bat", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [102293] = {
        "Dread Admiral Eliza", -- [1]
        "Azsuna", -- [2]
      },
      [97510] = {
        "Soulbound Destructor", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [102300] = {
        "Raging Current", -- [1]
        "Azsuna", -- [2]
      },
      [146872] = {
        "Kachota the Exiled", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [26625] = {
        "Darkweb Recluse", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [160181] = {
        "Royal Arcanist", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [136643] = {
        "Azerite Extractor", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [1933] = {
        "Sheep", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [153015] = {
        "Bound Soul", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [170419] = {
        "Lost Dredger", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [180664] = {
        "Mawsworn Infuser", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [61434] = {
        "Sik'thik Vanguard", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [167962] = {
        "Defunct Dental Drill", -- [1]
        "De Other Side", -- [2]
      },
      [160182] = {
        "Void Initiate", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [68078] = {
        "Iron Qon", -- [1]
        "Throne of Thunder", -- [2]
      },
      [148921] = {
        "Kaldorei Glaive Thrower", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [167998] = {
        "Portal Guardian", -- [1]
        "Theater of Pain", -- [2]
      },
      [145850] = {
        "Gilnean Defuser", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [73197] = {
        "Lesser Sha Puddle", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [146874] = {
        "Windcaller Mariah", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [24085] = {
        "Dragonflayer Overseer", -- [1]
        "Utgarde Keep", -- [2]
      },
      [160183] = {
        "Void Fanatic", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [170414] = {
        "Howling Spectre", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [146867] = {
        "Mistscorn Sharphorn", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [135192] = {
        "Honored Raptor", -- [1]
        "Kings' Rest", -- [2]
      },
      [145851] = {
        "Kaldorei Hippogryph Rider", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [110617] = {
        "Shadowsworn Harbinger", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [147787] = {
        "7th Legion Battlemage", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [68079] = {
        "Ro'shak", -- [1]
        "Throne of Thunder", -- [2]
      },
      [172981] = {
        "Kyrian Stitchwerk", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [168886] = {
        "Virulax Blightweaver", -- [1]
        "Plaguefall", -- [2]
      },
      [136483] = {
        "Ashvane Deckhand", -- [1]
        "Siege of Boralus", -- [2]
      },
      [102298] = {
        "Dread Squallshaper", -- [1]
        "Azsuna", -- [2]
      },
      [59820] = {
        "Pandaren Cannoneer", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [162744] = {
        "Nekthara the Mangler", -- [1]
        "Theater of Pain", -- [2]
      },
      [102194] = {
        "Dread Crewman", -- [1]
        "Azsuna", -- [2]
      },
      [172312] = {
        "Spinemaw Gorger", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [176565] = {
        "Disruptive Patron", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [102185] = {
        "First Mate DeGauza", -- [1]
        "Azsuna", -- [2]
      },
      [170418] = {
        "Goxul the Devourer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [61945] = {
        "Gurthan Iron Maw", -- [1]
        "Azsuna", -- [2]
      },
      [157620] = {
        "Prophet Skitra", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [146365] = {
        "Blazing Fireguard", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [164861] = {
        "Spriggan Barkbinder", -- [1]
        "De Other Side", -- [2]
      },
      [147225] = {
        "Azerite Extractor", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [59547] = {
        "Jiang", -- [1]
        "Temple of the Jade Serpent", -- [2]
      },
      [152508] = {
        "Dusky Tremorbeast", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [110618] = {
        "Anchoring Crystal", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [169912] = {
        "Enraged Mask", -- [1]
        "De Other Side", -- [2]
      },
      [162933] = {
        "Thought Harvester", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [146366] = {
        "Molten Hound", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [171448] = {
        "Dreadful Huntmaster", -- [1]
        "Sanguine Depths", -- [2]
      },
      [135241] = {
        "Bilge Rat Pillager", -- [1]
        "Siege of Boralus", -- [2]
      },
      [138822] = {
        "Bloodwake Harpooner", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [132892] = {
        "Giddyleaf", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [179124] = {
        "Shade of Destiny", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [162056] = {
        "Rockbound Sprite", -- [1]
        "Sanguine Depths", -- [2]
      },
      [137487] = {
        "Skeletal Hunting Raptor", -- [1]
        "Kings' Rest", -- [2]
      },
      [146367] = {
        "Char'golm", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [61436] = {
        "Sik'thik Bladedancer", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [27969] = {
        "Dark Rune Giant", -- [1]
        "Halls of Stone", -- [2]
      },
      [71481] = {
        "Embodied Sorrow", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [134949] = {
        "Slateskitter", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [162318] = {
        "Monk", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [172979] = {
        "Honeydew Sporeflutterer", -- [1]
        "Mists of Tirna Scithe", -- [2]
      },
      [176563] = {
        "Zo'gron", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [176562] = {
        "Brawling Patron", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [164348] = {
        "Wandering Shade", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [26626] = {
        "Scourge Reanimator", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [26690] = {
        "Ymirjar Warrior", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [168891] = {
        "Rigged Plagueborer", -- [1]
        "Plaguefall", -- [2]
      },
      [157118] = {
        "Royal Advisor", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [61946] = {
        "Harthak Stormcaller", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [61398] = {
        "Xin the Weaponmaster", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [129758] = {
        "Irontide Grenadier", -- [1]
        "Freehold", -- [2]
      },
      [175546] = {
        "Timecap'n Hooktail", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [137484] = {
        "King A'akul", -- [1]
        "Kings' Rest", -- [2]
      },
      [180665] = {
        "Gibbering Soul", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [131863] = {
        "Raal the Gluttonous", -- [1]
        "Waycrest Manor", -- [2]
      },
      [177594] = {
        "Mawsworn Agonizer", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [149441] = {
        "Frozen Ballista", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [140834] = {
        "Laughing Blaze", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [146370] = {
        "Dark Iron Vanguard", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [146864] = {
        "Mistscorn Earthbinder", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [148488] = {
        "Unliving Augur", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [159305] = {
        "Maddened Conscript", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [168365] = {
        "Fungret Shroomtender", -- [1]
        "Plaguefall", -- [2]
      },
      [164406] = {
        "Shriekwing", -- [1]
        "Castle Nathria", -- [2]
      },
      [174012] = {
        "Executrix Ophelia", -- [1]
        "Castle Nathria", -- [2]
      },
      [27970] = {
        "Raging Construct", -- [1]
        "Halls of Stone", -- [2]
      },
      [146371] = {
        "Dark Iron Primalist", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [61910] = {
        "Resin Flake", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [157340] = {
        "Skeletal Remains", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [131527] = {
        "Lord Waycrest", -- [1]
        "Waycrest Manor", -- [2]
      },
      [162049] = {
        "Vestige of Doubt", -- [1]
        "Sanguine Depths", -- [2]
      },
      [139002] = {
        "Wildlands Totemic", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [169265] = {
        "Creepy Crawler", -- [1]
        "Plaguefall", -- [2]
      },
      [122086] = {
        "Slitherblade Ironscale", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [130011] = {
        "Irontide Buccaneer", -- [1]
        "Freehold", -- [2]
      },
      [65402] = {
        "Gurthan Swiftblade", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [94189] = {
        "Living Felblaze", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [5139] = {
        "Kurdrum Barleybeard", -- [1]
        "Alterac Valley", -- [2]
      },
      [139012] = {
        "Feral Guardian", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [161217] = {
        "Aqir Skitterer", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [165824] = {
        "Nar'zudah", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [147376] = {
        "Barrier", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [179133] = {
        "Mawsworn Guard", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [134600] = {
        "Sandswept Marksman", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [164266] = {
        "Domina Venomblade", -- [1]
        "Plaguefall", -- [2]
      },
      [176574] = {
        "Mawsworn Soulkeeper", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [5283] = {
        "Nightmare Wanderer", -- [1]
        "Sunken Temple", -- [2]
      },
      [161218] = {
        "Aqir Crusher", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [105451] = {
        "Counterstrike Totem", -- [1]
        "The Battle for Gilneas", -- [2]
      },
      [167955] = {
        "Sanguine Cadet", -- [1]
        "Sanguine Depths", -- [2]
      },
      [176551] = {
        "Vault Purifier", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [171456] = {
        "Shattered Devastator", -- [1]
        "Spires of Ascension", -- [2]
      },
      [94190] = {
        "Burning Sentry", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [176575] = {
        "Mawsworn Soulwarden", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [29826] = {
        "Drakkari Medicine Man", -- [1]
        "Gundrak", -- [2]
      },
      [144839] = {
        "Whitetail Doe", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [127111] = {
        "Irontide Oarsman", -- [1]
        "Freehold", -- [2]
      },
      [178623] = {
        "Mawsworn Guard", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [179135] = {
        "Deadsoul Shade", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [134602] = {
        "Shrouded Fang", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [180159] = {
        "Brawling Patron", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [176576] = {
        "Mawsworn Pyremancer", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [30338] = {
        "Ahn'kahar Swarmer", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [177600] = {
        "Mawsworn Realmbreaker", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [148619] = {
        "Echo of Akunda", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [178624] = {
        "Mawsworn Sentry", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [179136] = {
        "Deadsoul Shadow", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [30660] = {
        "Portal Guardian", -- [1]
        "Violet Hold", -- [2]
      },
      [94191] = {
        "Burning Terrorhound", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [26691] = {
        "Ymirjar Witch Doctor", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [136139] = {
        "Mechanized Peacekeeper", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [177601] = {
        "Mawsworn Invoker", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [138998] = {
        "Thick-Hide", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [145865] = {
        "Gilnean Musketeer", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [138187] = {
        "Grotesque Horror", -- [1]
        "The Underrot", -- [2]
      },
      [140429] = {
        "Drifthopper the Swift", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [167876] = {
        "Inquisitor Sigar", -- [1]
        "Halls of Atonement", -- [2]
      },
      [176578] = {
        "Vault Sentinel", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [113131] = {
        "Living Felblaze", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [144842] = {
        "Tide Crawler", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [169924] = {
        "Veteran Stoneguard", -- [1]
        "Castle Nathria", -- [2]
      },
      [122089] = {
        "Slitherblade Oracle", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [5650] = {
        "Sandfury Witch Doctor", -- [1]
        "Zul'Farrak", -- [2]
      },
      [162038] = {
        "Regal Mistdancer", -- [1]
        "Sanguine Depths", -- [2]
      },
      [61245] = {
        "Capacitor Totem", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [162327] = {
        "Rogue", -- [1]
        "Vision of Ysera Scenario", -- [2]
      },
      [71734] = {
        "Sha of Pride", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [138444] = {
        "General Vesparak", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [169925] = {
        "Begrudging Waiter", -- [1]
        "Castle Nathria", -- [2]
      },
      [27971] = {
        "Unrelenting Construct", -- [1]
        "Halls of Stone", -- [2]
      },
      [149556] = {
        "Eternal Enforcer", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [171461] = {
        "Blighted Servitor", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [129000] = {
        "Southsea Brawler", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [16408] = {
        "Phantom Valet", -- [1]
        "Karazhan", -- [2]
      },
      [113132] = {
        "Burning Terrorhound", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [134056] = {
        "Aqu'sirr", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [130024] = {
        "Soggy Shiprat", -- [1]
        "Freehold", -- [2]
      },
      [178628] = {
        "Mawsworn Darkcaster", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [70594] = {
        "Mist Lurker", -- [1]
        "Throne of Thunder", -- [2]
      },
      [167963] = {
        "Headless Client", -- [1]
        "De Other Side", -- [2]
      },
      [135365] = {
        "Matron Alma", -- [1]
        "Waycrest Manor", -- [2]
      },
      [176581] = {
        "Spiked Ball", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [166302] = {
        "Corpse Harvester", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [148940] = {
        "Kaldorei Chimaera", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [169927] = {
        "Putrid Butcher", -- [1]
        "Theater of Pain", -- [2]
      },
      [69916] = {
        "Gurubashi Berserker", -- [1]
        "Throne of Thunder", -- [2]
      },
      [62205] = {
        "Wing Leader Ner'onok", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [171463] = {
        "Spare Parts", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [134137] = {
        "Temple Attendant", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [138828] = {
        "Berhild the Fierce", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [177094] = {
        "Signe", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [123289] = {
        "Sparkleshell Deathclaw", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [130025] = {
        "Irontide Thug", -- [1]
        "Tol Dagor", -- [2]
      },
      [178630] = {
        "Mawsworn Seeker", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [146813] = {
        "Gunther the Gray", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [175559] = {
        "Kel'Thuzad", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [69911] = {
        "Zandalari Warlord", -- [1]
        "Throne of Thunder", -- [2]
      },
      [168393] = {
        "Plaguebelcher", -- [1]
        "Plaguefall", -- [2]
      },
      [177095] = {
        "Kyra", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [27731] = {
        "Acolyte", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [136295] = {
        "Sunken Denizen", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [178631] = {
        "Mawsworn Commander", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [162763] = {
        "Soulforged Bonereaver", -- [1]
        "Theater of Pain", -- [2]
      },
      [131587] = {
        "Bewitched Captain", -- [1]
        "Waycrest Manor", -- [2]
      },
      [144232] = {
        "Rowdy Reveler", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [168394] = {
        "Slimy Morsel", -- [1]
        "Plaguefall", -- [2]
      },
      [132051] = {
        "Blood Tick", -- [1]
        "The Underrot", -- [2]
      },
      [29117] = {
        "Anub'ar Champion", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [130026] = {
        "Bilge Rat Seaspeaker", -- [1]
        "Tol Dagor", -- [2]
      },
      [69658] = {
        "Zeb'tula Raptor", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [144948] = {
        "Leatherwing Hunter", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [135002] = {
        "Demonic Tyrant", -- [1]
        "Crucible of Storms", -- [2]
      },
      [26628] = {
        "Drakkari Scytheclaw", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [26692] = {
        "Ymirjar Harpooner", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [168907] = {
        "Slime Tentacle", -- [1]
        "Plaguefall", -- [2]
      },
      [144849] = {
        "Darkscale Scout", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [155226] = {
        "Verdant Keeper", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [102696] = {
        "Felslag Imp", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [176531] = {
        "Deathseeker Eye", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [134612] = {
        "Grasping Tentacles", -- [1]
        "Shrine of the Storm", -- [2]
      },
      [129559] = {
        "Cutwater Duelist", -- [1]
        "Freehold", -- [2]
      },
      [168396] = {
        "Plaguebelcher", -- [1]
        "Plaguefall", -- [2]
      },
      [146831] = {
        "Kul Tiran Stormbringer", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [144850] = {
        "Darkscale Siren", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [130027] = {
        "Ashvane Marine", -- [1]
        "Tol Dagor", -- [2]
      },
      [135239] = {
        "Spectral Witch Doctor", -- [1]
        "Kings' Rest", -- [2]
      },
      [154129] = {
        "Burning Emberguard", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [85750] = {
        "Sharptalon Outcast", -- [1]
        "Ashran", -- [2]
      },
      [169875] = {
        "Shackled Soul", -- [1]
        "Theater of Pain", -- [2]
      },
      [70209] = {
        "Untrained Quilen", -- [1]
        "Throne of Thunder", -- [2]
      },
      [146840] = {
        "Skeleton Guardian", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [155945] = {
        "Gherus the Chained", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [27732] = {
        "Master Necromancer", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [27972] = {
        "Lightning Construct", -- [1]
        "Halls of Stone", -- [2]
      },
      [61928] = {
        "Sik'thik Guardian", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [170385] = {
        "Writhing Misery", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [24069] = {
        "Dragonflayer Bonecrusher", -- [1]
        "Utgarde Keep", -- [2]
      },
      [168398] = {
        "Slimy Morsel", -- [1]
        "Plaguefall", -- [2]
      },
      [164815] = {
        "Zolramus Siphoner", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [145616] = {
        "King Rastakhan", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [130028] = {
        "Ashvane Priest", -- [1]
        "Tol Dagor", -- [2]
      },
      [163915] = {
        "Hatchling Nest", -- [1]
        "Plaguefall", -- [2]
      },
      [138826] = {
        "Leikneir the Brave", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [24566] = {
        "Nerub'ar Skitterer", -- [1]
        "The Nexus", -- [2]
      },
      [170480] = {
        "Atal'ai Deathwalker", -- [1]
        "De Other Side", -- [2]
      },
      [61567] = {
        "Vizier Jin'bak", -- [1]
        "Siege of Niuzao Temple", -- [2]
      },
      [132056] = {
        "Venture Co. Skyscorcher", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [140294] = {
        "Snowfur Wolf", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [161745] = {
        "Hepthys", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [122972] = {
        "Dazar'ai Augur", -- [1]
        "Atal'Dazar", -- [2]
      },
      [138643] = {
        "Kvaldir Berserker", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [134616] = {
        "Krolusk Pup", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [167615] = {
        "Depraved Darkblade", -- [1]
        "Halls of Atonement", -- [2]
      },
      [131545] = {
        "Lady Waycrest", -- [1]
        "Waycrest Manor", -- [2]
      },
      [129517] = {
        "Reanimated Raptor", -- [1]
        "Atal'Dazar", -- [2]
      },
      [105203] = {
        "Felguard Invader", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [161746] = {
        "Ossirat", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [126190] = {
        "Zian-Ti Brutalizer", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [162664] = {
        "Aqir Swarmer", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [85752] = {
        "Outcast Harbinger", -- [1]
        "Ashran", -- [2]
      },
      [155824] = {
        "Lumbering Creation", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [176521] = {
        "Stygian Abductor", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [146832] = {
        "Necromancer Disciple", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [140760] = {
        "Earthliving Giant", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [61242] = {
        "Glintrok Ironhide", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [126918] = {
        "Irontide Crackshot", -- [1]
        "Freehold", -- [2]
      },
      [164345] = {
        "Scavenging Soul Eater", -- [1]
        "Ardenweald Covenant Chapter 2 Scenario", -- [2]
      },
      [10981] = {
        "Frost Wolf", -- [1]
        "Alterac Valley", -- [2]
      },
      [167119] = {
        "Beckoned Wraith", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [30276] = {
        "Ahn'kahar Web Winder", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [140902] = {
        "Vog'rish, the Ascended", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [126848] = {
        "Captain Eudora", -- [1]
        "Freehold", -- [2]
      },
      [69905] = {
        "Gurubashi Berserker", -- [1]
        "Throne of Thunder", -- [2]
      },
      [61056] = {
        "Primal Earth Elemental", -- [1]
        "Crucible of Storms", -- [2]
      },
      [159764] = {
        "Jesh'ra", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [85753] = {
        "Kaliri Skyterror", -- [1]
        "Ashran", -- [2]
      },
      [28731] = {
        "Watcher Silthik", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [26693] = {
        "Skadi the Ruthless", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [72662] = {
        "Vanity", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [144767] = {
        "Gonk's Aspect", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [70238] = {
        "Unblinking Eye", -- [1]
        "Throne of Thunder", -- [2]
      },
      [167999] = {
        "Echo of Sin", -- [1]
        "Castle Nathria", -- [2]
      },
      [162693] = {
        "Nalthor the Rimebinder", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [7795] = {
        "Hydromancer Velratha", -- [1]
        "Zul'Farrak", -- [2]
      },
      [167892] = {
        "Tormented Soul", -- [1]
        "Halls of Atonement", -- [2]
      },
      [26683] = {
        "Frenzied Worgen", -- [1]
        "Utgarde Pinnacle", -- [2]
      },
      [148441] = {
        "Gnomish Gyro-Engineer", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [101110] = {
        "Nether Ray", -- [1]
        "Crucible of Storms", -- [2]
      },
      [164407] = {
        "Sludgefist", -- [1]
        "Castle Nathria", -- [2]
      },
      [170452] = {
        "Essence Orb", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [93961] = {
        "Worgen Tracker", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [69374] = {
        "War-God Jalak", -- [1]
        "Throne of Thunder", -- [2]
      },
      [131666] = {
        "Coven Thornshaper", -- [1]
        "Waycrest Manor", -- [2]
      },
      [180690] = {
        "Vazzaren the Seeker", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [148442] = {
        "Gnomish Commando", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [127497] = {
        "Ashvane Warden", -- [1]
        "Tol Dagor", -- [2]
      },
      [145371] = {
        "Uu'nat", -- [1]
        "Crucible of Storms", -- [2]
      },
      [27973] = {
        "Crystalline Shardling", -- [1]
        "Halls of Stone", -- [2]
      },
      [140430] = {
        "Craghoof Bounder", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [150137] = {
        "Faceless Subduer", -- [1]
        "Uldir Scenario", -- [2]
      },
      [416] = {
        "Zilkin", -- [1]
        "Crucible of Storms", -- [2]
      },
      [149144] = {
        "Jaina's Tide Elemental", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [148443] = {
        "Defense-A-Bot", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [180091] = {
        "Ancient Core Hound", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [145372] = {
        "Wild Mooncaller", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [31134] = {
        "Cyanigosa", -- [1]
        "Violet Hold", -- [2]
      },
      [8319] = {
        "Nightmare Whelp", -- [1]
        "Sunken Temple", -- [2]
      },
      [8179] = {
        "Greater Healing Ward", -- [1]
        "Zul'Farrak", -- [2]
      },
      [140356] = {
        "Brightscale Hatchling", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [147932] = {
        "Agitated Azershard", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [26532] = {
        "Chrono-Lord Epoch", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [138887] = {
        "Bloodwake Mystic", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [178133] = {
        "Murkbrine Wavejumper", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [174550] = {
        "Myskia", -- [1]
        "Revendreth Scenario", -- [2]
      },
      [146816] = {
        "Sir Barton Brigham", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [67235] = {
        "Shadowfiend", -- [1]
        "Silvershard Mines", -- [2]
      },
      [178041] = {
        "Mawsworn Shackler", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [147933] = {
        "Geoactive Azershard", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [136160] = {
        "King Dazar", -- [1]
        "Kings' Rest", -- [2]
      },
      [7246] = {
        "Sandfury Shadowhunter", -- [1]
        "Zul'Farrak", -- [2]
      },
      [147827] = {
        "7th Legion Marine", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [156157] = {
        "Coldheart Ascendant", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [61387] = {
        "Quilen Guardian", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [85756] = {
        "Onyx Ravager", -- [1]
        "Ashran", -- [2]
      },
      [102392] = {
        "Resonance Totem", -- [1]
        "Crucible of Storms", -- [2]
      },
      [59522] = {
        "Sudsy Brew Alemental", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [29829] = {
        "Drakkari Earthshaker", -- [1]
        "Gundrak", -- [2]
      },
      [59778] = {
        "Krik'thik Striker", -- [1]
        "Gate of the Setting Sun", -- [2]
      },
      [29305] = {
        "Moorabi", -- [1]
        "Gundrak", -- [2]
      },
      [147614] = {
        "Dark Iron Primalist", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [70179] = {
        "Ritual Guard", -- [1]
        "Throne of Thunder", -- [2]
      },
      [175576] = {
        "Containment Cell", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [167898] = {
        "Manifestation of Envy", -- [1]
        "Halls of Atonement", -- [2]
      },
      [30277] = {
        "Ahn'kahar Slasher", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [175579] = {
        "Fae Guardian", -- [1]
        "Eye of the Storm", -- [2]
      },
      [140769] = {
        "Goldenvein", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [5648] = {
        "Sandfury Shadowcaster", -- [1]
        "Zul'Farrak", -- [2]
      },
      [135975] = {
        "Off-Duty Laborer", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [102706] = {
        "Grinning Shadowstalker", -- [1]
        "Broken Shore Scenario", -- [2]
      },
      [30661] = {
        "Azure Invader", -- [1]
        "Violet Hold", -- [2]
      },
      [61442] = {
        "Kuai the Brute", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [147936] = {
        "Azergem Shardback", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [159303] = {
        "Monstrous Behemoth", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [13323] = {
        "Subterranean Diemetradon", -- [1]
        "Maraudon", -- [2]
      },
      [141282] = {
        "Kul Tiran Footman", -- [1]
        "Siege of Boralus", -- [2]
      },
      [103673] = {
        "Darkglare", -- [1]
        "Twin Peaks", -- [2]
      },
      [146401] = {
        "Darkscale Dig-Slave", -- [1]
        "Warfronts Darkshore - Horde", -- [2]
      },
      [27871] = {
        "Flesheating Ghoul", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [9258] = {
        "Scarshield Raider", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [26632] = {
        "The Prophet Tharon'ja", -- [1]
        "Drak'Tharon Keep", -- [2]
      },
      [177114] = {
        "Sylvanas Windrunner", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [139486] = {
        "Skycrack", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [141283] = {
        "Kul Tiran Halberd", -- [1]
        "Siege of Boralus", -- [2]
      },
      [133605] = {
        "Escaped Convict", -- [1]
        "Tol Dagor", -- [2]
      },
      [10385] = {
        "Ghostly Citizen", -- [1]
        "Stratholme", -- [2]
      },
      [134629] = {
        "Scaled Krolusk Rider", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [154127] = {
        "Fire Spirit", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [147938] = {
        "Azergem Crystalback", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [155251] = {
        "Elder Longbranch", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [148962] = {
        "Ravenous Stalker", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [141284] = {
        "Kul Tiran Wavetender", -- [1]
        "Siege of Boralus", -- [2]
      },
      [132755] = {
        "Breakbeak Scavenger", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [56764] = {
        "Consuming Sha", -- [1]
        "Shado-Pan Monastery", -- [2]
      },
      [138467] = {
        "Obsidian Dragonkin", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [24071] = {
        "Dragonflayer Heartsplitter", -- [1]
        "Utgarde Keep", -- [2]
      },
      [60561] = {
        "Earthgrab Totem", -- [1]
        "Rated Eye of the Storm", -- [2]
      },
      [29214] = {
        "Anub'ar Assassin", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [131812] = {
        "Heartsbane Soulcharmer", -- [1]
        "Waycrest Manor", -- [2]
      },
      [32517] = {
        "Spirit Beast", -- [1]
        "Crucible of Storms", -- [2]
      },
      [145261] = {
        "Opulence", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [27729] = {
        "Enraging Ghoul", -- [1]
        "The Culling of Stratholme", -- [2]
      },
      [69518] = {
        "Zeb'tula Spearanger", -- [1]
        "Mogu Island Progression Events", -- [2]
      },
      [16459] = {
        "Wanton Hostess", -- [1]
        "Karazhan", -- [2]
      },
      [176605] = {
        "Zandors", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [177117] = {
        "Orb of Torment", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [135764] = {
        "Explosive Totem", -- [1]
        "Kings' Rest", -- [2]
      },
      [178141] = {
        "Murkbrine Scalebinder", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [166971] = {
        "Castellan Niklaus", -- [1]
        "Castle Nathria", -- [2]
      },
      [29062] = {
        "Anub'ar Champion", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [156213] = {
        "Coldheart Guardian", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [135353] = {
        "Veteran Man O' War", -- [1]
        "Freehold", -- [2]
      },
      [27960] = {
        "Dark Rune Warrior", -- [1]
        "Halls of Stone", -- [2]
      },
      [155239] = {
        "Forest Father", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [156242] = {
        "Animated Prowler", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [178142] = {
        "Murkbrine Fishmancer", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [131670] = {
        "Heartsbane Vinetwister", -- [1]
        "Waycrest Manor", -- [2]
      },
      [10383] = {
        "Broken Cadaver", -- [1]
        "Stratholme", -- [2]
      },
      [5280] = {
        "Nightmare Wyrmkin", -- [1]
        "Sunken Temple", -- [2]
      },
      [122968] = {
        "Yazma", -- [1]
        "Atal'Dazar", -- [2]
      },
      [174126] = {
        "Baron Duskhollow", -- [1]
        "Castle Nathria", -- [2]
      },
      [29830] = {
        "Living Mojo", -- [1]
        "Gundrak", -- [2]
      },
      [9261] = {
        "Firebrand Darkweaver", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [166914] = {
        "Fallen Keeper", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [129548] = {
        "Blacktooth Brute", -- [1]
        "Freehold", -- [2]
      },
      [9098] = {
        "Scarshield Spellbinder", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [168967] = {
        "Gerwyn", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [119052] = {
        "War Banner", -- [1]
        "Silvershard Mines", -- [2]
      },
      [168418] = {
        "Forsworn Inquisitor", -- [1]
        "Spires of Ascension", -- [2]
      },
      [129526] = {
        "Bilge Rat Swabby", -- [1]
        "Freehold", -- [2]
      },
      [5135] = {
        "Svalbrad Farmountain", -- [1]
        "Alterac Valley", -- [2]
      },
      [177285] = {
        "Mawsworn Gatekeeper", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [156244] = {
        "Winged Automaton", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [163366] = {
        "Magus of the Dead", -- [1]
        "The Battle for Gilneas", -- [2]
      },
      [417] = {
        "Khaadhon", -- [1]
        "Twin Peaks", -- [2]
      },
      [61444] = {
        "Ming the Cunning", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [156134] = {
        "Ghastly Charger", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [127479] = {
        "The Sand Queen", -- [1]
        "Tol Dagor", -- [2]
      },
      [163690] = {
        "Shath'Yar Scribe", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [12050] = {
        "Stormpike Defender", -- [1]
        "Alterac Valley", -- [2]
      },
      [6112] = {
        "Windfury Totem", -- [1]
        "Theater of Pain", -- [2]
      },
      [146409] = {
        "Lady Jaina Proudmoore", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [9241] = {
        "Smolderthorn Headhunter", -- [1]
        "Lower Blackrock Spire", -- [2]
      },
      [129015] = {
        "Southsea Third Mate", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [168420] = {
        "Forsworn Champion", -- [1]
        "Spires of Ascension", -- [2]
      },
      [129527] = {
        "Bilge Rat Buccaneer", -- [1]
        "Freehold", -- [2]
      },
      [85767] = {
        "Cursed Harbinger", -- [1]
        "Ashran", -- [2]
      },
      [61340] = {
        "Glintrok Hexxer", -- [1]
        "Mogu'shan Palace", -- [2]
      },
      [145898] = {
        "Anointed Disciple", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [173053] = {
        "Afterimage of Lord Stavros", -- [1]
        "Castle Nathria", -- [2]
      },
      [69382] = {
        "Malignant Ooze", -- [1]
        "Throne of Thunder", -- [2]
      },
      [130622] = {
        "Squallshaper Auran", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [178862] = {
        "Screamspike", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [127480] = {
        "Stinging Parasite", -- [1]
        "Tol Dagor", -- [2]
      },
      [175860] = {
        "Ravenous Shade", -- [1]
        "Temple of Kotmogu", -- [2]
      },
      [176956] = {
        "Shadowsteel Goliath", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [27975] = {
        "Maiden of Grief", -- [1]
        "Halls of Stone", -- [2]
      },
      [59551] = {
        "Bopper", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [148483] = {
        "Ancestral Avenger", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [129016] = {
        "Southsea Musketeer", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [28231] = {
        "Crystalline Tender", -- [1]
        "The Nexus", -- [2]
      },
      [84483] = {
        "Gronnling Breaker", -- [1]
        "Ashran", -- [2]
      },
      [144876] = {
        "Apetagonizer 3000", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [175611] = {
        "The Tarragrue", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [179434] = {
        "Mawsworn Doubtcaller", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [179281] = {
        "Coagulated Blood", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [69383] = {
        "Quivering Blob", -- [1]
        "Throne of Thunder", -- [2]
      },
      [126969] = {
        "Trothak", -- [1]
        "Freehold", -- [2]
      },
      [147948] = {
        "Coagulated Azerite", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [156650] = {
        "Dark Manifestation", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [180379] = {
        "Mawsworn Arbalest", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [178731] = {
        "Bonesteel", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [178661] = {
        "Mawsworn Interceptor", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [29063] = {
        "Anub'ar Crypt Fiend", -- [1]
        "Azjol-Nerub", -- [2]
      },
      [134940] = {
        "Bristlethorn Piercer", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [180486] = {
        "Dirtwhistle", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [152594] = {
        "Broker Ve'ken", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [129529] = {
        "Blacktooth Scrapper", -- [1]
        "Freehold", -- [2]
      },
      [136688] = {
        "Fanatical Driller", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [179894] = {
        "Deathseeker Eye", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [25416] = {
        "Simmer", -- [1]
        "Halls of Stone", -- [2]
      },
      [175677] = {
        "Smuggled Creature", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [141565] = {
        "Kul Tiran Footman", -- [1]
        "Siege of Boralus", -- [2]
      },
      [174773] = {
        "Spiteful Shade", -- [1]
        "De Other Side", -- [2]
      },
      [110846] = {
        "Cove Raven", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [127482] = {
        "Sewer Vicejaw", -- [1]
        "Tol Dagor", -- [2]
      },
      [56731] = {
        "Habanero Brew", -- [1]
        "Stormstout Brewery", -- [2]
      },
      [138818] = {
        "Bloodwake Warbringer", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [137713] = {
        "Big Money Crab", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [176949] = {
        "Mawsworn Embermage", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [177164] = {
        "Mawsworn Pillager", -- [1]
        "9.1 Battle of Ardenweald", -- [2]
      },
      [147439] = {
        "Molten Hound", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [30279] = {
        "Deep Crawler", -- [1]
        "Ahn'kahet: The Old Kingdom", -- [2]
      },
      [177807] = {
        "Customs Security", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [129786] = {
        "Brineshell Makrura", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [130435] = {
        "Addled Thug", -- [1]
        "The MOTHERLODE!!", -- [2]
      },
      [130298] = {
        "Water Elemental", -- [1]
        "Verdant Wilds (Islands 8)", -- [2]
      },
      [168992] = {
        "Risen Cultist", -- [1]
        "De Other Side", -- [2]
      },
      [179840] = {
        "Market Peacekeeper", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [147440] = {
        "Blazing Fireguard", -- [1]
        "Battle of Dazar'alor", -- [2]
      },
      [156142] = {
        "Seeker of Souls", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [70153] = {
        "Fungal Growth", -- [1]
        "Throne of Thunder", -- [2]
      },
      [9319] = {
        "Houndmaster Grebmar", -- [1]
        "Blackrock Depths", -- [2]
      },
      [168683] = {
        "Gorak Zhar", -- [1]
        "9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
      },
      [176705] = {
        "Venza Goldfuse", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [179177] = {
        "Mawsworn Overlord", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [152644] = {
        "Deadsoul Drifter", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [177237] = {
        "Chains of Damnation", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [175726] = {
        "Skyja", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [176880] = {
        "Soulscream Tormentor", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [165357] = {
        "Pestilence Slime", -- [1]
        "Plaguefall", -- [2]
      },
      [137204] = {
        "Hoodoo Hexer", -- [1]
        "Temple of Sethraliss", -- [2]
      },
      [130299] = {
        "Droplet", -- [1]
        "Havenswood (Islands 2)", -- [2]
      },
      [131099] = {
        "Giggling Nettlevine", -- [1]
        "Whispering Reef (Islands 10)", -- [2]
      },
      [171500] = {
        "Shuffling Corpse", -- [1]
        "The Necrotic Wake", -- [2]
      },
      [177269] = {
        "So'leah", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [180387] = {
        "Mawsworn Paindrinker", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [127484] = {
        "Jes Howlis", -- [1]
        "Tol Dagor", -- [2]
      },
      [151333] = {
        "Sentinel Shard", -- [1]
        "Torghast, Tower of the Damned", -- [2]
      },
      [180840] = {
        "Frostbound Devoted", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [180864] = {
        "High Torturer", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [142324] = {
        "Bluefin Dolphin", -- [1]
        "Jorundall (Islands 7)", -- [2]
      },
      [167406] = {
        "Sire Denathrius", -- [1]
        "Castle Nathria", -- [2]
      },
      [178734] = {
        "Mawsworn Husk", -- [1]
        "Sanctum of Domination", -- [2]
      },
      [179821] = {
        "Commander Zo'far", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
      [168942] = {
        "Death Speaker", -- [1]
        "De Other Side", -- [2]
      },
      [92933] = {
        "7th Legion Dragoon", -- [1]
        "The Maw of Nashal", -- [2]
      },
      [157366] = {
        "Void Hunter", -- [1]
        "Ny'alotha, the Waking City", -- [2]
      },
      [126205] = {
        "Profit-O-Matic", -- [1]
        "The Dread Chain (Islands 4)", -- [2]
      },
      [73226] = {
        "Lesser Sha Puddle", -- [1]
        "Siege of Orgrimmar", -- [2]
      },
      [176396] = {
        "Defective Sorter", -- [1]
        "Tazavesh, the Veiled Market", -- [2]
      },
    },
    ["aura_grow_direction"] = 1,
    ["health_selection_overlay_alpha"] = 0,
    ["aura_stack_shadow_color"] = {
      nil, -- [1]
      nil, -- [2]
      nil, -- [3]
      0, -- [4]
    },
    ["minor_height_scale"] = 0.949999988079071,
    ["aura_width2"] = 20,
    ["aura_stack_size"] = 9,
    ["extra_icon_anchor"] = {
      ["x"] = -10,
    },
    ["range_check_alpha"] = 1,
    ["aura_frame2_anchor"] = {
      ["y"] = 12,
      ["side"] = 1,
    },
    ["aura_alpha"] = 1,
    ["auto_toggle_friendly"] = {
      ["cities"] = false,
      ["world"] = false,
    },
    ["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
    ["debuff_show_cc_border"] = {
      0, -- [1]
      0, -- [2]
      0, -- [3]
    },
    ["aura_consolidate"] = true,
    ["health_statusbar_texture"] = "REEEE",
    ["hook_auto_imported"] = {
      ["Blockade Encounter"] = 1,
      ["Targetting Alpha"] = 3,
      ["Dont Have Aura"] = 1,
      ["Players Targetting Amount"] = 4,
      ["Color Automation"] = 1,
      ["Bwonsamdi Reaping"] = 1,
      ["Attacking Specific Unit"] = 2,
      ["Jaina Encounter"] = 6,
      ["Execute Range"] = 1,
      ["Cast Bar Icon Config"] = 2,
      ["Combo Points"] = 6,
      ["Hide Neutral Units"] = 1,
      ["Extra Border"] = 2,
      ["Target Color"] = 3,
      ["Aura Reorder"] = 3,
      ["Reorder Nameplate"] = 4,
    },
    ["minor_width_scale"] = 0.8999999761581421,
    ["castbar_target_text_size"] = 8,
    ["aura_frame1_anchor"] = {
      ["y"] = 12,
      ["side"] = 7,
    },
    ["aura_timer_text_font"] = "Gilroy Bold",
    ["aura_height"] = 15,
    ["cast_statusbar_bgtexture"] = "REEEE",
    ["aura2_x_offset"] = 0,
    ["target_indicator"] = "NONE",
    ["saved_cvars"] = {
      ["ShowClassColorInNameplate"] = "1",
      ["nameplateOverlapV"] = "1.5199999809265",
      ["ShowNamePlateLoseAggroFlash"] = "1",
      ["nameplateShowEnemyMinus"] = "1",
      ["NamePlateClassificationScale"] = "1",
      ["nameplateShowFriendlyTotems"] = "0",
      ["nameplatePersonalHideDelaySeconds"] = "0.2",
      ["nameplateShowFriendlyPets"] = "0",
      ["nameplatePersonalShowInCombat"] = "1",
      ["nameplatePersonalShowWithTarget"] = "0",
      ["nameplateResourceOnTarget"] = "0",
      ["nameplateNotSelectedAlpha"] = "1",
      ["nameplateShowAll"] = "1",
      ["nameplateMaxDistance"] = "50",
      ["nameplateShowFriendlyMinions"] = "0",
      ["nameplateSelfScale"] = "1",
      ["nameplateShowEnemies"] = "1",
      ["NamePlateVerticalScale"] = "1",
      ["nameplateSelectedAlpha"] = "1",
      ["nameplateShowSelf"] = "0",
      ["showQuestTrackingTooltips"] = "1",
      ["nameplatePersonalShowAlways"] = "0",
      ["nameplateMotionSpeed"] = "0.05",
      ["nameplateGlobalScale"] = "1",
      ["nameplateShowEnemyMinions"] = "1",
      ["nameplateShowFriendlyNPCs"] = "0",
      ["nameplateSelectedScale"] = "1.15",
      ["nameplateShowFriends"] = "1",
      ["nameplateMotion"] = "1",
      ["nameplateMinScale"] = "1",
      ["nameplateOtherTopInset"] = "0.08",
      ["nameplateSelfBottomInset"] = "0.2",
      ["nameplateShowFriendlyGuardians"] = "0",
      ["NamePlateHorizontalScale"] = "1",
      ["nameplateShowOnlyNames"] = "1",
      ["nameplateSelfAlpha"] = "1",
      ["nameplateOccludedAlphaMult"] = "1",
      ["nameplateSelfTopInset"] = "0.5",
    },
    ["login_counter"] = 4214,
    ["extra_icon_caster_name"] = false,
    ["aura_cooldown_show_swipe"] = false,
    ["aura_stack_font"] = "Gilroy Bold",
    ["hide_friendly_castbars"] = true,
    ["OptionsPanelDB"] = {
      ["PlaterOptionsPanelFrame"] = {
        ["scale"] = 1,
      },
    },
    ["aura_timer_text_shadow_color"] = {
      nil, -- [1]
      nil, -- [2]
      nil, -- [3]
      0, -- [4]
    },
    ["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator6",
    ["hover_highlight_alpha"] = 0.2999999821186066,
    ["plate_config"] = {
      ["global_health_height"] = 13,
      ["friendlyplayer"] = {
        ["big_actorname_text_size"] = 10,
        ["spellpercent_text_font"] = "Gilroy Bold",
        ["level_text_size"] = 8,
        ["cast"] = {
          115, -- [1]
          9, -- [2]
        },
        ["big_actortitle_text_size"] = 10,
        ["fixed_class_color"] = {
          1, -- [1]
          0.4, -- [2]
          0.1, -- [3]
        },
        ["spellpercent_text_anchor"] = {
          ["y"] = -10,
          ["x"] = -1,
        },
        ["percent_text_show_decimals"] = false,
        ["spellname_text_outline"] = "OUTLINE",
        ["big_actorname_text_shadow_color"] = {
          0, -- [1]
          0, -- [2]
          0, -- [3]
          0, -- [4]
        },
        ["level_text_font"] = "Gilroy Bold",
        ["percent_text_color"] = {
          0.901960784313726, -- [1]
          0.901960784313726, -- [2]
          0.901960784313726, -- [3]
        },
        ["actorname_text_font"] = "Gilroy Bold",
        ["big_actorname_text_shadow_color_offset"] = {
          1, -- [1]
          -1, -- [2]
        },
        ["mana_incombat"] = {
          nil, -- [1]
          4, -- [2]
        },
        ["actorname_use_guild_color"] = false,
        ["all_names"] = true,
        ["big_actortitle_text_color"] = {
          1, -- [1]
          0.8, -- [2]
          0, -- [3]
        },
        ["big_actortitle_text_outline"] = "OUTLINE",
        ["actorname_text_spacing"] = 7,
        ["only_damaged"] = false,
        ["quest_color_enemy"] = {
          1, -- [1]
          0.369, -- [2]
          0, -- [3]
        },
        ["only_thename"] = true,
        ["big_actortitle_text_font"] = "Gilroy Bold",
        ["spellpercent_text_size"] = 8,
        ["level_text_outline"] = "OUTLINE",
        ["level_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["big_actorname_text_color"] = {
          0.5, -- [1]
          1, -- [2]
          0.5, -- [3]
        },
        ["level_text_anchor"] = {
          ["y"] = 2,
          ["x"] = 2,
        },
        ["quest_enabled"] = false,
        ["big_actortitle_text_shadow_color_offset"] = {
          1, -- [1]
          -1, -- [2]
        },
        ["cast_incombat"] = {
          115, -- [1]
          9, -- [2]
        },
        ["actorname_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["spellname_text_anchor"] = {
          ["y"] = -10,
          ["x"] = 2,
          ["side"] = 10,
        },
        ["big_actortitle_text_shadow_color"] = {
          0, -- [1]
          0, -- [2]
          0, -- [3]
          1, -- [4]
        },
        ["percent_text_anchor"] = {
          ["side"] = 11,
        },
        ["spellname_text_font"] = "Gilroy Bold",
        ["big_actorname_text_outline"] = "OUTLINE",
        ["quest_color_neutral"] = {
          1, -- [1]
          0.65, -- [2]
          0, -- [3]
        },
        ["mana"] = {
          nil, -- [1]
          4, -- [2]
        },
        ["big_actorname_text_font"] = "Gilroy Bold",
        ["level_text_alpha"] = 1,
        ["use_playerclass_color"] = true,
        ["actorname_text_anchor"] = {
          ["side"] = 10,
        },
        ["actorname_use_friends_color"] = false,
        ["percent_text_font"] = "Gilroy Bold",
        ["buff_frame_y_offset"] = 0,
        ["percent_show_percent"] = false,
        ["percent_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["actorname_text_color"] = {
          0.4352941176470588, -- [1]
          0.4313725490196079, -- [2]
        },
        ["spellname_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["spellname_text_size"] = 8,
        ["health"] = {
          50, -- [1]
          13, -- [2]
        },
        ["health_incombat"] = {
          115, -- [1]
          13, -- [2]
        },
        ["spellpercent_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["actorname_text_size"] = 8,
        ["castbar_offset"] = -1,
      },
      ["friendlynpc"] = {
        ["spellpercent_text_font"] = "Gilroy Bold",
        ["level_text_font"] = "Gilroy Bold",
        ["actorname_text_font"] = "Gilroy Bold",
        ["actorname_text_spacing"] = 9,
        ["big_actortitle_text_font"] = "Gilroy Bold",
        ["spellname_text_font"] = "Gilroy Bold",
        ["percent_text_font"] = "Gilroy Bold",
        ["big_actorname_text_font"] = "Gilroy Bold",
      },
      ["global_health_width"] = 115,
      ["enemyplayer"] = {
        ["castbar_offset"] = -1,
        ["spellpercent_text_font"] = "Gilroy Bold",
        ["level_text_size"] = 8,
        ["cast"] = {
          115, -- [1]
          9, -- [2]
        },
        ["big_actortitle_text_size"] = 10,
        ["spellpercent_text_anchor"] = {
          ["y"] = -10,
          ["x"] = -1,
        },
        ["spellname_text_outline"] = "OUTLINE",
        ["big_actorname_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["level_text_font"] = "Gilroy Bold",
        ["actorname_text_font"] = "Gilroy Bold",
        ["all_names"] = true,
        ["actorname_text_outline"] = "OUTLINE",
        ["actorname_text_spacing"] = 8,
        ["quest_color_enemy"] = {
          1, -- [1]
          0.369, -- [2]
          0, -- [3]
        },
        ["big_actortitle_text_font"] = "Gilroy Bold",
        ["spellpercent_text_size"] = 8,
        ["level_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["level_text_anchor"] = {
          ["y"] = 2,
          ["x"] = 2,
        },
        ["cast_incombat"] = {
          115, -- [1]
          9, -- [2]
        },
        ["health_incombat"] = {
          115, -- [1]
          13, -- [2]
        },
        ["actorname_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["spellname_text_anchor"] = {
          ["y"] = -10,
          ["x"] = 2,
          ["side"] = 10,
        },
        ["percent_text_anchor"] = {
          ["side"] = 11,
        },
        ["spellname_text_font"] = "Gilroy Bold",
        ["percent_text_show_decimals"] = false,
        ["quest_color_neutral"] = {
          1, -- [1]
          0.65, -- [2]
          0, -- [3]
        },
        ["actorname_text_size"] = 9,
        ["big_actorname_text_font"] = "Gilroy Bold",
        ["level_text_outline"] = "OUTLINE",
        ["percent_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["big_actorname_text_size"] = 10,
        ["percent_show_health"] = false,
        ["percent_text_font"] = "Gilroy Bold",
        ["quest_enabled"] = false,
        ["percent_text_color"] = {
          0.901960784313726, -- [1]
          0.901960784313726, -- [2]
          0.901960784313726, -- [3]
        },
        ["spellname_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["spellname_text_size"] = 8,
        ["health"] = {
          115, -- [1]
          13, -- [2]
        },
        ["actorname_text_anchor"] = {
          ["y"] = 13,
          ["side"] = 10,
        },
        ["level_text_alpha"] = 1,
        ["percent_show_percent"] = false,
        ["spellpercent_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
      },
      ["enemynpc"] = {
        ["spellpercent_text_font"] = "Gilroy Bold",
        ["cast"] = {
          115, -- [1]
          9, -- [2]
        },
        ["spellpercent_text_anchor"] = {
          ["y"] = -10,
          ["x"] = -1,
        },
        ["percent_text_show_decimals"] = false,
        ["big_actorname_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["level_text_font"] = "Gilroy Bold",
        ["actorname_text_font"] = "Gilroy Bold",
        ["actorname_text_outline"] = "OUTLINE",
        ["actorname_text_spacing"] = 8,
        ["big_actortitle_text_font"] = "Gilroy Bold",
        ["spellpercent_text_size"] = 8,
        ["level_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["level_text_anchor"] = {
          ["y"] = 2,
          ["x"] = 2,
        },
        ["cast_incombat"] = {
          115, -- [1]
          9, -- [2]
        },
        ["actorname_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["spellname_text_font"] = "Gilroy Bold",
        ["spellname_text_anchor"] = {
          ["y"] = -10,
          ["x"] = 2,
          ["side"] = 10,
        },
        ["percent_text_anchor"] = {
          ["side"] = 11,
        },
        ["spellpercent_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["actorname_text_size"] = 9,
        ["big_actorname_text_font"] = "Gilroy Bold",
        ["castbar_offset"] = -1,
        ["level_text_outline"] = "OUTLINE",
        ["percent_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["actorname_text_anchor"] = {
          ["y"] = 13,
          ["side"] = 10,
        },
        ["percent_text_font"] = "Gilroy Bold",
        ["percent_show_percent"] = false,
        ["percent_text_color"] = {
          1, -- [1]
          1, -- [2]
          1, -- [3]
        },
        ["spellname_text_shadow_color"] = {
          nil, -- [1]
          nil, -- [2]
          nil, -- [3]
          0, -- [4]
        },
        ["health_incombat"] = {
          115, -- [1]
          13, -- [2]
        },
        ["health"] = {
          115, -- [1]
          13, -- [2]
        },
        ["level_text_alpha"] = 1,
        ["spellname_text_size"] = 8,
      },
    },
    ["aura_y_offset"] = 12,
    ["focus_texture"] = "REEEE",
    ["cast_statusbar_bgcolor"] = {
      nil, -- [1]
      nil, -- [2]
      nil, -- [3]
      1, -- [4]
    },
    ["cast_statusbar_use_fade_effects"] = false,
    ["border_thickness"] = 0.4999999701976776,
    ["npc_colors"] = {
      [165872] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [167116] = {
        true, -- [1]
        false, -- [2]
        "DRUID", -- [3]
      },
      [165905] = {
        true, -- [1]
        false, -- [2]
        "DRUID", -- [3]
      },
      [162049] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [167532] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [168393] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [171772] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [167533] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [170147] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [173016] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [171805] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [167534] = {
        true, -- [1]
        false, -- [2]
        "DEMONHUNTER", -- [3]
      },
      [169861] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [169893] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [170690] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [168969] = {
        true, -- [1]
        false, -- [2]
        "PALADIN", -- [3]
      },
      [164921] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [173655] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [170882] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [168396] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [167536] = {
        true, -- [1]
        false, -- [2]
        "DRUID", -- [3]
      },
      [168843] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [173720] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [169927] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [165911] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [163457] = {
        true, -- [1]
        false, -- [2]
        "DEMONHUNTER", -- [3]
      },
      [165529] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [168717] = {
        true, -- [1]
        false, -- [2]
        "MAGE", -- [3]
      },
      [164414] = {
        true, -- [1]
        false, -- [2]
        "MAGE", -- [3]
      },
      [167538] = {
        true, -- [1]
        false, -- [2]
        "DRUID", -- [3]
      },
      [168845] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [164861] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [168718] = {
        true, -- [1]
        false, -- [2]
        "PALADIN", -- [3]
      },
      [163459] = {
        true, -- [1]
        false, -- [2]
        "PALADIN", -- [3]
      },
      [168591] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [168878] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [160495] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [168942] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [163619] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [164926] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [171333] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [163524] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [172991] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [167955] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [165597] = {
        true, -- [1]
        false, -- [2]
        "DRUID", -- [3]
      },
      [163621] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [164705] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [164737] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [168594] = {
        true, -- [1]
        false, -- [2]
        "DEMONHUNTER", -- [3]
      },
      [164929] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [168627] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [166396] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [164707] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [166301] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [162763] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [165919] = {
        true, -- [1]
        false, -- [2]
        "DEMONHUNTER", -- [3]
      },
      [168246] = {
        true, -- [1]
        false, -- [2]
        "HUNTER", -- [3]
      },
      [168310] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [166302] = {
        true, -- [1]
        false, -- [2]
        "MAGE", -- [3]
      },
      [165824] = {
        true, -- [1]
        false, -- [2]
        "PALADIN", -- [3]
      },
      [169905] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [168949] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [166304] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [171181] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [168153] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [170480] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [167962] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [167994] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [171341] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [168058] = {
        true, -- [1]
        false, -- [2]
        "MAGE", -- [3]
      },
      [169875] = {
        true, -- [1]
        false, -- [2]
        "MAGE", -- [3]
      },
      [167612] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [163086] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [167963] = {
        true, -- [1]
        false, -- [2]
        "PALADIN", -- [3]
      },
      [165222] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [163501] = {
        true, -- [1]
        false, -- [2]
        "DRUID", -- [3]
      },
      [162051] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [165414] = {
        true, -- [1]
        false, -- [2]
        "MAGE", -- [3]
      },
      [170850] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [171343] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [166275] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [165111] = {
        true, -- [1]
        false, -- [2]
        "PALADIN", -- [3]
      },
      [171184] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [170483] = {
        true, -- [1]
        false, -- [2]
        "PALADIN", -- [3]
      },
      [164873] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [167965] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [168844] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [174197] = {
        true, -- [1]
        false, -- [2]
        "PALADIN", -- [3]
      },
      [171376] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [163503] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [167615] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [167607] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [163089] = {
        true, -- [1]
        false, -- [2]
        "DRUID", -- [3]
      },
      [168986] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [167998] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [164920] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [168572] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [162038] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [168891] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [163058] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [163894] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [162729] = {
        true, -- [1]
        false, -- [2]
        "DRUID", -- [3]
      },
      [171448] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [164563] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [168318] = {
        true, -- [1]
        false, -- [2]
        "MAGE", -- [3]
      },
      [174210] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [164557] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [162039] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [170486] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [169753] = {
        true, -- [1]
        false, -- [2]
        "PALADIN", -- [3]
      },
      [163458] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [164510] = {
        true, -- [1]
        false, -- [2]
        "HUNTER", -- [3]
      },
      [168574] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [163506] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [171188] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [162040] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [163857] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [166299] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [167611] = {
        true, -- [1]
        false, -- [2]
        "DRUID", -- [3]
      },
      [170838] = {
        true, -- [1]
        false, -- [2]
        "DRUID", -- [3]
      },
      [165515] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [162057] = {
        true, -- [1]
        false, -- [2]
        "DEMONHUNTER", -- [3]
      },
      [165076] = {
        true, -- [1]
        false, -- [2]
        "MAGE", -- [3]
      },
      [172981] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [170488] = {
        true, -- [1]
        false, -- [2]
        "DRUID", -- [3]
      },
      [167610] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [165197] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [167964] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [164552] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [168886] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [168992] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [165357] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [163126] = {
        true, -- [1]
        false, -- [2]
        "MAGE", -- [3]
      },
      [163891] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [167493] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [163121] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [168934] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [162744] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [167111] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [168418] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [170490] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [163892] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [163882] = {
        true, -- [1]
        false, -- [2]
        "MAGE", -- [3]
      },
      [164862] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [168578] = {
        true, -- [1]
        false, -- [2]
        "PALADIN", -- [3]
      },
      [163520] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [164562] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [168681] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [162047] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [163128] = {
        true, -- [1]
        false, -- [2]
        "MAGE", -- [3]
      },
      [173360] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [168022] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [171384] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [164506] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [167113] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [168420] = {
        true, -- [1]
        false, -- [2]
        "PALADIN", -- [3]
      },
      [165137] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [171799] = {
        true, -- [1]
        false, -- [2]
        "MAGE", -- [3]
      },
      [170572] = {
        true, -- [1]
        false, -- [2]
        "SHAMAN", -- [3]
      },
      [163618] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [165010] = {
        true, -- [1]
        false, -- [2]
        "PRIEST", -- [3]
      },
      [166276] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [163620] = {
        true, -- [1]
        false, -- [2]
        "MONK", -- [3]
      },
      [162046] = {
        true, -- [1]
        false, -- [2]
        "PALADIN", -- [3]
      },
      [165138] = {
        true, -- [1]
        false, -- [2]
        "WARLOCK", -- [3]
      },
      [173840] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
      [168907] = {
        true, -- [1]
        false, -- [2]
        "WARRIOR", -- [3]
      },
    },
    ["hook_data"] = {
      {
        ["Enabled"] = false,
        ["Revision"] = 55,
        ["HooksTemp"] = {
        },
        ["Author"] = "Kastfall-Azralon",
        ["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
        ["Hooks"] = {
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
        },
        ["Time"] = 1558096987,
        ["PlaterCore"] = 1,
        ["Name"] = "Color Automation [Plater]",
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["race"] = {
          },
          ["pvptalent"] = {
          },
          ["spec"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["role"] = {
          },
        },
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
        ["LastHookEdited"] = "Constructor",
      }, -- [1]
      {
        ["Enabled"] = false,
        ["Revision"] = 45,
        ["HooksTemp"] = {
        },
        ["Author"] = "Izimode-Azralon",
        ["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
        ["Hooks"] = {
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
        },
        ["Time"] = 1549937733,
        ["PlaterCore"] = 1,
        ["Name"] = "Don't Have Aura [Plater]",
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["race"] = {
          },
          ["pvptalent"] = {
          },
          ["role"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["Icon"] = 136207,
        ["LastHookEdited"] = "",
      }, -- [2]
      {
        ["Enabled"] = false,
        ["Revision"] = 180,
        ["HooksTemp"] = {
        },
        ["Author"] = "Tecno-Azralon",
        ["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
        ["Hooks"] = {
          ["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
          ["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
          ["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
        },
        ["Time"] = 1558091544,
        ["PlaterCore"] = 1,
        ["Name"] = "Extra Border [Plater]",
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["race"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["Icon"] = 133689,
        ["LastHookEdited"] = "Constructor",
      }, -- [3]
      {
        ["Enabled"] = false,
        ["Revision"] = 73,
        ["HooksTemp"] = {
        },
        ["Author"] = "Izimode-Azralon",
        ["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
        ["Hooks"] = {
          ["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
          ["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
          ["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
          ["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
        },
        ["Time"] = 1541606242,
        ["PlaterCore"] = 1,
        ["Name"] = "Hide Neutral Units [Plater]",
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["spec"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["race"] = {
          },
        },
        ["Icon"] = 1990989,
        ["LastHookEdited"] = "",
      }, -- [4]
      {
        ["Enabled"] = false,
        ["Revision"] = 87,
        ["HooksTemp"] = {
        },
        ["Author"] = "Ahwa-Azralon",
        ["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
        ["Hooks"] = {
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
        },
        ["Time"] = 1558091741,
        ["PlaterCore"] = 1,
        ["Name"] = "Execute Range [Plater]",
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["race"] = {
          },
          ["pvptalent"] = {
          },
          ["role"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["Icon"] = 135358,
        ["LastHookEdited"] = "Constructor",
      }, -- [5]
      {
        ["OptionsValues"] = {
          ["color"] = {
            0.5019607843137255, -- [1]
            0.5019607843137255, -- [2]
            0, -- [3]
            1, -- [4]
          },
        },
        ["LastHookEdited"] = "Nameplate Updated",
        ["Hooks"] = {
          ["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
        },
        ["Time"] = 1626626966,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["spec"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["affix"] = {
          },
        },
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
        ["Enabled"] = true,
        ["Revision"] = 366,
        ["semver"] = "",
        ["Author"] = "Kastfall-Azralon",
        ["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
        ["Prio"] = 99,
        ["Name"] = "Attacking Specific Unit [Plater]",
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 1,
            ["Key"] = "color",
            ["Value"] = {
              0.5019607843137255, -- [1]
              0.5019607843137255, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 4,
            ["Key"] = "changeBarColor",
            ["Value"] = true,
            ["Name"] = "Change Bar Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 4,
            ["Key"] = "changeBorderColor",
            ["Value"] = false,
            ["Name"] = "Change Border Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Key"] = "resetColors",
            ["Value"] = true,
            ["Name"] = "Reset Colors",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [4]
        },
        ["HooksTemp"] = {
        },
        ["version"] = -1,
      }, -- [6]
      {
        ["OptionsValues"] = {
        },
        ["HooksTemp"] = {
        },
        ["Hooks"] = {
          ["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
        },
        ["Time"] = 1596791840,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["race"] = {
          },
          ["pvptalent"] = {
          },
          ["spec"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["role"] = {
          },
        },
        ["url"] = "",
        ["Icon"] = 574574,
        ["Enabled"] = false,
        ["Revision"] = 93,
        ["semver"] = "",
        ["Author"] = "Kastfall-Azralon",
        ["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
        ["Name"] = "Reorder Nameplate [Plater]",
        ["PlaterCore"] = 1,
        ["Options"] = {
        },
        ["LastHookEdited"] = "",
        ["version"] = -1,
      }, -- [7]
      {
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "",
        ["Hooks"] = {
          ["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
          ["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
          ["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
          ["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
          ["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
          ["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
        },
        ["Time"] = 1621935143,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
            ["Enabled"] = true,
            ["DRUID"] = true,
            ["ROGUE"] = true,
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["spec"] = {
            ["103"] = true,
            ["Enabled"] = true,
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["affix"] = {
          },
        },
        ["url"] = "",
        ["Icon"] = 135426,
        ["Enabled"] = false,
        ["Revision"] = 284,
        ["semver"] = "",
        ["Author"] = "Izimode-Azralon",
        ["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
        ["Name"] = "Combo Points [Plater]",
        ["PlaterCore"] = 1,
        ["version"] = -1,
        ["HooksTemp"] = {
        },
        ["Options"] = {
        },
      }, -- [8]
      {
        ["Enabled"] = false,
        ["Revision"] = 182,
        ["HooksTemp"] = {
        },
        ["Author"] = "Izimode-Azralon",
        ["Desc"] = "Show how many raid members are targeting the unit",
        ["Hooks"] = {
          ["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
          ["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
          ["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
          ["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
        },
        ["Time"] = 1548278227,
        ["PlaterCore"] = 1,
        ["Name"] = "Players Targeting a Target [Plater]",
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["race"] = {
          },
          ["pvptalent"] = {
          },
          ["spec"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["role"] = {
          },
        },
        ["Icon"] = 1966587,
        ["LastHookEdited"] = "",
      }, -- [9]
      {
        ["Enabled"] = false,
        ["Revision"] = 101,
        ["HooksTemp"] = {
        },
        ["Author"] = "Izimode-Azralon",
        ["Desc"] = "Changes the target color to the color set in the constructor script.",
        ["Hooks"] = {
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
          ["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)--rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
        },
        ["Time"] = 1558097070,
        ["PlaterCore"] = 1,
        ["Name"] = "Current Target Color [Plater]",
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["race"] = {
          },
          ["pvptalent"] = {
          },
          ["role"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["Icon"] = 878211,
        ["LastHookEdited"] = "Constructor",
      }, -- [10]
      {
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "",
        ["Hooks"] = {
          ["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        },
        ["Time"] = 1608663128,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["spec"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["affix"] = {
          },
        },
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
        ["Enabled"] = false,
        ["Revision"] = 356,
        ["semver"] = "",
        ["Author"] = "Ditador-Azralon",
        ["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
        ["Name"] = "Aura Reorder [Plater]",
        ["PlaterCore"] = 1,
        ["version"] = -1,
        ["HooksTemp"] = {
        },
        ["Options"] = {
        },
      }, -- [11]
      {
        ["Enabled"] = true,
        ["Revision"] = 161,
        ["HooksTemp"] = {
        },
        ["Author"] = "Izimode-Azralon",
        ["Desc"] = "Adds a pixels perfect border around the cast bar.",
        ["Hooks"] = {
          ["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
          ["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
          ["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = .5\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        --castBar:SetPoint(unitFrame.healthBar, \"TOP\", 0, -10)\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \n    --create thee border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end\n    \nend\n\n\n\n\n\n\n",
        },
        ["Time"] = 1558382516,
        ["PlaterCore"] = 1,
        ["LastHookEdited"] = "Constructor",
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["race"] = {
          },
          ["pvptalent"] = {
          },
          ["spec"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["role"] = {
          },
        },
        ["Icon"] = 133004,
        ["Name"] = "Cast Bar Border",
      }, -- [12]
      {
        ["Enabled"] = false,
        ["Revision"] = 107,
        ["Options"] = {
        },
        ["HooksTemp"] = {
        },
        ["Author"] = "Aldarana-Kazzak",
        ["Desc"] = "",
        ["Hooks"] = {
          ["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.BuffFrame:SetPoint(\"CENTER\",buffNoComat,0);\n    unitFrame.BuffFrame2:SetPoint(\"CENTER\",buff2NoComat,0);\nend\n\n\n",
          ["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.BuffFrame:SetPoint(\"CENTER\",buffNoComat,0);\n    unitFrame.BuffFrame2:SetPoint(\"CENTER\",buff2NoComat,0);\nend",
          ["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.BuffFrame:SetPoint(\"CENTER\",buffComat,0);\n    unitFrame.BuffFrame2:SetPoint(\"CENTER\",buff2Comat,0);\nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --X offsets for aura frames\n    buffNoCombat = 0;\n    buffCombat = 0;\n    \n    buff2NoCombat = 0;\n    buff2Combat = 0;\nend",
        },
        ["Prio"] = 99,
        ["Name"] = "Aura Positioning",
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["spec"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["race"] = {
          },
        },
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "",
        ["Time"] = 1626626973,
        ["PlaterCore"] = 1,
      }, -- [13]
      {
        ["Enabled"] = true,
        ["Revision"] = 93,
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "",
        ["Author"] = "?????-Illidan",
        ["Options"] = {
        },
        ["Desc"] = "Format Buff Special icons like the regular aura icons.",
        ["Hooks"] = {
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --    if false then return end\n    \n    for _, iconFrame in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        \n        unitFrame.ExtraIconFrame.options.show_text = true\n        \n        local profile = Plater.db.profile\n        \n        Plater.SetAnchor (iconFrame.CountdownText, profile.aura_timer_text_anchor)\n        Plater:SetFontSize (iconFrame.CountdownText, 11)\n        Plater:SetFontFace (iconFrame.CountdownText, profile.aura_timer_text_font)\n        \n        Plater.SetFontOutlineAndShadow (iconFrame.CountdownText, profile.aura_timer_text_outline, profile.aura_timer_text_shadow_color, profile.aura_timer_text_shadow_color_offset[1], profile.aura_timer_text_shadow_color_offset[2])\n        \n        iconFrame.Cooldown:SetEdgeTexture (profile.aura_cooldown_edge_texture)\n        iconFrame.Cooldown:SetReverse (profile.aura_cooldown_reverse)\n        iconFrame.Cooldown:SetDrawSwipe (profile.aura_cooldown_show_swipe)        \n        \n    end\n    \nend",
        },
        ["Prio"] = 99,
        ["Name"] = "Buff Special Mod",
        ["PlaterCore"] = 1,
        ["HooksTemp"] = {
        },
        ["Time"] = 1626626970,
        ["Icon"] = 136139,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["race"] = {
          },
          ["pvptalent"] = {
          },
          ["role"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
      }, -- [14]
      {
        ["Enabled"] = true,
        ["Revision"] = 154,
        ["HooksTemp"] = {
        },
        ["Author"] = "Ditador-Azralon",
        ["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
        ["Hooks"] = {
          ["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
          ["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"right\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 1\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset-.5)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, -1)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
        },
        ["Time"] = 1558382341,
        ["PlaterCore"] = 1,
        ["LastHookEdited"] = "Constructor",
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["race"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["spec"] = {
          },
        },
        ["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
        ["Name"] = "Cast Icon Anchor",
      }, -- [15]
      {
        ["Enabled"] = true,
        ["Revision"] = 31,
        ["Options"] = {
        },
        ["HooksTemp"] = {
        },
        ["Author"] = "Aldarana-Kazzak",
        ["Desc"] = "Because for some reason there's no setting for this.",
        ["Hooks"] = {
          ["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    levelTextColor(unitFrame)\nend",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.levelColor = {255,245,105} --rgb\n    \n    function levelTextColor(unitFrame)\n        local r,g,b = unpack(envTable.levelColor)\n        unitFrame.healthBar.actorLevel:SetTextColor(r/255, g/255, b/255)\n    end\nend",
        },
        ["Prio"] = 99,
        ["Name"] = "Level Text Color",
        ["PlaterCore"] = 1,
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "",
        ["Time"] = 1626626975,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["spec"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["race"] = {
          },
        },
      }, -- [16]
      {
        ["LastHookEdited"] = "",
        ["Hooks"] = {
          ["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
          ["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
        },
        ["Time"] = 1597097268,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["race"] = {
          },
          ["pvptalent"] = {
          },
          ["spec"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["role"] = {
          },
        },
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
        ["Enabled"] = false,
        ["Revision"] = 348,
        ["semver"] = "",
        ["Author"] = "Ditador-Azralon",
        ["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
        ["Name"] = "Cast Bar Icon Settings [P]",
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 5,
            ["Key"] = "option4",
            ["Value"] = "Icon Settings:",
            ["Name"] = "Icon Settings",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 4,
            ["Key"] = "showIcon",
            ["Value"] = true,
            ["Name"] = "Show Icon",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Show the castbar icon when enabled",
          }, -- [2]
          {
            ["Type"] = 4,
            ["Key"] = "iconOnLeftSide",
            ["Value"] = true,
            ["Name"] = "Icon on Left Side",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Name"] = "Use Big Icon",
            ["Value"] = false,
            ["Key"] = "useFullSize",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
          }, -- [4]
          {
            ["Type"] = 2,
            ["Max"] = 5,
            ["Desc"] = "Fine tune the icon size",
            ["Min"] = 0,
            ["Name"] = "Icon Size Offset",
            ["Value"] = 0,
            ["Key"] = "iconSizeOffset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [5]
          {
            ["Type"] = 2,
            ["Max"] = 5,
            ["Desc"] = "Space between the icon and the cast bar",
            ["Min"] = -5,
            ["Key"] = "iconPadding",
            ["Value"] = 0,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Icon Padding",
          }, -- [6]
          {
            ["Type"] = 6,
            ["Key"] = "option6",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 5,
            ["Key"] = "option5",
            ["Value"] = "Can't Interrupt Texture:",
            ["Name"] = "Interrupt Texture",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 4,
            ["Key"] = "showTexture",
            ["Value"] = true,
            ["Name"] = "Show Texture",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
          }, -- [9]
          {
            ["Type"] = 3,
            ["Key"] = "iconTexturePath",
            ["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
            ["Name"] = "Texture Path",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
            ["Desc"] = "Insert the path for the texture",
          }, -- [10]
          {
            ["Type"] = 4,
            ["Key"] = "desaturatedTexture",
            ["Value"] = true,
            ["Name"] = "Texture Desaturated",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "If enbaled, texture is shown in black & white",
          }, -- [11]
          {
            ["Type"] = 1,
            ["Key"] = "textureColor",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              0.3056715726852417, -- [4]
            },
            ["Name"] = "Texture Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Select the color of the texture",
          }, -- [12]
          {
            ["Type"] = 2,
            ["Max"] = 32,
            ["Desc"] = "Adjust the texture width",
            ["Min"] = 1,
            ["Name"] = "Texture Width",
            ["Value"] = 10,
            ["Key"] = "textureWidth",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [13]
          {
            ["Type"] = 2,
            ["Max"] = 16,
            ["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
            ["Min"] = -16,
            ["Key"] = "textureHeightMod",
            ["Value"] = 0,
            ["Fraction"] = true,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Texture Height Mod",
          }, -- [14]
          {
            ["Type"] = 2,
            ["Max"] = 32,
            ["Desc"] = "Adjust the texture position",
            ["Min"] = -32,
            ["Name"] = "Texture Position",
            ["Value"] = 0,
            ["Key"] = "texturePosition",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [15]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Adjust the texture transparency",
            ["Min"] = 0,
            ["Fraction"] = true,
            ["Value"] = 1,
            ["Name"] = "Texture Alpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "textureAlpha",
          }, -- [16]
        },
        ["HooksTemp"] = {
        },
        ["version"] = -1,
      }, -- [17]
      {
        ["OptionsValues"] = {
          ["raidMarkColors"] = false,
          ["targetEnabled"] = false,
          ["s4Enabled"] = false,
        },
        ["LastHookEdited"] = "Nameplate Updated",
        ["Hooks"] = {
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
          ["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"] -- use threat colors if you are tank without aggro or dps with aggro\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    \n    -- you can replace any color text line with 'nil' to skip this mark from being colored, e.g.:    nil, --star \n    modTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"lightblue\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"ghostwhite\", --skull\n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        --[\"elite\"] = \"darkgoldenrod\",\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    modTable.NpcColors = {\n        \n        --[126682] = modTable.config[\"t1Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t2Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t3Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = \"#ff8200\", --\"Saltfin Swimmer\"\n        --[126682] = \"hotpink\", --\"Saltfin Swimmer\"\n        --[126682] = \"deeppink\", --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Saltfin Swimmer\"\n        \n        --Affix NPCs:\n        --[161124] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Urg'roth, Breaker of Heroes\"\n        \n        -- t3 mobs - light red\n        [164506] = modTable.config[\"t3Mobs\"],\n        [162691] = modTable.config[\"t3Mobs\"],\n        [163524] = modTable.config[\"t3Mobs\"],\n        [165824] = modTable.config[\"t3Mobs\"],\n        [169893] = modTable.config[\"t3Mobs\"],\n        [169927] = modTable.config[\"t3Mobs\"],\n        [168446] = modTable.config[\"t3Mobs\"],\n        [165197] = modTable.config[\"t3Mobs\"],\n        [173447] = modTable.config[\"t3Mobs\"],\n        [163619] = modTable.config[\"t3Mobs\"],\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        -- explosives\n        --[120651] = \"#ff8200\", --\"Fel Explosive\"\n        [120651] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Fel Explosive\"\n        \n        -- important - dark blue\n        [170490] = modTable.config[\"t1Mobs\"],\n        [170572] = modTable.config[\"t1Mobs\"],\n        [174197] = modTable.config[\"t1Mobs\"],\n        [174210] = modTable.config[\"t1Mobs\"],\n        [170882] = modTable.config[\"t1Mobs\"],\n        [163126] = modTable.config[\"t1Mobs\"],\n        [173016] = modTable.config[\"t1Mobs\"],\n        [166302] = modTable.config[\"t1Mobs\"],\n        [165529] = modTable.config[\"t1Mobs\"],\n        [165414] = modTable.config[\"t1Mobs\"],\n        [164921] = modTable.config[\"t1Mobs\"],\n        [163458] = modTable.config[\"t1Mobs\"],\n        [168420] = modTable.config[\"t1Mobs\"],\n        [168418] = modTable.config[\"t1Mobs\"],\n        [163459] = modTable.config[\"t1Mobs\"],\n        [168718] = modTable.config[\"t1Mobs\"],\n        [165076] = modTable.config[\"t1Mobs\"],\n        [167965] = modTable.config[\"t1Mobs\"],\n        [160495] = modTable.config[\"t1Mobs\"],\n        [166275] = modTable.config[\"t1Mobs\"],\n        [166299] = modTable.config[\"t1Mobs\"],\n        [166396] = modTable.config[\"t1Mobs\"],\n        [168627] = modTable.config[\"t1Mobs\"],\n        [164414] = modTable.config[\"t1Mobs\"],\n        [172265] = modTable.config[\"t1Mobs\"],\n        [168992] = modTable.config[\"t1Mobs\"],\n        [163891] = modTable.config[\"t1Mobs\"],\n        [173044] = modTable.config[\"t1Mobs\"],\n        [167612] = modTable.config[\"t1Mobs\"],\n        [167493] = modTable.config[\"t1Mobs\"],\n        [162049] = modTable.config[\"t1Mobs\"],\n        [162039] = modTable.config[\"t1Mobs\"],\n        [165222] = modTable.config[\"t1Mobs\"],\n        [163128] = modTable.config[\"t1Mobs\"],\n        [168357] = modTable.config[\"t1Mobs\"],\n        \n        \n        \n        \n        \n        \n        -- semi important - light blue\n        [166589] = modTable.config[\"t2Mobs\"],\n        [171343] = modTable.config[\"t2Mobs\"],\n        [163894] = modTable.config[\"t2Mobs\"],\n        [168942] = modTable.config[\"t2Mobs\"],\n        [163882] = modTable.config[\"t2Mobs\"],\n        [163862] = modTable.config[\"t2Mobs\"],\n        [164562] = modTable.config[\"t2Mobs\"],\n        [171799] = modTable.config[\"t2Mobs\"],\n        [170690] = modTable.config[\"t2Mobs\"],\n        [164266] = modTable.config[\"t2Mobs\"],\n        [164185] = modTable.config[\"t2Mobs\"],\n        [162103] = modTable.config[\"t2Mobs\"],\n        [165872] = modTable.config[\"t2Mobs\"],\n        [168658] = modTable.config[\"t2Mobs\"],\n        [168318] = modTable.config[\"t2Mobs\"],\n        [168717] = modTable.config[\"t2Mobs\"],\n        [163520] = modTable.config[\"t2Mobs\"],\n        [168572] = modTable.config[\"t2Mobs\"],\n        [162317] = modTable.config[\"t2Mobs\"],\n        [163621] = modTable.config[\"t2Mobs\"],\n        [162040] = modTable.config[\"t2Mobs\"],\n        [167536] = modTable.config[\"t2Mobs\"],\n        [171376] = modTable.config[\"t2Mobs\"],\n        [169861] = modTable.config[\"t2Mobs\"],\n        [167876] = modTable.config[\"t2Mobs\"],\n        [162047] = modTable.config[\"t2Mobs\"],\n        [172981] = modTable.config[\"t2Mobs\"],\n        [174175] = modTable.config[\"t2Mobs\"],\n        [165430] = modTable.config[\"t2Mobs\"],\n        [166276] = modTable.config[\"t2Mobs\"],\n        [165946] = modTable.config[\"t2Mobs\"],\n        [162744] = modTable.config[\"t2Mobs\"],\n        [168393] = modTable.config[\"t2Mobs\"],\n        [168396] = modTable.config[\"t2Mobs\"],\n        [167998] = modTable.config[\"t2Mobs\"],\n        [170850] = modTable.config[\"t2Mobs\"],\n        [163086] = modTable.config[\"t2Mobs\"],\n        [162038] = modTable.config[\"t2Mobs\"],\n        [169905] = modTable.config[\"t2Mobs\"],\n        [163620] = modTable.config[\"t2Mobs\"],\n        [164510] = modTable.config[\"t2Mobs\"],\n        [164557] = modTable.config[\"t2Mobs\"],\n        [165919] = modTable.config[\"t2Mobs\"],\n        [167111] = modTable.config[\"t2Mobs\"],\n        [163121] = modTable.config[\"t2Mobs\"],\n        [167607] = modTable.config[\"t2Mobs\"],\n        [162689] = modTable.config[\"t2Mobs\"],\n        [164292] = modTable.config[\"t2Mobs\"],\n        [168886] = modTable.config[\"t2Mobs\"],\n        [165137] = modTable.config[\"t2Mobs\"],\n        [163618] = modTable.config[\"t2Mobs\"],\n        [168443] = modTable.config[\"t2Mobs\"],\n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame then return end\n        \n        if modTable.useThreatColors then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    --Plater.UpdatePlateText (unitFrame.PlateFrame, Plater.db.profile.plate_config[unitFrame.ActorType], false)\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (plateFrame.unitFrame [MEMBER_UNITID])\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend",
          ["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n\n\n\n\n",
        },
        ["Time"] = 1608751800,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["role"] = {
          },
          ["pvptalent"] = {
          },
          ["spec"] = {
          },
          ["race"] = {
          },
          ["encounter_ids"] = {
          },
          ["affix"] = {
          },
        },
        ["url"] = "https://wago.io/UKpo0_GbE/25",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
        ["Enabled"] = false,
        ["Revision"] = 710,
        ["semver"] = "1.2.2",
        ["Author"] = "Viash-Thrall",
        ["Desc"] = "Color the nameplates of important m+ mobs",
        ["Prio"] = 99,
        ["Name"] = "M+ Colored Mobs",
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 5,
            ["Key"] = "option1",
            ["Value"] = "NPC Colors:",
            ["Name"] = "Option 1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 1,
            ["Key"] = "t1Mobs",
            ["Value"] = {
              0, -- [1]
              0.086274509803922, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Most Important:",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Most important mobs, usually focus targets (regular interrupts / stuns needed, etc.)",
          }, -- [2]
          {
            ["Type"] = 1,
            ["Key"] = "t2Mobs",
            ["Value"] = {
              0, -- [1]
              0.81960784313725, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Semi Important",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Semi important mobs, interrupts / stuns necessary, keep an eye out!",
          }, -- [3]
          {
            ["Type"] = 1,
            ["Key"] = "t3Mobs",
            ["Value"] = {
              1, -- [1]
              0.59607843137255, -- [2]
              0.51372549019608, -- [3]
              1, -- [4]
            },
            ["Name"] = "Less Important:",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
          }, -- [4]
          {
            ["Type"] = 6,
            ["Key"] = "option6",
            ["Value"] = 0,
            ["Name"] = "Option 6",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 4,
            ["Key"] = "explosivesEnabled",
            ["Value"] = true,
            ["Name"] = "Color Explosives",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 1,
            ["Key"] = "explosivesColor",
            ["Value"] = {
              1, -- [1]
              0.4, -- [2]
              0.70196078431373, -- [3]
              1, -- [4]
            },
            ["Name"] = "Explosives Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 6,
            ["Key"] = "option9",
            ["Value"] = 0,
            ["Name"] = "Option 9",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 4,
            ["Key"] = "s4Enabled",
            ["Value"] = true,
            ["Name"] = "Color M+ Affix NPCs",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "\"M+ Affix NPCs\"",
          }, -- [9]
          {
            ["Type"] = 1,
            ["Key"] = "s4Color",
            ["Value"] = {
              1, -- [1]
              0.070588235294118, -- [2]
              0.56862745098039, -- [3]
              1, -- [4]
            },
            ["Name"] = "M+ Affix NPCs Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "\"M+ Affix NPCs\"",
          }, -- [10]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "Option 18",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [11]
          {
            ["Type"] = 4,
            ["Key"] = "targetEnabled",
            ["Value"] = true,
            ["Name"] = "Use Target Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [12]
          {
            ["Type"] = 1,
            ["Key"] = "targetColor",
            ["Value"] = {
              0.27058823529412, -- [1]
              0.50980392156863, -- [2]
              0.70196078431373, -- [3]
              1, -- [4]
            },
            ["Name"] = "Target Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [13]
          {
            ["Type"] = 4,
            ["Key"] = "ignoreTargetOnPlayers",
            ["Value"] = false,
            ["Name"] = "Ignore Target Color on Players",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [14]
          {
            ["Type"] = 6,
            ["Key"] = "option21",
            ["Value"] = 0,
            ["Name"] = "Option 21",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [15]
          {
            ["Type"] = 4,
            ["Key"] = "focusEnabled",
            ["Value"] = true,
            ["Name"] = "Use Focus Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [16]
          {
            ["Type"] = 1,
            ["Key"] = "focusColor",
            ["Value"] = {
              1, -- [1]
              0.49019607843137, -- [2]
              0.30980392156863, -- [3]
              1, -- [4]
            },
            ["Name"] = "Focus Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [17]
          {
            ["Type"] = 5,
            ["Key"] = "option26",
            ["Value"] = "Additional Options:",
            ["Name"] = "Additional Options:",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [18]
          {
            ["Type"] = 4,
            ["Key"] = "colorHealthbar",
            ["Value"] = true,
            ["Name"] = "Color Healthbar",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [19]
          {
            ["Type"] = 4,
            ["Key"] = "colorName",
            ["Value"] = false,
            ["Name"] = "Color Name",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [20]
          {
            ["Type"] = 4,
            ["Key"] = "raidMarkColors",
            ["Value"] = true,
            ["Name"] = "Raid Mark Colors",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [21]
          {
            ["Type"] = 4,
            ["Key"] = "threatColors",
            ["Value"] = false,
            ["Name"] = "Use Threat Colors",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
          }, -- [22]
          {
            ["Type"] = 4,
            ["Key"] = "rareEnabled",
            ["Value"] = true,
            ["Name"] = "Color Rares",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [23]
        },
        ["HooksTemp"] = {
        },
        ["version"] = 25,
      }, -- [18]
      {
        ["OptionsValues"] = {
        },
        ["LastHookEdited"] = "",
        ["Hooks"] = {
          ["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
          ["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
          ["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n",
        },
        ["Time"] = 1626626977,
        ["LoadConditions"] = {
          ["talent"] = {
          },
          ["group"] = {
          },
          ["class"] = {
          },
          ["map_ids"] = {
          },
          ["race"] = {
          },
          ["pvptalent"] = {
          },
          ["spec"] = {
          },
          ["affix"] = {
          },
          ["encounter_ids"] = {
          },
          ["role"] = {
          },
        },
        ["url"] = "https://wago.io/id_wRWfKp/2",
        ["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
        ["Enabled"] = true,
        ["Revision"] = 31,
        ["semver"] = "1.0.1",
        ["Author"] = "Kastfall-Azralon",
        ["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
        ["Prio"] = 99,
        ["Name"] = "Force Threat Color",
        ["PlaterCore"] = 1,
        ["Options"] = {
        },
        ["HooksTemp"] = {
        },
        ["version"] = 2,
      }, -- [19]
    },
    ["disable_omnicc_on_auras"] = true,
    ["aura_width"] = 20,
    ["health_statusbar_bgcolor"] = {
      0.0431372549019608, -- [1]
      0.0431372549019608, -- [2]
      0.0431372549019608, -- [3]
    },
    ["castbar_target_shadow_color"] = {
      nil, -- [1]
      nil, -- [2]
      nil, -- [3]
      0, -- [4]
    },
    ["pet_width_scale"] = 0.949999988079071,
    ["target_highlight_color"] = {
      1, -- [1]
      1, -- [2]
    },
    ["resources"] = {
      ["scale"] = 0.7999999523162842,
    },
    ["extra_icon_auras"] = {
      277242, -- [1]
    },
    ["aura2_grow_direction"] = 3,
    ["pet_height_scale"] = 0.949999988079071,
    ["aura_x_offset"] = 0,
    ["first_run3"] = true,
    ["aura_stack_color"] = {
      [3] = 0.36078431372549,
    },
    ["click_space_friendly"] = {
      8, -- [1]
      1, -- [2]
    },
    ["health_statusbar_bgtexture"] = "REEEE",
    ["indicator_raidmark_anchor"] = {
      ["x"] = 11,
    },
    ["aura_show_enrage"] = true,
    ["aura_tracker"] = {
      ["buff_tracked"] = {
        [209859] = true,
      },
    },
    ["castbar_target_show"] = true,
    ["cast_statusbar_color"] = {
      nil, -- [1]
      0.701960784313726, -- [2]
      nil, -- [3]
      1, -- [4]
    },
    ["update_throttle"] = 0.2499999850988388,
    ["indicator_elite"] = false,
    ["focus_indicator_enabled"] = false,
    ["indicator_extra_raidmark"] = false,
    ["not_affecting_combat_alpha"] = 0,
    ["target_highlight_alpha"] = 1,
    ["patch_version"] = 17,
    ["aura_stack_anchor"] = {
      ["y"] = 0.6000003814697266,
      ["side"] = 13,
    },
    ["indicator_raidmark_scale"] = 0.7999999523162842,
    ["target_shady_alpha"] = 0.5999999642372131,
    ["indicator_quest"] = false,
    ["target_highlight_height"] = 42,
    ["health_animation_time_dilatation"] = 2.619999885559082,
    ["border_color"] = {
      nil, -- [1]
      nil, -- [2]
      nil, -- [3]
      1, -- [4]
    },
    ["cast_statusbar_color_interrupted"] = {
      nil, -- [1]
      0.101960784313725, -- [2]
      0.101960784313725, -- [3]
    },
    ["range_check_in_range_or_target_alpha"] = 0.8700000047683716,
    ["aura_timer_text_size"] = 9,
    ["aura_height2"] = 15,
    ["number_region_first_run"] = true,
    ["script_data_trash"] = {
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
        ["Time"] = 1553105907,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
        ["Icon"] = 135996,
        ["Enabled"] = true,
        ["Revision"] = 157,
        ["Author"] = "Izimode-Azralon",
        ["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
        ["__TrashAt"] = 1605286931,
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Name"] = "Unit - Important [Plater]",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
        ["NpcNames"] = {
          "135029", -- [1]
          "134388", -- [2]
          "134612", -- [3]
          "133361", -- [4]
          "136330", -- [5]
          "130896", -- [6]
          "129758", -- [7]
          "Healing Tide Totem", -- [8]
          "131009", -- [9]
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
      }, -- [1]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
        ["Time"] = 1558091651,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
        ["NpcNames"] = {
        },
        ["Enabled"] = true,
        ["Revision"] = 404,
        ["Author"] = "Tercioo-Sylvanas",
        ["Desc"] = "Add the buff name in the trigger box.",
        ["__TrashAt"] = 1605286931,
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
        ["SpellIds"] = {
          275826, -- [1]
          272888, -- [2]
          272659, -- [3]
          267901, -- [4]
          267830, -- [5]
          265393, -- [6]
        },
        ["PlaterCore"] = 1,
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
        ["Name"] = "Aura - Buff Alert [Plater]",
      }, -- [2]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["Time"] = 1553749840,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
        ["Enabled"] = true,
        ["Revision"] = 391,
        ["Author"] = "Bombad�o-Azralon",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
        ["__TrashAt"] = 1605286931,
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["Name"] = "Cast - Very Important [Plater]",
        ["PlaterCore"] = 1,
        ["SpellIds"] = {
          257785, -- [1]
          267237, -- [2]
          266951, -- [3]
          267273, -- [4]
          267433, -- [5]
          263066, -- [6]
          255577, -- [7]
          255371, -- [8]
        },
        ["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
        ["NpcNames"] = {
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
      }, -- [3]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
        ["Time"] = 1553105911,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
        ["Icon"] = 2175503,
        ["Enabled"] = true,
        ["Revision"] = 328,
        ["Author"] = "Bombad�o-Azralon",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
        ["__TrashAt"] = 1605286931,
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
        ["Name"] = "Explosion Affix M+ [Plater]",
        ["PlaterCore"] = 1,
        ["SpellIds"] = {
          240446, -- [1]
          273577, -- [2]
        },
        ["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
        ["NpcNames"] = {
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
      }, -- [4]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["Time"] = 1558091650,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
        ["NpcNames"] = {
        },
        ["Enabled"] = true,
        ["Revision"] = 236,
        ["Author"] = "Tercioo-Sylvanas",
        ["Desc"] = "Add the debuff name in the trigger box.",
        ["__TrashAt"] = 1605286931,
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
        ["Name"] = "Aura - Debuff Alert [Plater]",
      }, -- [5]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["Time"] = 1553749837,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, true)\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
        ["Enabled"] = true,
        ["Revision"] = 569,
        ["Author"] = "Tercioo-Sylvanas",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
        ["__TrashAt"] = 1605286931,
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["Name"] = "Cast - Big Alert [Plater]",
        ["PlaterCore"] = 1,
        ["SpellIds"] = {
          258153, -- [1]
          258313, -- [2]
          257069, -- [3]
          274569, -- [4]
          278020, -- [5]
          261635, -- [6]
          272700, -- [7]
          280404, -- [8]
          268030, -- [9]
          265368, -- [10]
          263891, -- [11]
          264520, -- [12]
          265407, -- [13]
          278567, -- [14]
          278602, -- [15]
          258128, -- [16]
          257791, -- [17]
          258938, -- [18]
          265089, -- [19]
          272183, -- [20]
          256060, -- [21]
          257397, -- [22]
          257899, -- [23]
          269972, -- [24]
          270901, -- [25]
          270492, -- [26]
          268129, -- [27]
          268709, -- [28]
          263215, -- [29]
          268797, -- [30]
          262540, -- [31]
          262554, -- [32]
          253517, -- [33]
          255041, -- [34]
          252781, -- [35]
          250368, -- [36]
          258777, -- [37]
        },
        ["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
        ["NpcNames"] = {
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    self:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
      }, -- [6]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
        ["Time"] = 1553749839,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
        ["Enabled"] = true,
        ["Revision"] = 379,
        ["Author"] = "Tercioo-Sylvanas",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
        ["__TrashAt"] = 1605286931,
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
        ["Name"] = "Cast - Small Alert [Plater]",
        ["PlaterCore"] = 1,
        ["SpellIds"] = {
          275192, -- [1]
          265912, -- [2]
          274438, -- [3]
          268317, -- [4]
          268375, -- [5]
          276767, -- [6]
          264105, -- [7]
          265876, -- [8]
          270464, -- [9]
          266106, -- [10]
          272180, -- [11]
          278961, -- [12]
          278755, -- [13]
          265468, -- [14]
          256405, -- [15]
          256897, -- [16]
          264101, -- [17]
          280604, -- [18]
          268702, -- [19]
          281621, -- [20]
          262515, -- [21]
          255824, -- [22]
          253583, -- [23]
          250096, -- [24]
        },
        ["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
        ["NpcNames"] = {
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
      }, -- [7]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
        ["Time"] = 1558091653,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
        ["Enabled"] = true,
        ["Revision"] = 164,
        ["Author"] = "Izimode-Azralon",
        ["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
        ["__TrashAt"] = 1605286931,
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Name"] = "Aura - Blink by Time Left [Plater]",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
        ["NpcNames"] = {
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
      }, -- [8]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
        ["ScriptType"] = 2,
        ["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
        ["Time"] = 1553749839,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
        ["Enabled"] = true,
        ["Revision"] = 174,
        ["Author"] = "Izimode-Azralon",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
        ["__TrashAt"] = 1605286931,
        ["Temp_UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
        ["Name"] = "Cast - Frontal Cone [Plater]",
        ["PlaterCore"] = 1,
        ["SpellIds"] = {
          255952, -- [1]
          257426, -- [2]
          274400, -- [3]
          272609, -- [4]
          269843, -- [5]
          269029, -- [6]
          272827, -- [7]
          269266, -- [8]
          263912, -- [9]
          264923, -- [10]
          258864, -- [11]
          256955, -- [12]
          265540, -- [13]
          260793, -- [14]
          270003, -- [15]
          270507, -- [16]
          257337, -- [17]
          268415, -- [18]
          275907, -- [19]
          268865, -- [20]
          260669, -- [21]
          260280, -- [22]
          253239, -- [23]
          265541, -- [24]
          250258, -- [25]
        },
        ["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
        ["NpcNames"] = {
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
      }, -- [9]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
        ["Time"] = 1553105908,
        ["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
        ["Icon"] = 1029718,
        ["Enabled"] = true,
        ["Revision"] = 191,
        ["Author"] = "Celian-Sylvanas",
        ["Desc"] = "Show above the nameplate who is the player fixated",
        ["__TrashAt"] = 1605286932,
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
        ["SpellIds"] = {
          272584, -- [1]
          244653, -- [2]
        },
        ["PlaterCore"] = 1,
        ["Name"] = "Fixate [Plater]",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
        ["NpcNames"] = {
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
      }, -- [10]
      {
        ["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        ["Time"] = 1553105909,
        ["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
        ["Icon"] = 841383,
        ["Enabled"] = true,
        ["Revision"] = 195,
        ["Author"] = "Tecno-Azralon",
        ["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
        ["__TrashAt"] = 1605286932,
        ["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        ["SpellIds"] = {
          "spawn of g'huun", -- [1]
          "smuggled crawg", -- [2]
          "sergeant bainbridge", -- [3]
          "blacktooth scrapper", -- [4]
          "irontide grenadier", -- [5]
          "feral bloodswarmer", -- [6]
          "earthrager", -- [7]
          "crawler mine", -- [8]
          "rezan", -- [9]
        },
        ["PlaterCore"] = 1,
        ["Name"] = "Fixate On You [Plater]",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
        ["NpcNames"] = {
          "smuggled crawg", -- [1]
          "sergeant bainbridge", -- [2]
          "blacktooth scrapper", -- [3]
          "irontide grenadier", -- [4]
          "feral bloodswarmer", -- [5]
          "earthrager", -- [6]
          "crawler mine", -- [7]
          "rezan", -- [8]
          "136461", -- [9]
        },
        ["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
      }, -- [11]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
        ["Time"] = 1604354628,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
        ["Enabled"] = true,
        ["Revision"] = 108,
        ["semver"] = "",
        ["Author"] = "Aelerolor-Torghast",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
        ["Options"] = {
          {
            ["Type"] = 5,
            ["Name"] = "Option 1",
            ["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
            ["Key"] = "option1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 6,
            ["Name"] = "blank line",
            ["Value"] = 0,
            ["Key"] = "",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 1,
            ["Name"] = "Vertical Line Color",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Key"] = "indicatorColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Indicator color.",
          }, -- [3]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Indicator alpha.",
            ["Min"] = 0.1,
            ["Key"] = "indicatorAlpha",
            ["Value"] = 0.79,
            ["Fraction"] = true,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Vertical Line Alpha",
          }, -- [4]
          {
            ["Type"] = 6,
            ["Key"] = "",
            ["Value"] = 0,
            ["Name"] = "blank line",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 1,
            ["Key"] = "fillColor",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Fill Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Fill color.",
          }, -- [6]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "Fill alpha.",
            ["Min"] = 0,
            ["Name"] = "Fill Alpha",
            ["Value"] = 0.2,
            ["Key"] = "fillAlpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [7]
        },
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["version"] = -1,
        ["Name"] = "Unit - Health Markers [P]",
        ["NpcNames"] = {
          "164451", -- [1]
          "164463", -- [2]
          "164461", -- [3]
          "165946", -- [4]
          "164501", -- [5]
          "164218", -- [6]
        },
        ["__TrashAt"] = 1606597125,
      }, -- [12]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n    end\nend\n\n\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n    end\nend\n\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
        ["Time"] = 1608852889,
        ["url"] = "",
        ["Icon"] = 135945,
        ["Enabled"] = true,
        ["Revision"] = 59,
        ["semver"] = "",
        ["Author"] = "Symantec-Azralon",
        ["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
        ["Desc"] = "Time to die Spiteful affix",
        ["NpcNames"] = {
          "174773", -- [1]
        },
        ["Name"] = "M+ Spiteful",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["version"] = -1,
        ["Options"] = {
          {
            ["Type"] = 2,
            ["Max"] = 50,
            ["Desc"] = "",
            ["Min"] = 10,
            ["Name"] = "Width",
            ["Value"] = 27,
            ["Key"] = "bgWidth",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [1]
          {
            ["Type"] = 1,
            ["Key"] = "bgColor",
            ["Value"] = {
              0.5058823529411764, -- [1]
              0.07058823529411765, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Background Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option5",
            ["Value"] = 0,
            ["Name"] = "Option 5",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 2,
            ["Max"] = 24,
            ["Desc"] = "",
            ["Min"] = 7,
            ["Name"] = "Text Size",
            ["Value"] = 8,
            ["Key"] = "textSize",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [4]
          {
            ["Type"] = 1,
            ["Key"] = "textColor",
            ["Value"] = {
              1, -- [1]
              0.5843137254901961, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Text Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [5]
        },
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
        ["__TrashAt"] = 1610291727,
      }, -- [13]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            if target and target ~= \"\" then\n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName (plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            end\n        end\n    end\nend",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n    end\nend\n\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 3,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
        ["Time"] = 1609281290,
        ["url"] = "",
        ["Icon"] = 135945,
        ["Enabled"] = true,
        ["Revision"] = 132,
        ["semver"] = "",
        ["Author"] = "Symantec-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Time to die Spiteful affix",
        ["__TrashAt"] = 1612838831,
        ["NpcNames"] = {
          "174773", -- [1]
        },
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Name"] = "M+ Spiteful",
        ["version"] = -1,
        ["Options"] = {
          {
            ["Type"] = 2,
            ["Max"] = 50,
            ["Desc"] = "",
            ["Min"] = 10,
            ["Fraction"] = false,
            ["Value"] = 27,
            ["Name"] = "Width",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "bgWidth",
          }, -- [1]
          {
            ["Type"] = 1,
            ["Name"] = "Background Color",
            ["Value"] = {
              0.5058823529411764, -- [1]
              0.07058823529411765, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Key"] = "bgColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Name"] = "Option 5",
            ["Value"] = 0,
            ["Key"] = "option5",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 2,
            ["Max"] = 24,
            ["Desc"] = "",
            ["Min"] = 7,
            ["Fraction"] = false,
            ["Value"] = 8,
            ["Name"] = "Text Size",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "textSize",
          }, -- [4]
          {
            ["Type"] = 1,
            ["Name"] = "Text Color",
            ["Value"] = {
              1, -- [1]
              0.5843137254901961, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "textColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Key"] = "option7",
            ["Value"] = 0,
            ["Name"] = "Option 7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 4,
            ["Key"] = "switchTargetName",
            ["Value"] = false,
            ["Name"] = "Show Target instead of Name",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 6,
            ["Key"] = "option8",
            ["Value"] = 0,
            ["Name"] = "Option 8",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 4,
            ["Key"] = "useTargetingColor",
            ["Value"] = false,
            ["Name"] = "Change Color if targeting You",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "",
          }, -- [9]
          {
            ["Type"] = 1,
            ["Key"] = "targetingColor",
            ["Value"] = {
              0.5058823529411764, -- [1]
              0.07058823529411765, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Name"] = "Color if targeting You",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "",
          }, -- [10]
        },
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
      }, -- [14]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
        ["Time"] = 1604354808,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
        ["Enabled"] = true,
        ["Revision"] = 331,
        ["semver"] = "",
        ["Author"] = "Izimode-Azralon",
        ["Initialization"] = "					function (scriptTable)\n						--insert code here\n						\n					end\n				",
        ["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
        ["__TrashAt"] = 1612838831,
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option10",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "Option 17",
            ["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
            ["Key"] = "option17",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option10",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Name"] = "Blink Enabled",
            ["Value"] = true,
            ["Key"] = "blinkEnabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'false' to disable blink",
          }, -- [4]
          {
            ["Type"] = 4,
            ["Name"] = "Glow Enabled",
            ["Value"] = true,
            ["Key"] = "glowEnabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'false' to disable glows",
          }, -- [5]
          {
            ["Type"] = 4,
            ["Name"] = "Change NamePlate Color",
            ["Value"] = true,
            ["Key"] = "changeNameplateColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'true' to enable nameplate color change",
          }, -- [6]
          {
            ["Type"] = 2,
            ["Max"] = 20,
            ["Desc"] = "in seconds, affects the blink effect only",
            ["Min"] = 1,
            ["Key"] = "timeleftToBlink",
            ["Value"] = 3,
            ["Name"] = "Timeleft to Blink",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [7]
          {
            ["Type"] = 2,
            ["Max"] = 3,
            ["Desc"] = "time to complete a blink loop",
            ["Min"] = 0.5,
            ["Key"] = "blinkSpeed",
            ["Value"] = 1,
            ["Name"] = "Blink Speed",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
            ["Min"] = 0.1,
            ["Key"] = "blinkMaxAlpha",
            ["Value"] = 0.6,
            ["Name"] = "Blink Max Alpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [9]
          {
            ["Type"] = 1,
            ["Name"] = "Blink Color",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Key"] = "blinkColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "color of the blink",
          }, -- [10]
          {
            ["Type"] = 1,
            ["Name"] = "Nameplate Color",
            ["Value"] = {
              0.2862745098039216, -- [1]
              0.00392156862745098, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "nameplate color if ChangeNameplateColor is true",
          }, -- [11]
          {
            ["Type"] = 6,
            ["Key"] = "option10",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [12]
          {
            ["Type"] = 4,
            ["Name"] = "Timer Color Enabled",
            ["Value"] = true,
            ["Key"] = "timerColorEnabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'false' to disable changes in the color of the time left text",
          }, -- [13]
          {
            ["Type"] = 2,
            ["Max"] = 20,
            ["Desc"] = "in seconds, affects the color of the text",
            ["Min"] = 1,
            ["Key"] = "timeLeftWarning",
            ["Value"] = 8,
            ["Fraction"] = true,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Time Left Warning",
          }, -- [14]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "in seconds, affects the color of the text",
            ["Min"] = 1,
            ["Key"] = "timeLeftCritical",
            ["Value"] = 3,
            ["Fraction"] = true,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Time Left Critical",
          }, -- [15]
          {
            ["Type"] = 1,
            ["Name"] = "Warning Color",
            ["Value"] = {
              1, -- [1]
              0.8705882352941177, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "warningColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "color when the time left entered in a warning zone",
          }, -- [16]
          {
            ["Type"] = 1,
            ["Name"] = "Critical Color",
            ["Value"] = {
              1, -- [1]
              0.07450980392156863, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "criticalColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "color when the time left is critical",
          }, -- [17]
        },
        ["version"] = -1,
        ["Name"] = "Aura - Blink by Time Left [Plater]",
        ["NpcNames"] = {
        },
      }, -- [15]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
        ["Time"] = 1604674264,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
        ["Enabled"] = true,
        ["Revision"] = 695,
        ["semver"] = "",
        ["Author"] = "Bombad�o-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
        ["__TrashAt"] = 1619597391,
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
        ["SpellIds"] = {
          321247, -- [1]
          334522, -- [2]
          320232, -- [3]
          319962, -- [4]
          325879, -- [5]
          324427, -- [6]
          322999, -- [7]
          325360, -- [8]
          322903, -- [9]
          324103, -- [10]
          333294, -- [11]
          333540, -- [12]
          319521, -- [13]
          326021, -- [14]
          326450, -- [15]
          322711, -- [16]
          329104, -- [17]
          295000, -- [18]
          242391, -- [19]
          320197, -- [20]
          329608, -- [21]
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Option 1",
            ["Value"] = 0,
            ["Key"] = "option1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "Option 2",
            ["Value"] = "Plays a big animation when the cast start.",
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Name"] = "Option 4",
            ["Value"] = 0,
            ["Key"] = "option4",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 5,
            ["Name"] = "Flash",
            ["Value"] = "Flash:",
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [5]
          {
            ["Type"] = 2,
            ["Max"] = 1.2,
            ["Desc"] = "How long is the flash played when the cast starts.",
            ["Min"] = 0.1,
            ["Key"] = "flashDuration",
            ["Value"] = 0.8,
            ["Fraction"] = true,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Flash Duration",
          }, -- [6]
          {
            ["Type"] = 1,
            ["Name"] = "Flash Color",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Key"] = "flashColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the Flash",
          }, -- [7]
          {
            ["Type"] = 6,
            ["Name"] = "Option 7",
            ["Value"] = 0,
            ["Key"] = "option7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [8]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Shake:",
            ["Name"] = "Shake",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 0.5,
            ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
            ["Min"] = 0.1,
            ["Key"] = "shakeDuration",
            ["Value"] = 0.2,
            ["Fraction"] = true,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Duration",
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "How strong is the shake.",
            ["Min"] = 1,
            ["Key"] = "shakeAmplitude",
            ["Value"] = 5,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Amplitude",
          }, -- [11]
          {
            ["Type"] = 2,
            ["Max"] = 80,
            ["Desc"] = "How fast the shake moves.",
            ["Min"] = 1,
            ["Key"] = "shakeFrequency",
            ["Value"] = 40,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Frequency",
          }, -- [12]
          {
            ["Type"] = 6,
            ["Name"] = "Option 13",
            ["Value"] = 0,
            ["Key"] = "option13",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [13]
          {
            ["Type"] = 5,
            ["Name"] = "Dot Animation",
            ["Value"] = "Dot Animation:",
            ["Key"] = "option14",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [14]
          {
            ["Type"] = 1,
            ["Name"] = "Dot Color",
            ["Value"] = {
              0.5647058823529412, -- [1]
              0.5647058823529412, -- [2]
              0.5647058823529412, -- [3]
              1, -- [4]
            },
            ["Key"] = "dotColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Adjust the color of the dots around the nameplate",
          }, -- [15]
          {
            ["Type"] = 2,
            ["Max"] = 20,
            ["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
            ["Min"] = -10,
            ["Key"] = "xOffset",
            ["Value"] = 8,
            ["Name"] = "Dot X Offset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [16]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
            ["Min"] = -10,
            ["Fraction"] = false,
            ["Value"] = 3,
            ["Key"] = "yOffset",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Dot Y Offset",
          }, -- [17]
          {
            ["Type"] = 6,
            ["Name"] = "blank",
            ["Value"] = 0,
            ["Key"] = "option18",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [18]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [19]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [20]
          {
            ["Type"] = 6,
            ["Name"] = "blank",
            ["Value"] = 0,
            ["Key"] = "option18",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [21]
          {
            ["Type"] = 6,
            ["Name"] = "blank",
            ["Value"] = 0,
            ["Key"] = "option18",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [22]
          {
            ["Type"] = 6,
            ["Key"] = "option18",
            ["Value"] = 0,
            ["Name"] = "blank",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [23]
          {
            ["Type"] = 5,
            ["Name"] = "Option 19",
            ["Value"] = "Cast Bar",
            ["Key"] = "option19",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [24]
          {
            ["Type"] = 4,
            ["Name"] = "Use Cast Bar Color",
            ["Value"] = true,
            ["Key"] = "useCastbarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "Use cast bar color.",
          }, -- [25]
          {
            ["Type"] = 1,
            ["Name"] = "Cast Bar Color",
            ["Value"] = {
              0.4117647058823529, -- [1]
              1, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "castBarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Cast bar color.",
          }, -- [26]
        },
        ["version"] = -1,
        ["Name"] = "Cast - Very Important [Plater]",
        ["NpcNames"] = {
        },
      }, -- [16]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
        ["Time"] = 1604696442,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
        ["Enabled"] = true,
        ["Revision"] = 970,
        ["semver"] = "",
        ["Author"] = "Tercioo-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
        ["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
        ["__TrashAt"] = 1619597391,
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
        ["SpellIds"] = {
          338353, -- [1]
          334748, -- [2]
          334749, -- [3]
          320784, -- [4]
          341352, -- [5]
          341520, -- [6]
          341522, -- [7]
          336005, -- [8]
          339777, -- [9]
          331933, -- [10]
          326617, -- [11]
          324914, -- [12]
          324776, -- [13]
          326046, -- [14]
          340634, -- [15]
          319070, -- [16]
          328295, -- [17]
          317936, -- [18]
          327413, -- [19]
          319654, -- [20]
          323821, -- [21]
          320772, -- [22]
          324293, -- [23]
          330562, -- [24]
          330868, -- [25]
          341902, -- [26]
          342139, -- [27]
          342675, -- [28]
          323190, -- [29]
          332836, -- [30]
          327648, -- [31]
          328217, -- [32]
          322938, -- [33]
          340544, -- [34]
          325876, -- [35]
          325700, -- [36]
          323552, -- [37]
          332666, -- [38]
          332612, -- [39]
          332706, -- [40]
          340026, -- [41]
          294171, -- [42]
          292910, -- [43]
          294165, -- [44]
          338871, -- [45]
          330813, -- [46]
          335694, -- [47]
          327461, -- [48]
          329787, -- [49]
          304946, -- [50]
          15245, -- [51]
          276754, -- [52]
          304831, -- [53]
          277036, -- [54]
          320657, -- [55]
          294362, -- [56]
          270248, -- [57]
          292926, -- [58]
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option1",
            ["Value"] = 0,
            ["Name"] = "Blank Line",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Key"] = "option3",
            ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
            ["Name"] = "Option 3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 4,
            ["Key"] = "useCastbarColor",
            ["Value"] = true,
            ["Name"] = "Cast Bar Color Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "When enabled, changes the cast bar color,",
          }, -- [5]
          {
            ["Type"] = 1,
            ["Key"] = "castbarColor",
            ["Value"] = {
              1, -- [1]
              0.4313725490196079, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Cast Bar Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the cast bar.",
          }, -- [6]
          {
            ["Type"] = 6,
            ["Key"] = "option7",
            ["Value"] = 0,
            ["Name"] = "Blank Line",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
            ["Min"] = 0.05,
            ["Name"] = "Flash Duration",
            ["Value"] = 0.4,
            ["Key"] = "flashDuration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Increases the cast bar height by this value",
            ["Min"] = 0,
            ["Name"] = "Cast Bar Height Mod",
            ["Value"] = 5,
            ["Key"] = "castBarHeight",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
            ["Min"] = 0.1,
            ["Name"] = "Shake Duration",
            ["Value"] = 0.2,
            ["Key"] = "shakeDuration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 100,
            ["Desc"] = "How strong is the shake.",
            ["Min"] = 2,
            ["Fraction"] = false,
            ["Value"] = 8,
            ["Key"] = "shakeAmplitude",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Amplitude",
          }, -- [11]
          {
            ["Type"] = 2,
            ["Max"] = 80,
            ["Desc"] = "How fast the shake moves.",
            ["Min"] = 1,
            ["Fraction"] = false,
            ["Value"] = 40,
            ["Key"] = "shakeFrequency",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Frequency",
          }, -- [12]
        },
        ["version"] = -1,
        ["Name"] = "Cast - Big Alert [Plater]",
        ["NpcNames"] = {
        },
      }, -- [17]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
        ["Time"] = 1604593143,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
        ["Enabled"] = true,
        ["Revision"] = 833,
        ["semver"] = "",
        ["Author"] = "Tercioo-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
        ["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
        ["__TrashAt"] = 1619597391,
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
        ["SpellIds"] = {
          321828, -- [1]
        },
        ["PlaterCore"] = 1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Blank Line",
            ["Value"] = 0,
            ["Key"] = "option1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "Option 2",
            ["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 5,
            ["Name"] = "Option 3",
            ["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
            ["Key"] = "option3",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option4",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [4]
          {
            ["Type"] = 4,
            ["Name"] = "Cast Bar Color Enabled",
            ["Value"] = true,
            ["Key"] = "useCastbarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "When enabled, changes the cast bar color,",
          }, -- [5]
          {
            ["Type"] = 1,
            ["Name"] = "Cast Bar Color",
            ["Value"] = {
              1, -- [1]
              0.4313725490196079, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "castbarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the cast bar.",
          }, -- [6]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Line",
            ["Value"] = 0,
            ["Key"] = "option7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [7]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
            ["Min"] = 0.05,
            ["Key"] = "flashDuration",
            ["Value"] = 0.2,
            ["Fraction"] = true,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Flash Duration",
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Increases the cast bar height by this value",
            ["Min"] = 0,
            ["Key"] = "castBarHeight",
            ["Value"] = 0,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Cast Bar Height Mod",
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
            ["Min"] = 0.1,
            ["Key"] = "shakeDuration",
            ["Value"] = 0.1,
            ["Fraction"] = true,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Duration",
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 200,
            ["Desc"] = "How strong is the shake.",
            ["Min"] = 10,
            ["Key"] = "shakeAmplitude",
            ["Value"] = 25,
            ["Name"] = "Shake Amplitude",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [11]
          {
            ["Type"] = 2,
            ["Max"] = 80,
            ["Desc"] = "How fast the shake moves.",
            ["Min"] = 1,
            ["Key"] = "shakeFrequency",
            ["Value"] = 30,
            ["Name"] = "Shake Frequency",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [12]
        },
        ["version"] = -1,
        ["Name"] = "Cast - Tank Interrupt [P]",
        ["NpcNames"] = {
        },
      }, -- [18]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
        ["Time"] = 1625698948,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
        ["Enabled"] = true,
        ["Revision"] = 1138,
        ["semver"] = "",
        ["Author"] = "Tercioo-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
        ["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
        ["__TrashAt"] = 1626006582,
        ["NpcNames"] = {
        },
        ["SpellIds"] = {
          350421, -- [1]
          355571, -- [2]
          355787, -- [3]
        },
        ["PlaterCore"] = 1,
        ["Name"] = "Cast - Alert + Timer [P]",
        ["version"] = -1,
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Blank Line",
            ["Value"] = 0,
            ["Key"] = "option1",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "Option 2",
            ["Value"] = "Cast start animation settings",
            ["Key"] = "option2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option4",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Name"] = "Cast Bar Color Enabled",
            ["Value"] = true,
            ["Key"] = "useCastbarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "When enabled, changes the cast bar color,",
          }, -- [4]
          {
            ["Type"] = 1,
            ["Name"] = "Cast Bar Color",
            ["Value"] = {
              1, -- [1]
              0.4313725490196079, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "castbarColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the cast bar.",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Name"] = "Blank Line",
            ["Value"] = 0,
            ["Key"] = "option7",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
            ["Min"] = 0.05,
            ["Fraction"] = true,
            ["Value"] = 0.4,
            ["Name"] = "Flash Duration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "flashDuration",
          }, -- [7]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Increases the cast bar height by this value",
            ["Min"] = 0,
            ["Fraction"] = false,
            ["Value"] = 5,
            ["Name"] = "Cast Bar Height Mod",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "castBarHeight",
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
            ["Min"] = 0.1,
            ["Fraction"] = true,
            ["Value"] = 0.2,
            ["Name"] = "Shake Duration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "shakeDuration",
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 100,
            ["Desc"] = "How strong is the shake.",
            ["Min"] = 2,
            ["Name"] = "Shake Amplitude",
            ["Value"] = 8,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "shakeAmplitude",
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 80,
            ["Desc"] = "How fast the shake moves.",
            ["Min"] = 1,
            ["Name"] = "Shake Frequency",
            ["Value"] = 40,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Key"] = "shakeFrequency",
          }, -- [11]
          {
            ["Type"] = 7,
            ["Key"] = "timerList",
            ["Value"] = {
              {
                "350421", -- [1]
                "5", -- [2]
              }, -- [1]
              {
                "355787", -- [1]
                "15", -- [2]
              }, -- [2]
              {
                "355571", -- [1]
                "14", -- [2]
              }, -- [3]
            },
            ["Name"] = "Timer (Key is SpellId and Value is Time)",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
            ["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
          }, -- [12]
        },
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
      }, -- [19]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 1,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
        ["Time"] = 1611856720,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
        ["Enabled"] = true,
        ["Revision"] = 369,
        ["semver"] = "",
        ["Author"] = "Izimode-Azralon",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
        ["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Name"] = "Blank Space",
            ["Value"] = 0,
            ["Key"] = "option10",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Name"] = "Option 17",
            ["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
            ["Key"] = "option17",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option10",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Name"] = "Blink Enabled",
            ["Value"] = true,
            ["Key"] = "blinkEnabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'false' to disable blink",
          }, -- [4]
          {
            ["Type"] = 4,
            ["Name"] = "Glow Enabled",
            ["Value"] = true,
            ["Key"] = "glowEnabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'false' to disable glows",
          }, -- [5]
          {
            ["Type"] = 4,
            ["Name"] = "Change NamePlate Color",
            ["Value"] = true,
            ["Key"] = "changeNameplateColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'true' to enable nameplate color change",
          }, -- [6]
          {
            ["Type"] = 2,
            ["Max"] = 20,
            ["Desc"] = "in seconds, affects the blink effect only",
            ["Min"] = 1,
            ["Name"] = "Timeleft to Blink",
            ["Value"] = 3,
            ["Key"] = "timeleftToBlink",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [7]
          {
            ["Type"] = 2,
            ["Max"] = 3,
            ["Desc"] = "time to complete a blink loop",
            ["Min"] = 0.5,
            ["Name"] = "Blink Speed",
            ["Value"] = 1,
            ["Key"] = "blinkSpeed",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
            ["Min"] = 0.1,
            ["Name"] = "Blink Max Alpha",
            ["Value"] = 0.6,
            ["Key"] = "blinkMaxAlpha",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [9]
          {
            ["Type"] = 1,
            ["Name"] = "Blink Color",
            ["Value"] = {
              1, -- [1]
              1, -- [2]
              1, -- [3]
              1, -- [4]
            },
            ["Key"] = "blinkColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "color of the blink",
          }, -- [10]
          {
            ["Type"] = 1,
            ["Name"] = "Nameplate Color",
            ["Value"] = {
              0.2862745098039216, -- [1]
              0.00392156862745098, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "nameplate color if ChangeNameplateColor is true",
          }, -- [11]
          {
            ["Type"] = 6,
            ["Key"] = "option10",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [12]
          {
            ["Type"] = 4,
            ["Name"] = "Timer Color Enabled",
            ["Value"] = true,
            ["Key"] = "timerColorEnabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "set to 'false' to disable changes in the color of the time left text",
          }, -- [13]
          {
            ["Type"] = 2,
            ["Max"] = 20,
            ["Desc"] = "in seconds, affects the color of the text",
            ["Min"] = 1,
            ["Fraction"] = true,
            ["Value"] = 8,
            ["Key"] = "timeLeftWarning",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Time Left Warning",
          }, -- [14]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "in seconds, affects the color of the text",
            ["Min"] = 1,
            ["Fraction"] = true,
            ["Value"] = 3,
            ["Key"] = "timeLeftCritical",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Time Left Critical",
          }, -- [15]
          {
            ["Type"] = 1,
            ["Name"] = "Warning Color",
            ["Value"] = {
              1, -- [1]
              0.8705882352941177, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "warningColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "color when the time left entered in a warning zone",
          }, -- [16]
          {
            ["Type"] = 1,
            ["Name"] = "Critical Color",
            ["Value"] = {
              1, -- [1]
              0.07450980392156863, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Key"] = "criticalColor",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "color when the time left is critical",
          }, -- [17]
        },
        ["SpellIds"] = {
        },
        ["PlaterCore"] = 1,
        ["version"] = -1,
        ["Name"] = "Aura - Blink by Time Left [Plater]",
        ["NpcNames"] = {
        },
        ["__TrashAt"] = 1627923627,
      }, -- [20]
      {
        ["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
        ["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
        ["OptionsValues"] = {
        },
        ["ScriptType"] = 2,
        ["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
        ["Time"] = 1625793282,
        ["url"] = "",
        ["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
        ["Enabled"] = true,
        ["Revision"] = 1154,
        ["semver"] = "",
        ["Author"] = "Tercioo-Sylvanas",
        ["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
        ["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
        ["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
        ["Options"] = {
          {
            ["Type"] = 6,
            ["Key"] = "option1",
            ["Value"] = 0,
            ["Name"] = "Blank Line",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [1]
          {
            ["Type"] = 5,
            ["Key"] = "option2",
            ["Value"] = "Cast start animation settings",
            ["Name"] = "Option 2",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
            ["Desc"] = "",
          }, -- [2]
          {
            ["Type"] = 6,
            ["Key"] = "option4",
            ["Value"] = 0,
            ["Name"] = "Blank Space",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [3]
          {
            ["Type"] = 4,
            ["Key"] = "useCastbarColor",
            ["Value"] = true,
            ["Name"] = "Cast Bar Color Enabled",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
            ["Desc"] = "When enabled, changes the cast bar color,",
          }, -- [4]
          {
            ["Type"] = 1,
            ["Key"] = "castbarColor",
            ["Value"] = {
              1, -- [1]
              0.4313725490196079, -- [2]
              0, -- [3]
              1, -- [4]
            },
            ["Name"] = "Cast Bar Color",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
            ["Desc"] = "Color of the cast bar.",
          }, -- [5]
          {
            ["Type"] = 6,
            ["Key"] = "option7",
            ["Value"] = 0,
            ["Name"] = "Blank Line",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
            ["Desc"] = "",
          }, -- [6]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
            ["Min"] = 0.05,
            ["Key"] = "flashDuration",
            ["Value"] = 0.4,
            ["Name"] = "Flash Duration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [7]
          {
            ["Type"] = 2,
            ["Max"] = 10,
            ["Desc"] = "Increases the cast bar height by this value",
            ["Min"] = 0,
            ["Key"] = "castBarHeight",
            ["Value"] = 5,
            ["Name"] = "Cast Bar Height Mod",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = false,
          }, -- [8]
          {
            ["Type"] = 2,
            ["Max"] = 1,
            ["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
            ["Min"] = 0.1,
            ["Key"] = "shakeDuration",
            ["Value"] = 0.2,
            ["Name"] = "Shake Duration",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Fraction"] = true,
          }, -- [9]
          {
            ["Type"] = 2,
            ["Max"] = 100,
            ["Desc"] = "How strong is the shake.",
            ["Min"] = 2,
            ["Key"] = "shakeAmplitude",
            ["Value"] = 8,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Amplitude",
          }, -- [10]
          {
            ["Type"] = 2,
            ["Max"] = 80,
            ["Desc"] = "How fast the shake moves.",
            ["Min"] = 1,
            ["Key"] = "shakeFrequency",
            ["Value"] = 40,
            ["Fraction"] = false,
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
            ["Name"] = "Shake Frequency",
          }, -- [11]
          {
            ["Type"] = 7,
            ["Name"] = "Timer (Key is SpellId and Value is Time)",
            ["Value"] = {
              {
                "350421", -- [1]
                "5", -- [2]
              }, -- [1]
              {
                "355787", -- [1]
                "15", -- [2]
              }, -- [2]
              {
                "348513", -- [1]
                "14", -- [2]
              }, -- [3]
              {
                "348513", -- [1]
                "14", -- [2]
              }, -- [4]
            },
            ["Key"] = "timerList",
            ["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
            ["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
          }, -- [12]
        },
        ["SpellIds"] = {
          350421, -- [1]
          355787, -- [2]
          348513, -- [3]
        },
        ["PlaterCore"] = 1,
        ["version"] = -1,
        ["Name"] = "Cast - Alert + Timer [P]",
        ["NpcNames"] = {
        },
        ["__TrashAt"] = 1627923627,
      }, -- [21]
    },
    ["range_check_enabled"] = false,
    ["castbar_target_anchor"] = {
      ["side"] = 11,
    },
    ["script_auto_imported"] = {
      ["Unit - Important"] = 11,
      ["Aura - Buff Alert"] = 13,
      ["Cast - Very Important"] = 12,
      ["Explosion Affix M+"] = 11,
      ["Aura - Debuff Alert"] = 11,
      ["Unit - Show Energy"] = 11,
      ["Cast - Castbar is Timer [P]"] = 2,
      ["Cast - Ultra Important"] = 11,
      ["Cast - Big Alert"] = 12,
      ["Color Change"] = 1,
      ["Cast - Small Alert"] = 11,
      ["Auto Set Skull"] = 11,
      ["Aura - Invalidate Unit"] = 1,
      ["Spiteful Affix"] = 3,
      ["Unit Power"] = 1,
      ["Unit - Main Target"] = 11,
      ["Aura - Blink Time Left"] = 13,
      ["Aura Border Color"] = 1,
      ["Countdown"] = 11,
      ["Unit - Health Markers"] = 12,
      ["Cast - Frontal Cone"] = 11,
      ["Fixate"] = 11,
      ["Cast - Tank Interrupt"] = 12,
      ["Cast - Alert + Timer [P]"] = 2,
      ["Cast - Important Target [P]"] = 1,
      ["Fixate On You"] = 11,
    },
    ["castbar_target_font"] = "Gilroy Bold",
    ["cast_statusbar_texture"] = "REEEE",
    ["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark8",
    ["dps"] = {
      ["colors"] = {
        ["aggro"] = {
          0.780392156862745, -- [1]
          0.250980392156863, -- [2]
          0.250980392156863, -- [3]
        },
        ["notontank"] = {
          0.294117647058824, -- [1]
          0.686274509803922, -- [2]
          0.298039215686275, -- [3]
        },
        ["noaggro"] = {
          0.294117647058824, -- [1]
          0.686274509803922, -- [2]
          0.298039215686275, -- [3]
        },
        ["pulling"] = {
          nil, -- [1]
          0.458823529411765, -- [2]
          0.101960784313725, -- [3]
        },
      },
    },
    ["tank"] = {
      ["colors"] = {
        ["anothertank"] = {
          0.5529411764705883, -- [1]
          0, -- [2]
          0.8470588235294118, -- [3]
        },
        ["aggro"] = {
          0.294117647058824, -- [1]
          0.686274509803922, -- [2]
          0.298039215686275, -- [3]
        },
        ["noaggro"] = {
          0.780392156862745, -- [1]
          0.250980392156863, -- [2]
          0.250980392156863, -- [3]
        },
        ["nocombat"] = {
          0.780392156862745, -- [1]
          0.250980392156863, -- [2]
          0.250980392156863, -- [3]
        },
        ["pulling"] = {
          nil, -- [1]
          0.458823529411765, -- [2]
          0.101960784313725, -- [3]
        },
      },
    },
    ["color_override_colors"] = {
      [3] = {
        0.780392156862745, -- [1]
        0.250980392156863, -- [2]
        0.250980392156863, -- [3]
      },
      [4] = {
        0.854901960784314, -- [1]
        0.772549019607843, -- [2]
        0.36078431372549, -- [3]
      },
      [5] = {
        0.294117647058824, -- [1]
        0.686274509803922, -- [2]
        0.298039215686275, -- [3]
      },
    },
    ["cast_statusbar_spark_width"] = 4,
    ["target_shady_enabled"] = false,
  }
end
